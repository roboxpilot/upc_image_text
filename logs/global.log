2024-12-18 18:31:56,937 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:31:56,947 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:31:56,957 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:32:05,554 - controllers.conversation_controller - INFO - conversation_controller.py:40 - Received conversation request for conversation ID: conv_1734526925484
2024-12-18 18:32:05,554 - controllers.conversation_controller - DEBUG - conversation_controller.py:91 - Formatted messages: [
  {
    "role": "user",
    "content": "hi"
  }
]
2024-12-18 18:32:05,554 - utils.helpers - INFO - helpers.py:13 - Checking if message is product-related
2024-12-18 18:32:05,555 - utils.helpers - DEBUG - helpers.py:18 - Sending classification prompt to AI: 
You are an AI assistant tasked with determining whether a given conversation message is related to ...
2024-12-18 18:32:05,555 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:32:06,353 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:32:06,353 - utils.helpers - DEBUG - helpers.py:20 - Received classification response: {"classification": "general_conversation"}
2024-12-18 18:32:06,354 - utils.helpers - INFO - helpers.py:24 - Message classified as: general_conversation
2024-12-18 18:32:06,354 - controllers.conversation_controller - INFO - conversation_controller.py:212 - Handling general conversation
2024-12-18 18:32:06,354 - services.conversation_service - INFO - conversation_service.py:52 - Handling general conversation
2024-12-18 18:32:06,355 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:32:06,741 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 18:32:06,741 - services.conversation_service - DEBUG - conversation_service.py:55 - General conversation response: Hello! How may I assist you today?
2024-12-18 18:32:06,741 - controllers.conversation_controller - INFO - conversation_controller.py:215 - general Handling conversation completed in 0.39 seconds
2024-12-18 18:32:06,741 - controllers.conversation_controller - DEBUG - conversation_controller.py:216 - General conversation response: Hello! How may I assist you today?
2024-12-18 18:32:30,591 - controllers.conversation_controller - INFO - conversation_controller.py:40 - Received conversation request for conversation ID: conv_1734526925484
2024-12-18 18:32:30,591 - controllers.conversation_controller - DEBUG - conversation_controller.py:91 - Formatted messages: [
  {
    "role": "user",
    "content": "hi"
  },
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  }
]
2024-12-18 18:32:30,592 - utils.helpers - INFO - helpers.py:13 - Checking if message is product-related
2024-12-18 18:32:30,592 - utils.helpers - DEBUG - helpers.py:18 - Sending classification prompt to AI: 
You are an AI assistant tasked with determining whether a given conversation message is related to ...
2024-12-18 18:32:30,592 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:32:31,160 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:32:31,160 - utils.helpers - DEBUG - helpers.py:20 - Received classification response: {"classification": "product_related"}
2024-12-18 18:32:31,160 - utils.helpers - INFO - helpers.py:24 - Message classified as: product_related
2024-12-18 18:32:31,161 - controllers.conversation_controller - INFO - conversation_controller.py:94 - Conversation is product-related
2024-12-18 18:32:31,161 - controllers.conversation_controller - INFO - conversation_controller.py:97 - Starting to handle conversation
2024-12-18 18:32:31,161 - services.conversation_service - INFO - conversation_service.py:28 - Handling conversation for conversation ID: conv_1734526925484
2024-12-18 18:32:31,161 - services.conversation_service - DEBUG - conversation_service.py:11 - Formatting 3 messages
2024-12-18 18:32:31,161 - services.conversation_service - DEBUG - conversation_service.py:46 - Extracting plan with schema: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '', 'voice_allowance': ''}
2024-12-18 18:32:32,487 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_name: 
2024-12-18 18:32:32,487 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_description: 
2024-12-18 18:32:32,487 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_family: GSM
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_group: Prepaid
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_offer_price: 
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for pop_type: Normal
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_category: Base Price
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_mode: Non-Recurring
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_specification_type: ADDON
2024-12-18 18:32:32,488 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for data_allowance: 5gb
2024-12-18 18:32:32,489 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for voice_allowance: 
2024-12-18 18:32:32,489 - services.conversation_service - DEBUG - conversation_service.py:48 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:32:32,489 - controllers.conversation_controller - INFO - conversation_controller.py:100 - extracted_plan Handling conversation completed in 1.33 seconds
2024-12-18 18:32:32,489 - controllers.conversation_controller - DEBUG - conversation_controller.py:101 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:32:32,489 - controllers.conversation_controller - DEBUG - conversation_controller.py:122 - Final extracted plan: {
  "product_name": "",
  "product_description": "",
  "product_family": "GSM",
  "product_group": "Prepaid",
  "product_offer_price": "",
  "pop_type": "Normal",
  "price_category": "Base Price",
  "price_mode": "Non-Recurring",
  "product_specification_type": "ADDON",
  "data_allowance": "5gb",
  "voice_allowance": ""
}
2024-12-18 18:32:32,490 - services.plan_extractor_service - INFO - plan_extractor_service.py:87 -  the prompt for conformation
2024-12-18 18:32:32,490 - services.plan_extractor_service - INFO - plan_extractor_service.py:88 - 
Please confirm whether confirmation is made by the user by going through the conversations:
    - Consider it confirmed if the user explicitly states they want to continue or proceed with the full details provided.
    - If the user says "proceed" after receiving all necessary details, count it as confirmation.
    - Ignore conversations where the user asks for changes or where additional information is requested but not yet provided.
    - If the user says doesnt say "yes" or "proceed" do not count it as confirmation (Recurring or non Recurring is not confirmation)
    - If the user says "proceed" but hasn't been given all the necessary details yet, do not count it as confirmation.
conversations:
[
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  }
]
Expected output:
reply with {'value':'true/false'}

    
2024-12-18 18:32:32,900 - services.plan_extractor_service - INFO - plan_extractor_service.py:103 -  the value got for conformation message is false
2024-12-18 18:32:32,901 - controllers.conversation_controller - INFO - conversation_controller.py:132 - Confirmation not provided, checking for change confirmation.
2024-12-18 18:32:32,901 - services.plan_extractor_service - INFO - plan_extractor_service.py:69 - The prompt for change confirmation
2024-12-18 18:32:32,901 - services.plan_extractor_service - INFO - plan_extractor_service.py:70 - 
    
    **ONLY CONSIDER THE USER MESSAGE HERE WHAT USER IS TELLING 
    The focus should be on the user's message, not the assistant message
    **If user is mentioning any product details with values then it's not a change**
    Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions MODIFYING or CHANGING a SPECIFIC existing product's DETAILS with clear intent to alter the specification.
    - EXCLUDE scenarios that are merely:
      * Providing a name for the first time
      * Adding basic initial details to a draft product
      * Simple first-time specification of product attributes
    - Look for more definitive change language like:
      * "I want to change..."
      * "Modify the existing..."
      * "Revise the product..." 
    - The message must show a clear INTENT TO ALTER an existing, fully defined product.
    - Generic statements about adding or naming a product are NOT change requests.
Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions modifying,changing a SPECIFIC existing product's details.
    - This is NOT a change request if the user is creating a new product from scratch.
    - Look for clear language like "I want to change", "modify" or "revise" an existing product.
    - Ignore general product creation requests or first-time product specification discussions.
    - The message must indicate an intent to ALTER something that already exists.
    
    - Examples:
  IS a change request:
  * "update the product name"
  * "change the price mode"
  * "modify the data allowance"

  NOT a change request:
  * "update product name to daily5gb"
  * "change price mode to normal"
  * "set data allowance to 5GB"

User message:
[
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  }
]

Expected output:
reply with {'value':'true/false'}

2024-12-18 18:32:33,420 - services.plan_extractor_service - INFO - plan_extractor_service.py:82 - The value got for change confirmation is false
2024-12-18 18:32:33,421 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:32:34,167 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 18:32:34,167 - controllers.conversation_controller - INFO - conversation_controller.py:137 - extract plan to final message template in 3.01 seconds
2024-12-18 18:32:34,167 - controllers.conversation_controller - INFO - conversation_controller.py:138 - Sending final message as confirmation and change confirmation are both false.
2024-12-18 18:36:17,041 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:36:17,051 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:36:17,061 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:36:36,424 - controllers.conversation_controller - INFO - conversation_controller.py:40 - Received conversation request for conversation ID: conv_1734526925484
2024-12-18 18:36:36,424 - controllers.conversation_controller - DEBUG - conversation_controller.py:91 - Formatted messages: [
  {
    "role": "user",
    "content": "hi"
  },
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]
2024-12-18 18:36:36,424 - utils.helpers - INFO - helpers.py:13 - Checking if message is product-related
2024-12-18 18:36:36,425 - utils.helpers - DEBUG - helpers.py:18 - Sending classification prompt to AI: 
You are an AI assistant tasked with determining whether a given conversation message is related to ...
2024-12-18 18:36:36,425 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:36:39,895 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:36:39,896 - utils.helpers - DEBUG - helpers.py:20 - Received classification response: {"classification": "product_related"}
2024-12-18 18:36:39,896 - utils.helpers - INFO - helpers.py:24 - Message classified as: product_related
2024-12-18 18:36:39,896 - controllers.conversation_controller - INFO - conversation_controller.py:94 - Conversation is product-related
2024-12-18 18:36:39,896 - controllers.conversation_controller - INFO - conversation_controller.py:97 - Starting to handle conversation
2024-12-18 18:36:39,896 - services.conversation_service - INFO - conversation_service.py:28 - Handling conversation for conversation ID: conv_1734526925484
2024-12-18 18:36:39,896 - services.conversation_service - DEBUG - conversation_service.py:11 - Formatting 5 messages
2024-12-18 18:36:39,897 - services.conversation_service - DEBUG - conversation_service.py:46 - Extracting plan with schema: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '', 'voice_allowance': ''}
2024-12-18 18:36:40,747 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_name: 
2024-12-18 18:36:40,748 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_description: 
2024-12-18 18:36:40,748 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_family: GSM
2024-12-18 18:36:40,748 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_group: Prepaid
2024-12-18 18:36:40,748 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_offer_price: 
2024-12-18 18:36:40,748 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for pop_type: Normal
2024-12-18 18:36:40,749 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_category: Base Price
2024-12-18 18:36:40,749 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_mode: Non-Recurring
2024-12-18 18:36:40,749 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_specification_type: ADDON
2024-12-18 18:36:40,749 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for data_allowance: 5gb
2024-12-18 18:36:40,749 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for voice_allowance: 
2024-12-18 18:36:40,750 - services.conversation_service - DEBUG - conversation_service.py:48 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:36:40,750 - controllers.conversation_controller - INFO - conversation_controller.py:100 - extracted_plan Handling conversation completed in 0.85 seconds
2024-12-18 18:36:40,750 - controllers.conversation_controller - DEBUG - conversation_controller.py:101 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:36:40,750 - controllers.conversation_controller - DEBUG - conversation_controller.py:122 - Final extracted plan: {
  "product_name": "",
  "product_description": "",
  "product_family": "GSM",
  "product_group": "Prepaid",
  "product_offer_price": "",
  "pop_type": "Normal",
  "price_category": "Base Price",
  "price_mode": "Non-Recurring",
  "product_specification_type": "ADDON",
  "data_allowance": "5gb",
  "voice_allowance": ""
}
2024-12-18 18:36:40,751 - services.plan_extractor_service - INFO - plan_extractor_service.py:87 -  the prompt for conformation
2024-12-18 18:36:40,751 - services.plan_extractor_service - INFO - plan_extractor_service.py:88 - 
Please confirm whether confirmation is made by the user by going through the conversations:
    - Consider it confirmed if the user explicitly states they want to continue or proceed with the full details provided.
    - If the user says "proceed" after receiving all necessary details, count it as confirmation.
    - Ignore conversations where the user asks for changes or where additional information is requested but not yet provided.
    - If the user says doesnt say "yes" or "proceed" do not count it as confirmation (Recurring or non Recurring is not confirmation)
    - If the user says "proceed" but hasn't been given all the necessary details yet, do not count it as confirmation.
conversations:
[
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]
Expected output:
reply with {'value':'true/false'}

    
2024-12-18 18:36:41,165 - services.plan_extractor_service - INFO - plan_extractor_service.py:103 -  the value got for conformation message is false
2024-12-18 18:36:41,165 - controllers.conversation_controller - INFO - conversation_controller.py:132 - Confirmation not provided, checking for change confirmation.
2024-12-18 18:36:41,165 - services.plan_extractor_service - INFO - plan_extractor_service.py:69 - The prompt for change confirmation
2024-12-18 18:36:41,165 - services.plan_extractor_service - INFO - plan_extractor_service.py:70 - 
    
    **ONLY CONSIDER THE USER MESSAGE HERE WHAT USER IS TELLING 
    The focus should be on the user's message, not the assistant message
    **If user is mentioning any product details with values then it's not a change**
    Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions MODIFYING or CHANGING a SPECIFIC existing product's DETAILS with clear intent to alter the specification.
    - EXCLUDE scenarios that are merely:
      * Providing a name for the first time
      * Adding basic initial details to a draft product
      * Simple first-time specification of product attributes
    - Look for more definitive change language like:
      * "I want to change..."
      * "Modify the existing..."
      * "Revise the product..." 
    - The message must show a clear INTENT TO ALTER an existing, fully defined product.
    - Generic statements about adding or naming a product are NOT change requests.
Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions modifying,changing a SPECIFIC existing product's details.
    - This is NOT a change request if the user is creating a new product from scratch.
    - Look for clear language like "I want to change", "modify" or "revise" an existing product.
    - Ignore general product creation requests or first-time product specification discussions.
    - The message must indicate an intent to ALTER something that already exists.
    
    - Examples:
  IS a change request:
  * "update the product name"
  * "change the price mode"
  * "modify the data allowance"

  NOT a change request:
  * "update product name to daily5gb"
  * "change price mode to normal"
  * "set data allowance to 5GB"

User message:
[
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]

Expected output:
reply with {'value':'true/false'}

2024-12-18 18:36:41,676 - services.plan_extractor_service - INFO - plan_extractor_service.py:82 - The value got for change confirmation is true
2024-12-18 18:36:41,676 - controllers.conversation_controller - INFO - conversation_controller.py:151 - Change confirmation is true. Reordering extracted plan.
2024-12-18 18:36:42,157 - services.plan_extractor_service - INFO - plan_extractor_service.py:61 - Extracted field name: pop_type
2024-12-18 18:36:42,157 - controllers.conversation_controller - ERROR - conversation_controller.py:231 - Error in conversation_endpoint: local variable 'change_time' referenced before assignment
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/controllers/conversation_controller.py", line 189, in conversation_endpoint
    logger.info(f"CHANGE TIME CHECK {change_e - change_time:.2f} seconds")
UnboundLocalError: local variable 'change_time' referenced before assignment
2024-12-18 18:39:06,104 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:39:06,113 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:39:06,122 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:39:16,549 - controllers.conversation_controller - INFO - conversation_controller.py:40 - Received conversation request for conversation ID: conv_1734526925484
2024-12-18 18:39:16,550 - controllers.conversation_controller - DEBUG - conversation_controller.py:91 - Formatted messages: [
  {
    "role": "user",
    "content": "hi"
  },
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]
2024-12-18 18:39:16,550 - utils.helpers - INFO - helpers.py:13 - Checking if message is product-related
2024-12-18 18:39:16,551 - utils.helpers - DEBUG - helpers.py:18 - Sending classification prompt to AI: 
You are an AI assistant tasked with determining whether a given conversation message is related to ...
2024-12-18 18:39:16,551 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:39:17,140 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:39:17,140 - utils.helpers - DEBUG - helpers.py:20 - Received classification response: {"classification": "product_related"}
2024-12-18 18:39:17,140 - utils.helpers - INFO - helpers.py:24 - Message classified as: product_related
2024-12-18 18:39:17,140 - controllers.conversation_controller - INFO - conversation_controller.py:94 - Conversation is product-related
2024-12-18 18:39:17,140 - controllers.conversation_controller - INFO - conversation_controller.py:97 - Starting to handle conversation
2024-12-18 18:39:17,141 - services.conversation_service - INFO - conversation_service.py:28 - Handling conversation for conversation ID: conv_1734526925484
2024-12-18 18:39:17,141 - services.conversation_service - DEBUG - conversation_service.py:11 - Formatting 6 messages
2024-12-18 18:39:17,141 - services.conversation_service - DEBUG - conversation_service.py:46 - Extracting plan with schema: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '', 'voice_allowance': ''}
2024-12-18 18:39:17,965 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_name: 
2024-12-18 18:39:17,965 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_description: 
2024-12-18 18:39:17,965 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_family: GSM
2024-12-18 18:39:17,965 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_group: Prepaid
2024-12-18 18:39:17,965 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for product_offer_price: 
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for pop_type: Normal
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_category: Base Price
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for price_mode: Non-Recurring
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for product_specification_type: ADDON
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:152 - Using extracted value for data_allowance: 5gb
2024-12-18 18:39:17,966 - services.plan_extractor_service - DEBUG - plan_extractor_service.py:148 - Using default value for voice_allowance: 
2024-12-18 18:39:17,966 - services.conversation_service - DEBUG - conversation_service.py:48 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:39:17,966 - controllers.conversation_controller - INFO - conversation_controller.py:100 - extracted_plan Handling conversation completed in 0.83 seconds
2024-12-18 18:39:17,967 - controllers.conversation_controller - DEBUG - conversation_controller.py:101 - Extracted plan: {'product_name': '', 'product_description': '', 'product_family': 'GSM', 'product_group': 'Prepaid', 'product_offer_price': '', 'pop_type': 'Normal', 'price_category': 'Base Price', 'price_mode': 'Non-Recurring', 'product_specification_type': 'ADDON', 'data_allowance': '5gb', 'voice_allowance': ''}
2024-12-18 18:39:17,967 - controllers.conversation_controller - DEBUG - conversation_controller.py:122 - Final extracted plan: {
  "product_name": "",
  "product_description": "",
  "product_family": "GSM",
  "product_group": "Prepaid",
  "product_offer_price": "",
  "pop_type": "Normal",
  "price_category": "Base Price",
  "price_mode": "Non-Recurring",
  "product_specification_type": "ADDON",
  "data_allowance": "5gb",
  "voice_allowance": ""
}
2024-12-18 18:39:17,967 - services.plan_extractor_service - INFO - plan_extractor_service.py:87 -  the prompt for conformation
2024-12-18 18:39:17,967 - services.plan_extractor_service - INFO - plan_extractor_service.py:88 - 
Please confirm whether confirmation is made by the user by going through the conversations:
    - Consider it confirmed if the user explicitly states they want to continue or proceed with the full details provided.
    - If the user says "proceed" after receiving all necessary details, count it as confirmation.
    - Ignore conversations where the user asks for changes or where additional information is requested but not yet provided.
    - If the user says doesnt say "yes" or "proceed" do not count it as confirmation (Recurring or non Recurring is not confirmation)
    - If the user says "proceed" but hasn't been given all the necessary details yet, do not count it as confirmation.
conversations:
[
  {
    "role": "user",
    "content": "i want to change POP type"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]
Expected output:
reply with {'value':'true/false'}

    
2024-12-18 18:39:18,401 - services.plan_extractor_service - INFO - plan_extractor_service.py:103 -  the value got for conformation message is false
2024-12-18 18:39:18,401 - controllers.conversation_controller - INFO - conversation_controller.py:132 - Confirmation not provided, checking for change confirmation.
2024-12-18 18:39:18,402 - services.plan_extractor_service - INFO - plan_extractor_service.py:69 - The prompt for change confirmation
2024-12-18 18:39:18,402 - services.plan_extractor_service - INFO - plan_extractor_service.py:70 - 
    
    **ONLY CONSIDER THE USER MESSAGE HERE WHAT USER IS TELLING 
    The focus should be on the user's message, not the assistant message
    **If user is mentioning any product details with values then it's not a change**
    Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions MODIFYING or CHANGING a SPECIFIC existing product's DETAILS with clear intent to alter the specification.
    - EXCLUDE scenarios that are merely:
      * Providing a name for the first time
      * Adding basic initial details to a draft product
      * Simple first-time specification of product attributes
    - Look for more definitive change language like:
      * "I want to change..."
      * "Modify the existing..."
      * "Revise the product..." 
    - The message must show a clear INTENT TO ALTER an existing, fully defined product.
    - Generic statements about adding or naming a product are NOT change requests.
Please confirm whether the user wants to make changes to an EXISTING product specification by analyzing the provided conversation:
    - Consider it a change request ONLY if the user explicitly mentions modifying,changing a SPECIFIC existing product's details.
    - This is NOT a change request if the user is creating a new product from scratch.
    - Look for clear language like "I want to change", "modify" or "revise" an existing product.
    - Ignore general product creation requests or first-time product specification discussions.
    - The message must indicate an intent to ALTER something that already exists.
    
    - Examples:
  IS a change request:
  * "update the product name"
  * "change the price mode"
  * "modify the data allowance"

  NOT a change request:
  * "update product name to daily5gb"
  * "change price mode to normal"
  * "set data allowance to 5GB"

User message:
[
  {
    "role": "user",
    "content": "i want to change POP type"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]

Expected output:
reply with {'value':'true/false'}

2024-12-18 18:39:18,866 - services.plan_extractor_service - INFO - plan_extractor_service.py:82 - The value got for change confirmation is true
2024-12-18 18:39:18,867 - controllers.conversation_controller - INFO - conversation_controller.py:152 - Change confirmation is true. Reordering extracted plan.
2024-12-18 18:39:19,352 - services.plan_extractor_service - INFO - plan_extractor_service.py:61 - Extracted field name: pop_type
2024-12-18 18:39:19,353 - controllers.conversation_controller - INFO - conversation_controller.py:190 - CHANGE TIME CHECK 0.49 seconds
2024-12-18 18:39:19,449 - controllers.missing_info_controller - INFO - missing_info_controller.py:14 - Received missing info request for conversation ID: conv_1734526925484
2024-12-18 18:39:19,450 - services.missing_info_service - INFO - missing_info_service.py:15 - Initializing MissingInfoAdapter
2024-12-18 18:39:19,450 - services.missing_info_service - INFO - missing_info_service.py:32 - missing info request : conversationId='conv_1734526925484' currentMessage=MessageItem(messageTime='2024-12-18 18:39:19', messageId='msg_1734527356351', source='bpe', status='failed', messageType='text', payload=MessageContent(text='POP type is missing, possible values are Normal,Adhoc,CartLevel', image=None)) sender=User(name='User', phoneNumber='conv_01JFCXQWJ4C3VGA7WZC0MCQ1X6') previousMessages=[MessageItem(messageTime='2024-12-18 18:32:05', messageId='msg_1734526925484', source='ui', status='success', messageType='text', payload=MessageContent(text='hi', image=None)), MessageItem(messageTime='2024-12-18 18:32:06', messageId='msg_1734526925484', source='AI', status='success', messageType='text', payload=MessageContent(text='Hello! How may I assist you today?', image=None)), MessageItem(messageTime='2024-12-18 18:32:30', messageId='msg_1734526950313', source='ui', status='success', messageType='text', payload=MessageContent(text='i want to create a product with 5gb data', image=None)), MessageItem(messageTime='2024-12-18 18:32:34', messageId='msg_1734526950313', source='AI', status='success', messageType='text', payload=MessageContent(text='Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?', image=None)), MessageItem(messageTime='2024-12-18 18:36:36', messageId='msg_1734527196340', source='ui', status='success', messageType='text', payload=MessageContent(text='i want to change POP type', image=None)), MessageItem(messageTime='2024-12-18 18:39:16', messageId='msg_1734527356351', source='ui', status='success', messageType='text', payload=MessageContent(text='i want to change POP type', image=None))]
2024-12-18 18:39:19,451 - services.missing_info_service - INFO - missing_info_service.py:34 - Processing missing info request for field: POP type is missing, possible values are Normal,Adhoc,CartLevel
2024-12-18 18:39:19,451 - services.missing_info_service - DEBUG - missing_info_service.py:18 - Generating missing info prompt for field: POP type is missing, possible values are Normal,Adhoc,CartLevel
2024-12-18 18:39:19,451 - services.missing_info_service - DEBUG - missing_info_service.py:27 - Generated prompt: 
    As a sales executive named AARYA (Automated AI Responder for Your Applications), you are having a conversation with a customer about creating a plan. The customer has provided some information, but the 'POP type is missing, possible values are Normal,Adhoc,CartLevel' is missing. Your task is to generate a polite and professional response asking for the missing information.

    Conversation history:
    [
  {
    "role": "user",
    "content": "hi"
  },
  {
    "role": "assistant",
    "content": "Hello! How may I assist you today?"
  },
  {
    "role": "user",
    "content": "i want to create a product with 5gb data"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: \n* Product Description: \n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: \n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 5gb\n* Voice Allowance: \n\nWould you like to update any of these details or proceed as is?"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  },
  {
    "role": "user",
    "content": "i want to change POP type"
  }
]

    Missing information: POP type is missing, possible values are Normal,Adhoc,CartLevel
    Based on the conversation, please generate a short and simple response asking for the missing information, in common language. The response should be polite and direct, without including phrases like "Here is a possible response."

    Only provide the response asking for the missing information.
    
2024-12-18 18:39:19,451 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:39:19,926 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with updating the POP type, could you please let me know which type you would prefer: Normal, Adhoc, or CartLevel?
2024-12-18 18:39:19,926 - services.missing_info_service - DEBUG - missing_info_service.py:37 - Missing info response: To proceed with updating the POP type, could you please let me know which type you would prefer: Normal, Adhoc, or CartLevel?
2024-12-18 18:39:19,926 - controllers.missing_info_controller - DEBUG - missing_info_controller.py:18 - Missing info response: To proceed with updating the POP type, could you please let me know which type you would prefer: Normal, Adhoc, or CartLevel?
