2024-10-14 19:25:56,505 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-14 19:25:56,519 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-14 19:25:56,531 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-14 19:26:10,035 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-14 19:26:10,565 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hi, thanks for the details so far! Could you please clarify what type of product you're interested in? Is it an add-on or a basic product?"
2024-10-14 19:36:49,256 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-14 19:36:49,271 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-14 19:36:49,283 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-14 19:36:55,570 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-14 19:36:56,143 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hi, thanks for sharing the details! Could you please let me know what type of product you're interested in - is it an add-on or basic plan?"
2024-10-15 14:13:39,791 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-15 14:13:39,805 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-15 14:13:39,816 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-15 18:04:30,592 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-15 18:04:44,635 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: RetryError[<Future at 0x7fa7fa052140 state=finished raised BadRequestError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 997, in _request
    return self._retry_request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1075, in _retry_request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_image_format'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7fa7fa052140 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7fa7fa052140 state=finished raised BadRequestError>]
2024-10-15 18:07:46,991 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-15 18:07:53,457 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: RetryError[<Future at 0x7fa7fa086c20 state=finished raised BadRequestError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_image_format'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7fa7fa086c20 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7fa7fa086c20 state=finished raised BadRequestError>]
2024-10-15 18:08:44,018 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-15 18:08:48,780 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: RetryError[<Future at 0x7fa7f8d31f00 state=finished raised BadRequestError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_image_format'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7fa7f8d31f00 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7fa7f8d31f00 state=finished raised BadRequestError>]
2024-10-15 18:13:25,634 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-15 18:13:35,764 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: RetryError[<Future at 0x7fa7f8d51120 state=finished raised BadRequestError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_image_format'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7fa7f8d51120 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7fa7f8d51120 state=finished raised BadRequestError>]
2024-10-17 17:47:18,183 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-17 17:47:18,201 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-17 17:47:18,213 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-17 17:49:08,219 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-17 17:49:08,231 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-17 17:49:08,243 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-17 17:49:23,403 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-17 17:49:36,544 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content from the image, here is the extracted JSON representation:

```json
{
  "plan_name": "Giga Pack",
  "validity": "N/A",
  "units": "GSM",
  "duration": "N/A",
  "price": "N/A"
}
```

Note: Some values are marked as "N/A" since they are not present in the image.
2024-10-17 17:49:36,545 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 17:49:40,264 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-17 18:01:12,681 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-17 18:01:19,422 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "duration": "4 Weeks",
  "price": "20 OMR"
}
```
2024-10-17 18:01:19,423 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:01:28,709 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-17 18:01:29,598 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:01:29,892 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-17 18:01:29,893 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:01:30,495 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: Hayyak 20
• Product Description: (Not Provided)
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 20
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-17 18:04:35,340 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-17 18:04:35,352 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-17 18:04:35,361 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-17 18:05:00,798 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-17 18:05:15,588 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "duration": null,
  "price": "20 OMR"
}
```
2024-10-17 18:05:15,589 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:16,089 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-17 18:05:16,930 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:17,259 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-17 18:05:17,259 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:17,854 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

* Product Name: Hayyak 20
* Product Description: null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-17 18:05:41,305 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:41,655 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-10-17 18:05:42,471 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:42,756 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-17 18:05:42,756 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:43,334 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: hyakk
• Product Description: null
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 25
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-17 18:05:54,723 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:55,089 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-17 18:05:55,860 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-17 18:05:56,166 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: True
2024-10-18 09:59:52,483 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 10:00:06,444 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 10:57:21,828 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-18 10:57:21,861 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-18 10:57:21,878 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-18 10:58:36,956 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-18 10:58:36,967 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-18 10:58:36,977 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-18 10:59:30,871 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 10:59:40,845 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 10:59:42,973 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 10:59:43,373 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here is a polite and professional response asking for the missing information:

"What is the name of the product you'd like to create a voice offer for?"
2024-10-18 12:41:48,952 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:00,235 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 12:42:01,150 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:01,596 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hi, I'm happy to help you with your voice offer plan! Before we move forward, could you please tell me what you'd like to name your product? This will help me create a personalized plan for you."
2024-10-18 12:42:06,989 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:07,362 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 12:42:08,401 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:08,814 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hey! We're almost there. Can you please tell me what you'd like to name your voice offer product? This will help me finalize your plan."
2024-10-18 12:42:29,868 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:30,247 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 12:42:31,021 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:31,330 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-18 12:42:31,330 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:33,175 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: voice econet offer
• Product Description: 
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 5
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-18 12:42:42,694 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:42:55,998 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-10-18 12:43:03,000 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:43:22,639 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: True
2024-10-18 12:44:34,865 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:44:35,258 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-10-18 12:44:35,259 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:44:35,621 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: You're welcome! Is there anything else I can assist you with today?
2024-10-18 12:45:08,521 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:45:09,042 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-10-18 12:45:09,044 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:45:09,574 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like our conversation just ended! You thanked me, I asked if there's anything else I can help you with, and you said no. If you change your mind or need something in the future, feel free to reach out! Have a great day!
2024-10-18 12:57:55,067 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:04,457 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "general_conversation"
}
2024-10-18 12:58:04,458 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:05,515 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like you want to start fresh! Let's begin a new conversation. How can I assist you today?
2024-10-18 12:58:15,974 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:16,363 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "general_conversation"
}
2024-10-18 12:58:16,364 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:16,725 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hi! I'm happy to help. What brings you here today?
2024-10-18 12:58:31,257 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:31,646 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-10-18 12:58:32,462 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:32,891 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "What's the name of the product you'd like to create an offer for? Could you please provide that so I can better assist you?"
2024-10-18 12:58:46,229 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:46,660 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 12:58:47,490 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:58:47,919 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Could you please tell me how much the 'data offer' product costs? We need the offer price or price of the product to move forward."
2024-10-18 12:59:01,460 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:01,869 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-10-18 12:59:02,739 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:06,348 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-18 12:59:06,349 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:09,233 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: data offer
• Product Description: No Description
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 6
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-18 12:59:34,430 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:34,861 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 12:59:35,645 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:46,405 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-18 12:59:46,405 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 12:59:49,326 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: data offer
• Product Description: No Description
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 6
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-18 13:01:30,114 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 13:01:30,559 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-18 13:01:31,396 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 13:01:31,772 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: True
2024-10-18 13:02:13,648 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 13:02:14,061 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "general_conversation" }
2024-10-18 13:02:14,062 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-18 13:02:14,450 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hi there! It seems like you're ready to start creating a product. What kind of product are you thinking of?
2024-10-20 13:23:12,055 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-20 13:23:12,096 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-20 13:23:12,130 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 11:08:09,597 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 11:08:09,612 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 11:08:09,623 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 12:55:00,852 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 12:55:01,973 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 192, in retry_sync
    response = func(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 742, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1277, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 954, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1058, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 189, in retry_sync
    for attempt in max_retries:
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x106602d10 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sachinpb/PycharmProjects/upc_image_text/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/patch.py", line 291, in new_create_sync
    response = retry_sync(
               ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 227, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
2024-10-21 12:56:42,421 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 12:56:43,445 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 192, in retry_sync
    response = func(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 742, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1277, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 954, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1058, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 189, in retry_sync
    for attempt in max_retries:
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x107519690 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sachinpb/PycharmProjects/upc_image_text/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/patch.py", line 291, in new_create_sync
    response = retry_sync(
               ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 227, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
2024-10-21 12:58:09,681 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 12:58:10,487 - services.ai_client_service - ERROR - ai_client_service.py:92 - Error in OpenAI image API call: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 192, in retry_sync
    response = func(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 742, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1277, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 954, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/openai/_base_client.py", line 1058, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 189, in retry_sync
    for attempt in max_retries:
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x10752ba10 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sachinpb/PycharmProjects/upc_image_text/services/ai_client_service.py", line 76, in make_image_api_call
    response = image_client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/patch.py", line 291, in new_create_sync
    response = retry_sync(
               ^^^^^^^^^^^
  File "/opt/homebrew/anaconda3/envs/upc/lib/python3.11/site-packages/instructor/retry.py", line 227, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: Error code: 400 - {'error': {'message': 'Invalid base64 image_url.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_base64'}}
2024-10-21 12:59:59,775 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 12:59:59,789 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 12:59:59,801 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 13:00:16,312 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:01:07,590 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 13:01:07,605 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 13:01:07,616 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 13:01:16,621 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:01:31,851 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format based on the provided image:

```json
{
  "plan_name": "BOJ",
  "validity": "Not specified",
  "units": {
    "off_net_minutes": 0,
    "on_net_minutes": 20,
    "peak_minutes": 10
  },
  "duration": "Not specified",
  "price": 0.60
}
``` 

Feel free to adjust any fields as necessary!
2024-10-21 13:02:30,091 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:02:31,136 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"Classification": "product_related"
}
2024-10-21 13:02:34,726 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:02:35,240 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 13:02:35,241 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:02:35,944 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 13:36:39,237 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 13:36:39,253 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 13:36:39,266 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 13:37:06,099 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:37:10,645 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the corresponding JSON representation:

```json
{
    "plan_name": "BOJ",
    "validity": "unknown",
    "units": {
        "offnet_minutes": 0,
        "onnet_minutes": 20,
        "peak_minutes": 10
    },
    "duration": "unknown",
    "price": "$0.60"
}
``` 

Note: Validity and duration are not specified in the image, so they are marked as "unknown."
2024-10-21 13:37:10,648 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:37:11,836 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 13:43:16,961 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:43:20,880 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "duration": "4 Weeks",
  "price": "20 OMR"
}
```
2024-10-21 13:43:20,882 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:43:21,789 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 13:43:22,915 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:43:23,644 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 13:43:23,645 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:43:24,563 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: Hayyak 20
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 20
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 13:49:16,796 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:49:19,970 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content formatted in JSON:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "price": "20 OMR"
}
```
2024-10-21 13:49:19,972 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:49:20,703 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 13:49:21,834 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:49:22,529 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 13:49:22,530 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:49:23,439 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

• Product Name: Hayyak 20
• Product Description: null
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 20
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 13:52:12,041 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:52:14,975 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the provided image, here is the extracted content formatted as JSON:

```json
{
  "plan_name": "BOJ",
  "validity": "Not specified",
  "units": {
    "OffNet": "0 Min",
    "OnNet": "20 Min",
    "Peak": "10 Min"
  },
  "duration": "Not specified",
  "price": "$0.60"
}
```

Note: The validity and duration were not specified in the image content.
2024-10-21 13:52:14,978 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:52:15,958 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-10-21 13:52:17,127 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:52:17,843 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 13:52:17,844 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:52:18,783 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ
• Product Description: null
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 13:53:46,083 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:53:48,813 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "plan_name": "BOJ",
  "validity": "",
  "units": {
    "off_net": "0 Min",
    "on_net": "20 Min",
    "peak": "10 Min"
  },
  "duration": "",
  "price": "$0.60"
}
``` 

Note: The validity and duration fields are empty because that information is not provided in the text.
2024-10-21 13:53:48,814 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:53:49,550 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 13:57:13,198 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 13:57:16,394 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the JSON representation:

```json
{
  "plan_name": "BOJ",
  "validity": "0 Min OffNet, 20 Min OnNet",
  "units": {
    "OffNet": "0 Min",
    "OnNet": "20 Min"
  },
  "duration": "Peak 10 Min",
  "price": "$0.60"
}
```
2024-10-21 13:57:16,396 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:57:17,229 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 13:57:18,389 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:57:19,101 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 13:57:19,102 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 13:57:20,025 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 14:00:12,322 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 14:00:19,039 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content of the image, here is the JSON representation:

```json
{
  "plan_name": "BOJ OffNet",
  "validity": "Not specified",
  "units": {
    "off_net_minutes": 0,
    "on_net_minutes": 20,
    "peak_minutes": 10
  },
  "duration": "Not specified",
  "price": "$0.60"
}
``` 

Feel free to modify any of the values as needed!
2024-10-21 14:00:19,041 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:00:19,754 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-10-21 14:00:20,987 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:00:21,596 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 14:00:21,597 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:00:22,621 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ OffNet
• Product Description: No description provided
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 14:01:45,067 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 14:01:49,356 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content from the image formatted in JSON:

```json
{
  "plan_name": "BOJ",
  "validity": "N/A",
  "units": {
    "off_net": "0 Min",
    "on_net": "20 Min",
    "peak": "10 Min"
  },
  "duration": "N/A",
  "price": "$0.60"
}
```
2024-10-21 14:01:49,358 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:01:50,100 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 14:01:51,213 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:01:51,812 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 14:01:51,813 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:01:52,733 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 14:05:18,593 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 14:05:22,556 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here's the JSON representation:

```json
{
  "plan_name": "BOJ",
  "validity": "Not specified",
  "units": {
    "off_net_minutes": "0",
    "on_net_minutes": "20",
    "peak_minutes": "10"
  },
  "duration": "Not specified",
  "price": "$0.60"
}
```
2024-10-21 14:05:22,558 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:05:23,476 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 14:11:10,966 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 14:11:14,404 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content from the image formatted in JSON:

```json
{
  "plan_name": "BOJ OffNet",
  "validity": null,
  "units": {
    "off_net_minutes": 0,
    "on_net_minutes": 20,
    "peak_minutes": 10
  },
  "duration": null,
  "price": "$0.60"
}
```

Note: The validity and duration fields are marked as null since that information is not provided in the image.
2024-10-21 14:11:14,406 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:11:15,243 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 14:11:16,556 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:11:17,125 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: False
2024-10-21 14:11:17,126 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:11:18,089 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: BOJ OffNet
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 14:30:49,974 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 14:30:49,988 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 14:30:50,000 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 14:31:10,550 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 14:31:15,881 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the JSON representation:

```json
{
  "plan_name": "BOJ",
  "validity": "Not specified",
  "units": {
    "off_net": "0 Min",
    "on_net": "20 Min",
    "peak": "10 Min"
  },
  "duration": "Not specified",
  "price": "$0.60"
}
```
2024-10-21 14:31:15,883 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:31:17,104 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 14:31:18,350 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:31:19,147 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: null
• Product Description: null
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 0.60
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 14:34:08,074 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 14:34:08,819 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-21 15:26:27,852 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 15:26:33,998 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "duration": "4 Weeks",
  "price": "20 OMR"
}
```
2024-10-21 15:26:34,000 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:26:34,712 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 15:26:35,738 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:26:36,450 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 15:34:10,679 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 15:34:10,694 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 15:34:10,705 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 15:34:36,186 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 15:34:40,185 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "price": "20 OMR"
}
```
2024-10-21 15:34:40,188 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:34:40,903 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-21 15:34:41,823 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:34:42,532 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: Hayyak 20
• Product Description: 
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 20
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON

Would you like to update any of these details or proceed as is?
2024-10-21 15:36:44,864 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 15:36:44,879 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 15:36:44,890 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 15:37:59,018 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 15:38:03,146 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "price": "20 OMR",
  "duration": "5% VAT included"
}
```
2024-10-21 15:38:28,077 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:38:28,842 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 15:43:20,801 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 15:43:20,816 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 15:43:20,827 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 15:43:44,028 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 15:43:49,154 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the JSON representation based on the content extracted from the image:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "price": "20 OMR"
}
```
2024-10-21 15:43:49,156 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:43:49,870 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-21 15:45:08,640 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 15:45:08,655 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 15:45:08,666 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-21 15:45:19,346 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-21 15:45:23,349 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "price": "20 OMR"
}
```
2024-10-21 15:45:23,352 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:45:24,062 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-10-21 15:45:25,093 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-21 15:45:25,900 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

• Product Name: Hayyak 20
• Product Description: None
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: 20
• Pop Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: ADDON
• Data Allowance: 34 GB
• Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-21 19:34:30,403 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-21 19:34:30,416 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-21 19:34:30,427 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 14:37:35,779 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 14:37:35,794 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 14:37:35,804 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 14:38:42,815 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:38:43,367 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-10-23 14:38:44,817 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:38:45,626 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Null
* Product Description: Null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: Null
* Promotion Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Addon
* Data Allowance: 9GB
* Voice Allowance: Null

Would you like to update any of these details or proceed as is?
2024-10-23 14:38:56,785 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:00,603 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 14:39:01,986 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:02,526 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but we're missing one crucial piece of information to proceed - the name of the product. Could you please provide a name for this product?"
2024-10-23 14:39:35,053 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:35,571 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-23 14:39:36,886 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:37,774 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
• Product Name: 9d data pack
• Product Description: Not Available
• Product Family: GSM
• Product Group: Prepaid
• Product Offer Price: Not Available
• POP Type: Normal
• Price Category: Base Price
• Price Mode: Non-Recurring
• Product Specification Type: Addon
• Data Allowance: 9GB
• Voice Allowance: Not Available

Would you like to update any of these details or proceed as is?
2024-10-23 14:39:51,583 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:52,260 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 14:39:53,694 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:39:54,336 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize for the delay. We're missing one more piece of information - the price for the '9d data pack'. Could you please provide the price for this product?"
2024-10-23 14:40:03,629 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:40:04,638 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-23 14:40:16,334 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:40:17,217 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 9d data pack
  Data Allowance: Not Available
* Product Description: Not Available
  Product Family: GSM
* Product Group: Prepaid
  Product Offer Price: 9
* Product Price Category: Base Price
  Product Price Mode: Non-Recurring
* Product Specifications Type: Addon
  Data Allowance: 9GB
* Voice Allowance: Not Available
  Product Type: Normal

Would you like to update any of these details or proceed as is?
2024-10-23 14:40:44,805 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:40:46,086 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-23 14:55:21,957 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 14:55:21,968 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 14:55:21,979 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 14:55:50,497 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:56:02,475 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-10-23 14:56:02,476 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:56:03,024 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like you've already confirmed something, but I'm not quite sure what that is. Could you please remind me what you're confirming with your "yes" so we can continue the conversation?
2024-10-23 14:56:08,165 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:56:09,679 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 14:56:11,054 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 14:56:11,808 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product name: 
* Product description: 
* Product family: GSM
* Product group: Prepaid
* Product offer price: 1
* Product specification type: 
* Data allowance: 1gb
* Voice allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 15:01:28,116 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 15:01:28,126 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 15:01:28,138 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 15:02:05,394 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:09,960 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:02:11,304 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:12,076 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: 
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 7gb
Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-10-23 15:02:35,462 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:35,956 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:02:37,318 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:37,852 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, could you please let us know what you would like to name your 7GB data product?"
2024-10-23 15:02:55,926 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:56,463 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:02:57,750 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:02:58,592 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

- Here are the details: 
Product Name: 7ddata 
Product Description: null
Product Family: GSM
Product Group: Prepaid
Product Offer Price: null
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 7gb
Voice Allowance: null
Would you like to update any of these details or proceed as is?
2024-10-23 15:04:45,775 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 15:04:45,785 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 15:04:45,794 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 15:05:21,528 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:05:22,483 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 15:05:23,709 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:05:24,470 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: null
Product Description: null
Product Family: null
Product Group: null
Product Offer Price: null
POP Type: null
Price Category: null
Price Mode: null
Product Specification Type: null
Data Allowance: 5gb
Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-10-23 15:08:34,166 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 15:08:34,177 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 15:08:34,187 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 15:09:15,644 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:09:20,872 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:09:22,339 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:09:23,417 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled:

Product Name: 
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 
POP Type: 
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 4gb
Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 15:22:50,577 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:22:58,188 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:22:59,521 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:23:00,045 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I apologize, but I need a little more information from you. Could you please provide the name of your product?
2024-10-23 15:44:17,586 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 15:44:26,630 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the JSON representation:

```json
{
  "plan_name": "BOJ",
  "validity": "N/A",
  "units": {
    "off_net_minutes": 0,
    "on_net_minutes": 20,
    "peak_minutes": 10
  },
  "duration": "N/A",
  "price": "$0.60"
}
```
2024-10-23 15:44:28,167 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:44:37,314 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:44:38,124 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:44:39,412 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled


Product Name: null
Product Description: null
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 0.60
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: null
Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-10-23 15:45:28,455 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:45:30,468 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:45:31,817 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:45:32,441 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: To proceed, we need to know the name of your product. Could you please provide us with the name of the product you'd like to create a plan for?
2024-10-23 15:45:46,936 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:45:47,450 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:45:48,776 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:45:49,594 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: * As you've provided a JSON schema, I'll generate a confirmation message for you based on that. Here are the details of your product with all mandatory default parameters enabled

Product Name: Bojj
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 0.60
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
 
Would you like to update any of these details or proceed as is?
2024-10-23 15:46:37,645 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 15:46:45,233 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "plan_name": "Hayyak 20",
  "validity": "4 Weeks",
  "units": {
    "data_allowance": "34 GB",
    "flexi_minutes": "650 min"
  },
  "duration": "4 Weeks",
  "price": "20 OMR"
}
```
2024-10-23 15:46:46,915 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:46:47,396 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:46:48,251 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:46:49,080 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: Hayyak 20
Product Description: None
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 20 OMR
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 34 GB
Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-23 15:47:09,928 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:47:10,754 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 15:47:12,058 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:47:13,938 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: Hyak34
Product Description: None
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 20
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 34 GB
Voice Allowance: 650 minutes

Would you like to update any of these details or proceed as is?
2024-10-23 15:47:27,220 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:47:27,910 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:54:31,718 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 15:54:40,363 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted information formatted in JSON:

```json
{
  "plan_name": "BOJ",
  "validity": "N/A",
  "units": {
    "offNet": "0Min",
    "onNet": "20Min",
    "peak": "10Min"
  },
  "duration": "N/A",
  "price": "$0.60"
}
```
2024-10-23 15:54:41,092 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:54:44,196 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 15:54:45,124 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:54:46,554 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled


Product Name:
Product Description:
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 0.60
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance:
Voice Allowance:
 

Would you like to update any of these details or proceed as is?
2024-10-23 15:55:03,971 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 15:55:03,982 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 15:55:03,992 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 15:55:21,178 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 15:55:27,274 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted information from the image formatted as JSON:

```json
{
    "Product Name": "BOJ OffNet",
    "Validity": "O/Peak",
    "Units": {
        "OffNet": "0 Min",
        "OnNet": "20 Min"
    },
    "Duration": "10 Min",
    "Price": "$0.60"
}
```
2024-10-23 15:55:28,094 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:55:28,599 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 15:55:29,518 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:55:30,793 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: BOJ OffNet
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 0.60
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 
Voice Allowance: 20 Min

Would you like to update any of these details or proceed as is?
2024-10-23 15:56:12,242 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:56:12,719 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-10-23 15:56:14,150 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:56:14,982 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: BOJ OnNet2
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 0.60
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 
Voice Allowance: 20 Min

Would you like to update any of these details or proceed as is?
2024-10-23 15:56:31,463 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 15:56:31,999 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 17:52:44,793 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 17:52:44,803 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 17:52:44,813 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 17:53:39,335 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:53:51,235 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 17:53:52,510 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:53:53,295 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: 
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 3 gb
Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 17:54:17,268 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:18,084 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-10-23 17:54:19,457 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:21,637 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: We are missing a crucial piece of information about your product - the name of the product itself. Could you please let us know what you would like to name your 3GB data product?
2024-10-23 17:54:41,414 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:41,957 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 17:54:43,248 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:44,133 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here's the confirmation message and the populated fields based on the given schema:

Here are the details of your product with all mandatory default parameters enabled

Product Name: 3D Data
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 3 GB
Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 17:54:52,184 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:52,819 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 17:54:54,411 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:54:55,102 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Sorry to stop you again, we just need one more piece of information. Could you please let us know the price you'd like to offer for your '3D Data' product? We need to know how much you'd like to sell it for."
2024-10-23 17:55:14,730 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:55:15,396 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-23 17:55:24,139 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:55:25,390 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: 3D Data
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 3
Pop Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 3 GB
Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 17:55:44,027 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:55:49,019 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 17:58:38,004 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 17:58:51,079 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content from the image, here is the extracted information in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR"
}
```
2024-10-23 17:58:52,079 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:58:54,640 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 17:58:55,553 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:58:57,293 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

Product Name: Hayyak 20
Product Description: 
Product Family: GSM
Product Group: Prepaid
Product Offer Price: 20 OMR
POP Type: Normal
Price Category: Base Price
Price Mode: Non-Recurring
Product Specification Type: ADDON
Data Allowance: 34 GB
Voice Allowance: 650 minutes

Would you like to update any of these details or proceed as is?
2024-10-23 17:59:33,177 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:59:33,662 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 17:59:35,023 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 17:59:36,302 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak40 
  Product Description: 
  Product Family: GSM 
  Product Group: Prepaid
  Product Offer Price: 20
  POP Type: Normal 
  Price Category: Base Price
  Price Mode: Non-Recurring 
  Product Specification Type: ADDON
  Data Allowance: 34 GB
  Voice Allowance: 650 minutes

Would you like to update any of these details or proceed as is?
2024-10-23 18:11:32,029 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 18:11:32,038 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 18:11:32,048 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 18:12:10,748 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 18:12:10,757 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 18:12:10,766 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 18:12:35,696 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 18:12:35,706 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 18:12:35,715 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 18:14:07,352 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-10-23 18:14:07,363 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-10-23 18:14:07,375 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-10-23 18:15:07,933 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-23 18:15:22,499 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Data Allowance": "34 GB",
  "Flexi Minutes": "650 min",
  "Price": "20 OMR",
  "VAT": "5%"
}
```
2024-10-23 18:15:24,560 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:15:36,017 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "message_classification": "product_related"
  }
]
2024-10-23 18:15:37,058 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:15:37,943 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 18:17:06,579 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:17:08,446 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 18:17:09,721 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:17:10,630 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayak134
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 18:17:31,662 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:17:32,657 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-23 18:18:09,900 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:10,365 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "general_conversation" }
2024-10-23 18:18:10,366 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:10,764 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hi there, welcome. How can I assist you today?
2024-10-23 18:18:24,125 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:24,607 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-23 18:18:25,896 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:26,786 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-23 18:18:47,771 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:48,572 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 18:18:49,853 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:18:50,965 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayka 235
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price:
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance:
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-10-23 18:19:03,148 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:19:05,089 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 18:19:06,454 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:19:07,984 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "May I please know the offer price for the Hayka 235 product? This is the price at which the product will be made available to customers."
2024-10-23 18:19:15,904 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:19:16,542 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-23 18:19:26,375 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-23 18:19:27,282 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayka 235
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-24 13:25:37,633 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:25:49,850 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-24 13:25:51,231 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:25:52,094 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-24 13:26:44,839 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:26:45,340 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-24 13:26:46,655 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:26:47,545 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayak
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-24 13:27:14,751 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:27:15,399 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-24 13:27:17,218 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:27:18,133 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayak
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 11
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-24 13:27:31,905 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:27:32,499 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-24 13:27:34,370 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:27:35,037 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but it seems 'hayak' is already an existing product name in our system. Could you please provide a unique product name or would you like me to suggest some alternatives?"
2024-10-24 13:28:05,590 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:28:06,191 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-24 13:28:07,768 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-24 13:28:08,651 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayak
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 11
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-28 11:07:34,029 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-28 11:07:55,191 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR"
}
```
2024-10-28 11:07:56,210 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:08:09,350 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "message": "Here is the extracted content in JSON format:\n\n```json\n{\n  \"Product Name\": \"Hayyak 20\",\n  \"Validity\": \"4 Weeks\",\n  \"Units\": {\n    \"Data allowance\": \"34 GB\",\n    \"Flexi Minutes\": \"650 min\"\n  },\n  \"Price\": \"20 OMR\"\n}\n```",
    "classification": "product_related"
  }
]
2024-10-28 11:08:10,260 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:08:11,149 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-28 11:12:04,539 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-28 11:12:14,084 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR",
  "VAT": "5%"
}
```
2024-10-28 11:12:16,120 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:12:16,604 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-10-28 11:12:17,507 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:12:18,408 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min
Would you like to update any of these details or proceed as is?
2024-10-28 11:25:17,195 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-28 11:25:28,308 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content formatted as JSON:

```json
{
  "Product Name": "BOJ OffNet",
  "Validity": "N/A",
  "Units": {
    "OffNet Minutes": 0,
    "OnNet Minutes": 20,
    "Peak Minutes": 10
  },
  "Duration": "N/A",
  "Price": "$0.60"
}
```
2024-10-28 11:25:29,755 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:25:44,941 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-28 11:25:45,819 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:25:47,130 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: BOJ OffNet
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-28 11:49:15,263 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:49:25,554 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-28 11:49:26,871 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:49:27,738 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: BOJ OffNet
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-10-28 11:50:10,740 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:50:11,272 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-28 11:50:12,607 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:50:13,470 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: BOJ OffNet
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-28 11:57:37,846 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-28 11:57:48,238 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR",
  "VAT": "5%"
}
```
2024-10-28 11:57:48,497 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:57:48,964 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-10-28 11:57:49,841 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:57:50,717 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-28 11:58:12,006 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:58:12,493 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-28 11:58:13,744 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 11:58:14,613 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: hyaka121
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-28 12:07:19,049 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 12:07:28,783 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
    "classification": "product_related"
}
2024-10-28 12:07:30,084 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-28 12:07:31,416 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: hyaka121
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-29 16:04:43,033 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:04:55,841 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:04:57,136 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:04:58,278 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-10-29 16:11:50,588 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:11:55,392 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-29 16:11:56,909 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:11:57,913 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-10-29 16:19:23,982 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:19:27,857 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:19:29,241 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:19:30,137 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-10-29 16:23:48,411 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:23:58,051 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-10-29 16:23:58,052 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:23:58,433 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, welcome to our store! How can I assist you today?
2024-10-29 16:28:50,090 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:28:50,546 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:28:52,013 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:28:52,941 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-10-29 16:30:35,247 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:30:40,201 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-10-29 16:30:40,202 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:30:40,593 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, welcome to our store! How can I assist you today?
2024-10-29 16:32:02,018 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:32:02,505 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:32:03,785 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:32:04,581 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 16:32:37,047 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:32:37,532 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:32:38,784 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:32:39,605 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 16:46:54,101 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:47:07,730 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-10-29 16:47:08,954 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:47:09,820 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 16:49:59,394 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:49:59,882 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:50:01,191 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:50:02,149 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 16:57:53,038 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:58:01,772 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 16:58:03,086 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 16:58:03,873 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:00:44,127 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:00:45,216 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:00:46,619 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:00:47,469 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:04:10,840 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:04:11,620 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-10-29 17:04:11,622 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:04:12,318 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello! Welcome to our product creation service. How can I assist you today? Are you looking to design a new product or do you have an existing idea in mind that you'd like to develop?"
2024-10-29 17:04:31,485 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:04:32,184 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:05:34,393 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:05:35,232 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:05:35,238 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:05:36,169 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:05:37,393 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:05:38,200 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-10-29 17:06:06,229 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:06:06,697 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:06:08,054 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:06:08,926 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "To confirm your product creation, we need one more piece of information. Could you please provide a name for your product? This is simply the title or label that will identify your product. I'll help ensure everything is set up correctly for you."
2024-10-29 17:09:27,388 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-29 17:09:47,962 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "Product Name": "BOJ",
  "Validity": "Not specified",
  "Units": {
    "OffNet": "0 Min",
    "OnNet": "20 Min",
    "Peak": "10 Min"
  },
  "Duration": "Not specified",
  "Price": "$0.60"
}
```
2024-10-29 17:09:49,739 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:10:00,204 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-29 17:10:00,977 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:10:01,788 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: BOJ
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:11:09,717 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-29 17:11:18,858 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the JSON representation of the extracted content:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR"
}
```
2024-10-29 17:11:19,017 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:11:19,550 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:11:20,442 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:11:21,990 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-29 17:13:04,887 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:05,419 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-10-29 17:13:05,420 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:05,854 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello, welcome to our store! How can I assist you today? Are you looking for something in particular or would you like some recommendations?"
2024-10-29 17:13:18,804 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-29 17:13:26,586 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content formatted as JSON:

```json
{
  "Product Name": "BOJ",
  "Validity": "N/A",
  "Units": {
    "OffNet": "0 Min",
    "OnNet": "20 Min",
    "Peak": "10 Min"
  },
  "Duration": "N/A",
  "Price": "$0.60"
}
```
2024-10-29 17:13:28,084 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:28,599 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:13:29,302 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:30,148 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: BOJ
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:13:48,931 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:49,393 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:13:52,230 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:13:52,773 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but it seems the Product Name 'BOJ' is already taken. Please could you provide an alternative name for your product so we can proceed with creating your plan?"
2024-10-29 17:14:10,977 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:14:11,479 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:14:12,766 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:14:13,615 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: gbpack
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance:
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-10-29 17:14:22,657 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:14:23,207 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:15:18,822 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:15:20,993 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-10-29 17:15:20,994 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:15:21,461 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Welcome to our product center. How can I assist you today? Are you looking for something specific or would you like me to show you our latest products?
2024-10-29 17:15:38,468 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:15:39,575 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-29 17:15:41,037 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:15:41,862 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-29 17:15:58,433 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-29 17:16:12,170 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR",
  "VAT": "5% included"
}
```
2024-10-29 17:17:12,963 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:17:13,548 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-29 17:17:14,280 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:17:15,108 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-29 17:17:15,427 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-29 17:17:24,368 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Price": "20 OMR"
}
```
2024-10-29 17:17:24,667 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:17:25,199 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-29 17:17:26,129 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-29 17:17:27,031 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name:  ''
* Product Description:  ''
* Product Family:  GSM
* Product Group:  Prepaid
* Product Offer Price:  20
* POP Type:  Normal
* Price Category:  Base Price
* Price Mode:  Non-Recurring
* Product Specification Type:  ADDON
* Data Allowance:  
* Voice Allowance:  
 
Would you like to update any of these details or proceed as is?
2024-10-30 14:27:42,944 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-10-30 14:28:02,049 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content formatted as JSON:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Duration": "4 Weeks",
  "Price": "20 OMR"
}
```
2024-10-30 14:28:02,948 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:28:19,385 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-30 14:28:20,291 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:28:21,192 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-30 14:29:06,045 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:29:06,588 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-30 14:29:08,687 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:29:09,694 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 1210
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-10-30 14:29:38,756 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:29:39,323 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-30 14:35:28,873 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:35:33,529 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-10-30 14:35:34,715 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:35:35,563 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-30 14:40:00,703 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:40:05,530 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-10-30 14:40:06,849 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:40:07,408 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'd be happy to proceed with creating your product, however, I noticed we're missing one important detail - the name of your product. Could you please provide a name for your $10 product?
2024-10-30 14:40:50,224 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:40:50,751 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-10-30 14:40:51,999 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:40:52,863 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: flexi data pack with 5gb data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-10-30 14:41:16,931 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-10-30 14:41:17,445 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-03 01:20:37,890 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-03 01:20:54,200 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-03 01:20:54,201 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-03 01:20:54,646 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like you're confirming something, but I'm not sure what. Could you please provide more context or information about what you're referring to? I'd be happy to help with whatever you need.
2024-11-03 01:21:54,965 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-03 01:21:55,409 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-03 01:21:55,410 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-03 01:21:55,753 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I can't assist you with that information.
2024-11-04 10:27:51,404 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:28:07,352 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 10:28:08,673 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:28:09,489 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 10:40:54,214 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 10:41:05,465 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content formatted as JSON:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Data Allowance": "34 GB",
  "Flexi Minutes": "650 min",
  "Price": "20 OMR",
  "VAT": "5% included"
}
```
2024-11-04 10:41:07,300 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:41:12,904 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 10:41:13,849 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:41:14,690 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 10:43:12,171 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:43:12,639 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 10:43:13,779 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:43:14,556 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 45
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 10:45:06,659 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 10:45:20,739 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Price": "20 OMR",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "VAT": "5% included"
}
```
2024-11-04 10:46:18,301 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:46:18,894 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 10:46:19,812 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:46:20,662 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-11-04 10:46:20,979 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 10:46:32,518 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Hayyak 20",
  "Price": "20 OMR",
  "Validity": "4 Weeks",
  "Data Allowance": "34 GB",
  "Flexi Minutes": "650 min",
  "VAT": "5%"
}
```
2024-11-04 10:46:34,780 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:46:35,223 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 10:46:36,172 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:46:37,025 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-11-04 10:47:26,428 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 10:47:34,502 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Hayyak 20",
  "Price": "20 OMR",
  "Validity": "4 Weeks",
  "Data Allowance": "34 GB",
  "Flexi Minutes": "650 min",
  "VAT": "5%"
}
```
2024-11-04 10:47:35,613 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:47:36,234 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 10:47:37,128 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:47:38,116 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min
Would you like to update any of these details or proceed as is?
2024-11-04 10:48:51,272 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:48:52,011 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 10:48:53,332 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:48:54,169 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 45
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-11-04 10:50:03,363 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:50:03,880 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 10:50:05,602 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:50:06,224 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but I just realized that the product name 'Hayyak 45' is already existing in our system. Can you please provide an alternative product name or confirm if you'd like to use a different name or overwrite the existing one?"
2024-11-04 10:50:35,872 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:50:36,322 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 10:50:37,566 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:50:38,679 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 32
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-11-04 10:51:31,381 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 10:51:44,783 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 11:02:21,462 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:02:41,273 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content formatted as JSON:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Duration": "4 Weeks",
  "Price": "20 OMR"
}
```
2024-11-04 11:02:42,338 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:02:47,798 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 11:02:48,575 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:02:49,441 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min
Would you like to update any of these details or proceed as is?
2024-11-04 11:04:09,367 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:04:09,846 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 11:04:11,269 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:04:11,815 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but I noticed that the product name 'Hayyak 20' already exists in our system. Could you please provide an alternative name for your product or clarify if you'd like to update the existing one?"
2024-11-04 11:07:43,787 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:07:55,000 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 20",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "34 GB",
    "Flexi Minutes": "650 min"
  },
  "Duration": "4 Weeks",
  "Price": "20 OMR"
}
```
2024-11-04 11:07:55,331 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:07:55,795 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 11:07:57,349 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:07:58,254 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 11:08:12,522 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:08:12,987 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 11:08:15,846 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:08:16,436 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but before we proceed, I need to confirm if the product name 'Hayyak 20' is a new product or if it's an existing one in our system. Could you please let me know if 'Hayyak 20' already exists in our system?"
2024-11-04 11:22:33,640 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:22:49,637 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 15",
  "Validity": "4 Weeks",
  "Units": {
    "Data Allowance": "22 GB",
    "Flexi Minutes": "450 min"
  },
  "Duration": "4 Weeks",
  "Price": "15 OMR"
}
```
2024-11-04 11:22:51,166 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:23:01,631 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 11:23:02,443 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:23:03,285 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 15
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 22 GB
* Voice Allowance: 450 min

Would you like to update any of these details or proceed as is?
2024-11-04 11:23:14,090 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:23:14,547 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 11:23:16,101 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:23:16,650 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but it seems like the product name 'Hayyak 15' already exists in our system. Could you please provide an alternative product name so we can proceed with creating a plan?"
2024-11-04 11:29:56,240 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:30:08,199 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content formed into JSON format:

```json
{
  "Product Name": "Hayyak 7",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "7 GB",
    "Flexi Minutes": "150 min"
  },
  "Price": "7 OMR"
}
```
2024-11-04 11:30:08,828 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:30:11,941 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 11:30:12,874 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:30:13,720 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 7
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 11:31:48,911 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:31:56,917 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the extracted content from the image, here is the JSON representation:

```json
{
  "Product Name": "Hayyak 7",
  "Validity": "4 Weeks",
  "Units": {
    "Data allowance": "7 GB",
    "Flexi Minutes": "150 min"
  },
  "Duration": "4 Weeks",
  "Price": "7 OMR",
  "VAT": "5% included"
}
```
2024-11-04 11:31:58,155 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:31:58,651 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-04 11:31:59,487 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:32:00,338 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 7 
* Product Description: 
* Product Family: GSM 
* Product Group: Prepaid 
* Product Offer Price: 7 
* POP Type: Normal 
* Price Category: Base Price 
* Price Mode: Non-Recurring 
* Product Specification Type: ADDON 
* Data Allowance: 7 GB 
* Voice Allowance: 150 min 

Would you like to update any of these details or proceed as is?
2024-11-04 11:35:01,707 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:35:06,330 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-04 11:35:07,718 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:35:08,398 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I apologize, but I noticed that we already have a product named 'Hayyak 7' in our system. Could you please confirm if this is the same product or provide a new, unique product name for the plan we're creating?
2024-11-04 11:37:57,167 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 11:38:17,558 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "Product Name": "Hayyak 15 Long Validity",
  "Validity": "12 weeks",
  "Units": {
    "Data allowance": "25 GB",
    "Flexi Minutes": "300 Min"
  },
  "Price": "15 OMR"
}
```
2024-11-04 11:38:17,954 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:38:18,401 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 11:38:19,267 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:38:20,133 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 15 Long Validity
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 25 GB
* Voice Allowance: 300 Min

Would you like to update any of these details or proceed as is?
2024-11-04 11:39:29,113 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 11:39:29,569 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 12:08:46,665 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:08:57,113 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 12:08:58,489 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:08:59,363 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?

Product Data Already Given, Kindly provide product name, description to proceed
2024-11-04 12:10:34,304 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:10:34,820 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 12:10:36,223 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:10:37,053 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-04 12:11:56,935 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:11:57,716 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 12:11:59,623 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:12:00,298 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but I found that the product name 'Hayyak 20' already exists in our system. Could you please provide a unique name for your product so I can proceed with creating the plan?"
2024-11-04 12:14:28,111 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:14:28,575 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-04 12:14:30,026 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:14:30,864 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 12:15:53,141 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:15:53,643 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 12:15:55,285 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:15:55,772 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "role": "assistant",
  "content": "To confirm, could you please provide a name for your 34 GB data product?"
}
2024-11-04 12:19:30,407 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:19:35,840 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 12:19:37,253 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:19:38,065 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 12:19:54,081 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:19:54,532 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 12:19:56,062 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:19:56,644 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize for the delay, before I can proceed with creating your product, I need to know the name of the product you'd like to create. Could you please provide a name for your product with 10 dollars of 50GB data?"
2024-11-04 12:20:56,465 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:20:57,053 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 12:20:58,379 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:20:59,203 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: flexi weekly pack
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 12:21:18,700 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 12:21:19,217 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 13:21:06,484 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 13:21:27,147 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the JSON representation:

```json
{
  "Product Name": "BOJ",
  "Validity": null,
  "Units": {
    "OffNet Minutes": 0,
    "OnNet Minutes": 20,
    "Peak Minutes": 10
  },
  "Duration": null,
  "Price": "$0.60"
}
``` 

This JSON structure captures the details as per your request. Note that "validity" and "duration" are marked as null since that information wasn't provided in the image.
2024-11-04 13:21:29,460 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:21:39,955 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 13:21:40,960 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:21:41,803 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: BOJ
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 0.60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance:
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-04 13:33:43,768 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 13:33:56,227 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "1 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 13:33:57,792 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:34:03,261 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 13:34:04,205 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:34:05,056 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 
 
Would you like to update any of these details or proceed as is?
2024-11-04 13:36:12,111 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:36:12,633 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 13:36:14,430 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 13:36:15,012 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I see that we have a product with the name 'Daily Data' already existing in our system. To proceed, could you please confirm if you'd like to update the existing product or provide a new, unique product name?"
2024-11-04 14:33:33,725 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 14:33:42,578 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content formatted as JSON:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "1 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 14:33:44,358 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:34:00,470 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 14:34:01,312 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:34:02,179 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 14:34:35,508 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:34:35,995 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 14:34:37,779 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:34:38,336 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize for the issue, but it seems that the product name 'Daily Data' is already in use. Could you please suggest an alternative product name so we can successfully create your product plan?"
2024-11-04 14:36:15,082 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 14:36:34,744 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the content extracted from the image, here is the JSON representation:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "1 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 14:36:35,805 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:36:39,948 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 14:36:40,907 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:36:41,775 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 14:36:52,121 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:36:53,509 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 14:36:54,976 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:36:55,563 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, I'd like to check if a product with the name 'Daily Data' already exists in our system. Could you please confirm the status of this product name, or would you like to choose a different name?"
2024-11-04 14:40:40,777 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 14:40:51,975 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
    "Product Name": "Hayyak 20",
    "Validity": "4 Weeks",
    "Units": {
        "Data Allowance": "34 GB",
        "Flexi Minutes": "650 min"
    },
    "Duration": "4 Weeks",
    "Price": "20 OMR"
}
```
2024-11-04 14:40:52,309 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:40:52,815 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 14:40:53,637 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:40:54,527 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-11-04 14:41:02,746 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 14:41:03,228 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:07:23,847 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:07:35,925 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data 50MB",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:07:36,760 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:07:47,268 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 15:07:48,380 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:07:49,241 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:08:53,150 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:09:01,847 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted information formatted as JSON:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:09:02,426 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:09:02,959 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 15:09:03,782 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:09:04,654 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:09:55,873 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:10:02,138 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:10:02,822 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:10:03,638 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:10:04,686 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:10:05,562 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-04 15:11:26,223 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:11:44,990 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content from the image formatted into JSON:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:11:46,985 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:11:47,547 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:11:48,375 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:11:49,241 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:13:59,884 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:14:12,623 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content structured in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:14:13,868 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:14:14,436 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:14:15,965 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:14:16,842 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:20:59,056 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:21:06,738 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:21:08,518 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:21:14,196 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 15:21:15,349 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:21:16,237 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:23:06,407 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-04 15:23:06,419 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-04 15:23:06,432 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-04 15:23:52,947 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:24:01,837 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content from the image in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Data Allowance": "50 MB",
  "Price": "10 OMR"
}
```
2024-11-04 15:24:02,197 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:24:02,720 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 15:24:03,604 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:24:04,578 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10 OMR
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:26:29,224 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-04 15:26:29,234 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-04 15:26:29,244 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-04 15:26:44,236 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:27:01,245 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data 50MB",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:27:02,746 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:27:03,246 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:27:04,180 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:27:05,069 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:27:36,059 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:27:43,334 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
  "Product Name": "Daily Data 50MB",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:28:52,934 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:28:54,206 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:28:55,132 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:28:55,988 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:28:56,293 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:29:07,088 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted content in JSON format:

```json
{
  "Product Name": "Daily Data",
  "Validity": "1 Day",
  "Units": "MB",
  "Duration": "1 Day",
  "Price": "10 OMR",
  "Data Allowance": "50 MB"
}
```
2024-11-04 15:29:07,855 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:29:08,385 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-04 15:29:09,229 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:29:10,124 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:34:59,778 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-04 15:34:59,794 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-04 15:34:59,809 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-04 15:35:26,277 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:35:35,586 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "plan_name": "daily_data",
    "price": {
        "amount": 10,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "Day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:35:35,734 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:35:48,178 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:35:49,139 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:35:51,879 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:37:09,224 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-04 15:37:09,233 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-04 15:37:09,243 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-04 15:37:40,703 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:37:52,123 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "plan_name": "Daily Data 50MB",
    "price": {
        "amount": 10,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "Day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:37:52,315 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:37:57,853 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 15:37:58,633 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:37:59,513 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:40:35,583 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-04 15:40:35,601 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-04 15:40:35,617 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-04 15:41:04,929 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:41:14,528 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 10,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:41:16,456 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:41:20,498 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:41:21,357 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:41:22,277 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:42:38,503 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:42:56,759 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the extracted data formatted as JSON:

```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 10,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:42:57,023 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:43:00,389 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:43:01,222 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:43:02,138 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:44:44,454 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:44:48,248 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-04 15:44:50,059 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:44:50,677 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but we've encountered a situation where the product name 'Daily Data 50MB' is already in use within our system. Could you please provide an alternative name for your product?"
2024-11-04 15:51:13,468 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:51:25,395 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:51:25,686 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:51:37,525 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:51:38,594 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:51:39,685 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:52:51,871 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:52:59,452 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:53:01,247 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:53:05,817 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:53:06,727 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:53:07,608 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:53:51,225 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:53:51,765 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-04 15:53:53,587 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:53:54,205 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before proceeding, I need to check the product name. Could you please confirm if 'Daily Data 50MB' is an existing product or if it's a new one? If existing, please let me know the exact name it's already listed as in our system."
2024-11-04 15:56:48,736 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 15:56:59,784 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 15:57:00,220 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:57:00,734 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:57:01,573 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:57:02,464 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 15:57:12,045 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:57:12,542 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 15:57:14,702 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 15:57:15,239 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize for the pause. Since this product name already exists in our system, could you please provide an alternative name for your product or would you like me to suggest some options for you?"
2024-11-04 16:01:21,298 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:01:36,911 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:01:37,480 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:01:40,882 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 16:01:41,704 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:01:42,577 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 16:01:56,903 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:01:57,387 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 16:01:58,887 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:01:59,520 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "{
    "role": "assistant",
    "content": "Before we proceed, we have a minor issue. The product name you've chosen, 'Daily Data 50MB', already exists in our system. Could you please suggest an alternate name for your product?"
}"
2024-11-04 16:03:00,019 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:03:13,474 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:03:13,876 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:03:16,061 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 16:03:16,884 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:03:17,752 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data 50MB
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-04 16:03:26,995 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:03:27,468 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 16:03:29,741 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:03:30,238 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "A product with the name Daily Data 50MB already exists in our system. Could you please provide an alternate product name to proceed?"
2024-11-04 16:07:36,339 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:07:45,576 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:07:45,649 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:07:46,141 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 16:07:47,224 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:07:48,092 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 16:09:37,821 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:09:49,917 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:09:51,710 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:09:52,181 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 16:09:53,104 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:09:53,964 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 16:10:04,028 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:10:04,642 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 16:10:06,671 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:10:07,275 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'm going to need to verify something before we proceed. Is the product name you've chosen, 'Daily Data 50MB', already an existing product name in our system, or would you like to use this name as a new product?
2024-11-04 16:18:36,311 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:18:52,836 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:18:54,937 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:19:05,416 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 16:19:06,407 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:19:07,304 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 16:19:16,192 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:19:19,428 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 16:19:21,570 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:19:23,753 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I'm just checking to see if there's already an existing product with the name 'Daily Data 50MB' in our system. Could you please confirm if this is a new product or an update to an existing one?"
2024-11-04 16:29:11,606 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 16:29:25,372 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 16:29:26,885 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:29:32,365 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 16:29:33,243 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:29:34,118 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 16:29:50,065 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:29:50,547 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-04 16:29:52,205 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 16:29:52,846 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I see that you've chosen to proceed with the details provided. However, I noticed that the product name 'Daily Data 50MB' already exists in the system. Could you please let me know how you would like to handle this, or if you'd like to modify the name to create a unique product identifier?"
2024-11-04 17:13:30,082 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-04 17:13:48,889 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Data 50MB",
    "price": {
        "amount": 1,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 50,
        "unit": "MB"
    }
}
```
2024-11-04 17:13:48,909 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 17:14:00,072 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-04 17:14:01,020 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 17:14:01,897 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Data 50MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-04 17:14:15,472 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 17:14:15,947 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-04 17:20:16,506 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 17:20:17,150 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-04 17:20:17,151 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-04 17:20:17,678 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like we're getting started. I've received your confirmation to proceed. Before we begin, can you please provide some details about the product you would like me to create? What kind of product are you looking for?
2024-11-05 15:30:13,239 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-05 15:30:25,183 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: I'm unable to analyze the content of the image as requested. If you have any specific details or text from the image that you can provide, I’ll be glad to assist you with that information!
2024-11-05 15:30:26,656 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:30:43,406 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-05 15:30:43,408 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:30:43,904 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems there might be some confusion earlier. Can you please provide more details or text from the image you'd like me to analyze? I'll be happy to assist you with the information you provide.
2024-11-05 15:31:03,043 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:31:03,481 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-05 15:31:03,482 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:31:04,127 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'm glad you're willing to provide more information. Unfortunately, just saying "ok" doesn't provide me with enough details to assist you. Can you please provide more context or text about what you need help with? What product are you looking to create, and what are your requirements for the product? I'm here to help, so please feel free to share more details.
2024-11-05 15:31:40,355 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:31:40,813 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-05 15:31:42,211 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:31:43,549 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-05 15:34:36,735 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:34:37,233 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-05 15:38:58,164 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:39:03,612 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-05 15:39:03,614 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:39:04,059 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello! Welcome to our product creation service. How can I assist you today? Are you looking to create a new product or modify an existing one?"
2024-11-05 15:39:38,663 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:39:39,114 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-05 15:39:40,699 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:39:41,492 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-05 15:40:50,664 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:40:51,152 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-05 15:42:15,433 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:42:15,890 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-05 15:42:15,891 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-05 15:42:16,348 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: You're welcome, how can I assist you today? Is there something I can help you with or would you like to place an order?
2024-11-06 11:57:10,891 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 11:57:25,618 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 11:57:26,881 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 11:57:27,701 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 11:58:41,507 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 11:58:41,997 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-06 11:58:43,281 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 11:58:44,089 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 11:59:42,638 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-06 11:59:54,576 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-06 12:00:55,747 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:00:56,273 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-06 12:00:57,099 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:00:57,961 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 12:00:57,972 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:00:58,365 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 12:00:59,604 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:01:00,393 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-11-06 12:01:00,706 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-06 12:01:07,824 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-06 12:01:10,060 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:01:14,844 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-06 12:01:15,762 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:01:16,601 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-06 12:01:16,606 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:01:16,993 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 12:01:32,655 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:01:33,421 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Please confirm the following details:
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 12:02:00,253 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:02:00,725 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 12:02:01,998 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:02:02,807 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Please confirm the following details:
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 12:02:34,395 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-06 12:02:42,704 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the provided image, here is the extracted data formatted as requested in JSON:

```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
``` 

### Explanation:

- **Plan Name**: "Hayyak 20"
- **Price**: 20 OMR
- **Validity**: 4 weeks corresponds to 28 days.
- **Data Allowance**: 34 GB.
2024-11-06 12:02:43,631 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:02:44,189 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-06 12:02:45,082 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:02:45,925 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 12:06:56,762 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:06:57,265 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-06 12:06:58,517 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:07:00,337 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-11-06 12:08:04,211 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:08:08,480 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 12:08:09,766 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:08:10,604 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-06 12:08:40,386 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-06 12:08:53,216 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the image provided, here is the extracted information formatted as JSON:

```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
``` 

### Explanation of the Data Extraction:
1. **Plan Name**: "Hayyak 20" (exactly as shown)
2. **Price**: 20 OMR (verified as 20)
3. **Validity**: 4 weeks converted to days is 28 days (exact number)
4. **Data Allowance**: 34 GB (exact number and unit)

All numerical values were checked for accuracy.
2024-11-06 12:08:54,361 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:08:54,961 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-06 12:08:55,809 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 12:08:56,636 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description:
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-06 18:40:09,613 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-06 18:40:27,624 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-06 18:40:28,199 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 18:40:38,589 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-06 18:40:39,401 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 18:40:40,184 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-11-06 18:40:58,163 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-06 18:40:58,605 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-08 11:09:14,399 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-08 11:09:27,064 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-08 11:09:27,400 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:09:40,926 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-08 11:09:41,741 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:09:42,567 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-08 11:13:31,441 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-08 11:13:40,055 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-08 11:13:40,683 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:13:45,322 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-08 11:13:46,159 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:13:47,022 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-08 11:13:57,658 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:13:58,121 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-08 11:14:00,689 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:14:01,190 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but I noticed that the Product Name 'Hayyak 20' already exists in our system. Could you please provide an alternative Product Name for your product?"
2024-11-08 11:51:05,099 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-08 11:51:13,308 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-08 11:51:13,743 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:51:28,030 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-08 11:51:28,815 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:51:29,660 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-08 11:51:44,733 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-08 11:51:45,184 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 14:08:31,734 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:08:48,184 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-12 14:08:48,190 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:08:48,690 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It looks like we've already started a conversation. You've responded with a simple "yes". Before we proceed, could you please remind me what we were discussing or what product you're interested in creating?
2024-11-12 14:09:19,586 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:09:20,045 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 14:09:21,448 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:09:22,271 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 14:11:34,334 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:11:34,807 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 14:11:37,360 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 14:11:37,963 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before I proceed with creating the plan for your product with 100GB of local data, may I request the name of the product you'd like to create? This is the name that will identify your product, and I want to make sure I get it right."
2024-11-12 20:03:05,526 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:03:16,238 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-12 20:03:16,240 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:03:16,997 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It looks like we just got started. Since you said "yes", I'm assuming you would like to create a product for a customer. Before we begin, could you please provide some more details about what kind of product you would like to create? For example, what type of product is it, and who is it for?
2024-11-12 20:04:27,651 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:04:28,301 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-12 20:04:29,708 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:04:30,592 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TEST_Dbank
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1000
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:05:33,784 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:05:34,500 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-12 20:05:36,194 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:05:37,088 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TEST_Dbank
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1000
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: Base
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:05:56,405 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:05:57,003 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 20:07:31,260 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:07:32,214 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-12 20:07:32,215 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:07:32,783 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: You're welcome. How can I assist you today? Are you looking to create a new product or inquire about an existing one?
2024-11-12 20:09:18,958 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:09:19,483 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 20:09:20,896 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:09:22,076 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:09:45,911 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:09:47,267 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 20:09:49,133 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:09:50,289 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TEST DBank
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:10:12,593 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:10:13,737 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-12 20:10:15,703 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:10:16,483 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but I still need one more detail to proceed. Could you please provide the offer price of the product, or in simpler terms, the price you'd like to charge for TEST_Dbank?"
2024-11-12 20:11:16,820 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:11:17,397 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"conversation_type": "product_related"
}
2024-11-12 20:11:18,889 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:11:19,772 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TEST DBank
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:11:30,947 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:11:31,560 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 20:12:35,854 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:12:36,291 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-12 20:12:36,292 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:12:36,732 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, welcome to our customer service. I'd be happy to help you with creating a product. What kind of product are you looking to create?
2024-11-12 20:14:28,151 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:14:33,840 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-12 20:14:35,382 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:14:36,311 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TEST_Dbank
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1000
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: Base
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:14:49,927 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:14:50,629 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-12 20:14:52,368 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:14:52,979 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but it seems that the product name TEST_Dbank already exists in our system. Could you please provide a unique name for your product or confirm if you'd like to update the existing one?"
2024-11-12 20:15:37,387 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:15:38,757 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-12 20:15:40,972 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:15:41,641 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems that the product name you provided, TEST_Dbank, is already in use. Could you please provide a unique name for your product?
2024-11-12 20:16:05,592 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:16:07,046 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: `{"classification": "product_related"}`
2024-11-12 20:16:08,611 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:16:09,471 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Test_DBank1
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-11-12 20:16:47,200 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:16:48,209 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-12 20:17:50,610 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:17:51,145 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-12 20:17:52,753 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:17:53,390 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'd like to confirm the details of your product Test_DBank1. However, I noticed that the product's offer price is missing. Could you please provide the price of the product you'd like to offer to your customers?
2024-11-12 20:18:35,870 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:18:36,733 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-12 20:18:38,271 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:18:39,209 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Test_DBank1
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100.50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-12 20:18:53,882 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-12 20:18:54,460 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 16:14:53,227 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-13 16:15:01,835 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: I'm unable to analyze images directly. However, if you describe the content of the image or the relevant numerical details, I can help you format that information into the specified JSON structure.
2024-11-13 16:15:11,035 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:15:27,044 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-13 16:15:27,046 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:15:27,625 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'm happy to help you, however, I noticed that you haven't provided the details or the image you'd like me to work with. Could you please describe the content or share the numerical details you'd like me to format into JSON? I'll be happy to assist you from there.
2024-11-13 16:15:59,256 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:15:59,715 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-11-13 16:15:59,717 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:16:00,430 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like we just started our conversation, but I haven't received any information about the product you'd like me to create or format into JSON. Could you please share some details about the product, such as its name, description, price, and any other relevant information you'd like to include? I'll be happy to help you format that into JSON once I have a better understanding of what you're looking for.
2024-11-13 16:16:27,863 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:16:28,346 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-13 16:16:29,832 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:16:30,733 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Prime 4G
* Product Description: 70GB Data, 100Mins Talktime and 100SMS
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 70GB
* Voice Allowance: 100Mins

Would you like to update any of these details or proceed as is?
2024-11-13 16:18:23,227 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:18:24,963 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 16:18:26,426 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:18:27,336 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: AI_4G
* Product Description: 70GB Data, 100Mins Talktime and 100SMS
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 70GB
* Voice Allowance: 100Mins

Would you like to update any of these details or proceed as is?
2024-11-13 16:18:55,401 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:18:55,999 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 16:18:57,365 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:18:58,304 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: AI 4G
* Product Description: 70GB Data, 100Mins Talktime and 100SMS
* Product Family: GSM
* Product Group: postpaid
* Product Offer Price: 150
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: Base
* Data Allowance: 70GB
* Voice Allowance: 100Mins

Would you like to update any of these details or proceed as is?
2024-11-13 16:19:04,657 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:19:05,302 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 16:51:09,444 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:51:19,884 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-13 16:51:19,885 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:51:20,287 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello! Welcome to our product customization service. How can I assist you today?"
2024-11-13 16:52:36,813 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-13 16:52:55,610 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-13 16:52:56,711 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:52:57,353 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 16:52:58,111 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 16:52:59,138 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 16:59:50,379 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-13 17:00:03,175 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-13 17:00:04,539 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:00:05,019 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-13 17:00:05,917 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:00:07,322 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:00:54,667 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:00:55,136 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-13 17:00:56,611 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:00:57,448 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayak 12
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-13 17:09:13,604 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:09:24,107 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:09:25,416 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:09:26,273 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:09:35,926 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:09:36,388 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:09:38,762 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:09:39,327 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I just need some more information to complete your product plan. Could you please let me know what you'd like to name your 10 GB data product? This will help me move forward with creating your plan.
2024-11-13 17:09:55,403 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:09:55,903 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-13 17:10:03,495 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:10:04,340 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: data offer
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:10:13,766 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:10:14,271 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:10:36,385 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:10:36,933 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I apologize, but our system indicates that the product name 'Data Offer' already exists. Could you please suggest an alternative name for your product to proceed with creating your plan?
2024-11-13 17:11:01,162 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:11:01,696 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:11:08,408 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:11:09,253 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: data 10gb pack
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:11:18,767 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:11:19,435 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-13 17:12:31,922 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:12:32,373 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-13 17:12:33,749 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:12:34,926 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:12:47,346 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:12:48,146 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-13 17:12:49,458 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:12:50,683 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Please confirm the following details:

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:13:11,638 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-13 17:13:30,637 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-13 17:13:32,559 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:13:38,122 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-13 17:13:38,975 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:13:39,951 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:15:46,285 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:15:46,725 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:15:48,042 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:15:48,886 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Oman
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 2
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:15:56,581 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:15:57,053 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-13 17:16:45,628 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-13 17:16:53,391 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-13 17:16:55,093 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:16:55,548 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-13 17:16:56,460 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:16:57,429 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:22:31,161 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:22:36,637 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-13 17:22:37,973 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:22:38,822 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 34
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-13 17:22:47,431 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-13 17:22:47,924 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-14 15:04:57,465 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:05:12,042 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-14 15:05:13,324 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:05:14,170 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 8d
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 8
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-14 15:08:05,882 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:08:07,314 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-14 15:08:08,701 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:08:09,267 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Thank you for confirming the details. However, I noticed that the product name '8d' already exists in our system. Could you please provide a unique name for your product or would you like me to suggest some alternatives?"
2024-11-14 15:08:28,306 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:08:28,767 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-14 15:08:30,164 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:08:30,997 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 8d data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 8
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-14 15:08:38,948 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-14 15:08:39,510 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-20 10:52:43,638 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-20 10:52:43,650 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-20 10:52:43,661 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-20 11:10:30,834 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:10:40,973 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 11:10:42,301 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:10:43,155 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9d data
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 9
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 11:11:04,413 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:11:04,894 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"conversation_classification": "product_related"
}
2024-11-20 11:11:06,893 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:11:07,401 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "The product name '9d data' is already in our system. Could you please provide an alternative product name so we can proceed with creating your plan?"
2024-11-20 11:11:30,312 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:11:30,769 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 11:11:32,057 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:11:32,918 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9GB Data Pack
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 9
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 11:11:40,168 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:11:40,698 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 11:13:20,818 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-20 11:13:31,268 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "BOJ OffNet 0Min OnNet 20Min O/Peak 10 Min",
    "price": {
        "amount": 60,
        "currency": "USD"
    },
    "validity": {
        "duration": 0,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "Min"
    }
}
```
2024-11-20 11:13:32,468 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:13:32,962 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
    "classification": "product_related"
}
```
2024-11-20 11:13:33,891 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 11:13:34,794 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: BOJ OffNet 0Min OnNet 20Min O/Peak 10 Min
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0Min
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 12:48:23,071 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:48:42,439 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 12:48:43,861 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:48:46,466 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 12:49:51,802 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-20 12:50:00,806 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the details extracted from the image, here is the JSON output:

```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```

### Breakdown:
- **Plan Name**: "Hayyak 20"
- **Price**: 20 OMR
- **Validity**: 4 weeks = 28 days
- **Data Allowance**: 34 GB

All numerical values are verified with exact precision as requested.
2024-11-20 12:50:03,127 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:50:16,274 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "message_classification": "product_related"
}
```
2024-11-20 12:50:17,082 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:50:17,926 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 12:58:10,658 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:58:11,113 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 12:58:12,362 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:58:13,166 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 12:58:32,146 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-20 12:58:41,102 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-20 12:58:42,555 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:58:45,509 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-20 12:58:47,179 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 12:58:48,856 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:09:31,085 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:09:39,913 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 13:09:41,175 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:09:41,977 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:11:37,558 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:11:37,983 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 13:11:40,275 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:11:41,061 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:14:13,012 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-20 13:14:27,731 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-20 13:14:29,333 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:14:29,784 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-20 13:14:30,572 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:14:31,472 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name:  Hayyak 20
* Product Description: 
* Product Family:  GSM
* Product Group:  Prepaid
* Product Offer Price: 20
* POP Type:  Normal
* Price Category:  Base Price
* Price Mode:  Non-Recurring
* Product Specification Type:  ADDON
* Data Allowance:  34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:17:21,303 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:17:21,716 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 13:17:22,960 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:17:23,761 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:17:39,849 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-20 13:17:48,772 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-20 13:17:49,207 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:17:49,716 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-20 13:17:50,555 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:17:51,380 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:18:15,739 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:18:16,215 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 13:18:19,484 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:18:20,346 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here's the confirmation message:


Here are the details of your product with all mandatory default parameters enabled
* Product Name: hayyak13
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 13:18:29,711 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 13:18:30,255 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-20 18:12:10,213 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 18:12:22,779 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 18:12:23,951 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 18:12:25,369 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20gb
* Voice Allowance:  

Would you like to update any of these details or proceed as is?
2024-11-20 18:13:07,006 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 18:13:07,463 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-20 18:13:08,764 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 18:13:09,595 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: MBB 20gb
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-20 18:14:15,510 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-20 18:14:17,078 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-21 11:00:42,741 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-21 11:00:42,752 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-21 11:00:42,763 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-21 11:01:12,349 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 11:01:25,275 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-21 11:01:26,649 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 11:01:27,498 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-21 11:01:41,063 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 11:01:41,551 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "conversation_type": "product_related"
}
```
2024-11-21 11:01:43,067 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 11:01:43,943 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 40gb data
* Product Description: 40gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 40gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-21 12:17:36,162 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-21 12:17:48,379 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-21 12:17:49,114 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:17:59,408 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-21 12:18:01,145 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:18:02,032 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-21 12:18:57,461 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-21 12:19:08,272 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-21 12:19:09,011 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:19:09,493 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-21 12:19:10,245 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:19:11,161 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-21 12:20:40,096 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:20:40,564 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-21 12:21:44,168 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:21:44,596 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-21 12:21:48,024 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:21:48,557 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I apologize, but I noticed that we already have a product with the name 'Hayyak 20' in our system. Could you please provide an alternative product name so we can proceed with creating your plan?
2024-11-21 12:22:12,511 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:22:13,099 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
    "classification": "product_related"
}
2024-11-21 12:22:14,625 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:22:15,477 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20 test
* Product Description: Hayyak 20 test
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-21 12:22:41,953 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-21 12:22:42,469 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 12:48:57,458 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:49:13,013 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-22 12:49:13,014 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:49:13,471 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello! Welcome to our product creation service. How can I assist you today? Are you looking to create a new product or have an idea you'd like to discuss?"
2024-11-22 12:49:25,119 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:49:25,628 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-22 12:49:25,629 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:49:26,183 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Let's get started then. Can you please share more about your idea or the type of product you'd like to create? What is it for and who is your target audience?"
2024-11-22 12:50:21,789 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 12:50:43,195 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here’s the extracted data in the requested JSON format:

```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
``` 

### Breakdown:
- **Plan Name:** "Hayyak 20"
- **Price:** 20 OMR (20 confirmed as a double digit)
- **Validity:** 4 weeks, converted to 28 days
- **Data Allowance:** 34 GB (exactly as shown)
2024-11-22 12:50:44,223 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:50:46,875 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 12:50:47,937 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:50:48,820 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 12:51:05,141 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 12:51:12,050 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-22 12:51:12,357 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:51:12,891 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 12:51:13,845 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:51:14,899 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 12:57:03,086 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 12:57:16,584 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-22 12:57:17,197 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:57:21,582 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-22 12:57:22,481 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:57:23,346 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid 
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 12:59:31,919 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 12:59:41,592 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-22 12:59:43,826 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:59:47,464 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-22 12:59:48,542 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 12:59:59,832 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 13:03:59,577 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 13:04:11,531 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-22 13:04:13,929 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 13:04:15,110 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-22 13:04:15,918 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 13:04:16,802 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 17:05:20,899 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:05:36,445 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-22 17:05:37,914 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:05:38,814 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 25Gb product
* Product Description: 25Gb product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 500
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 25Gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-22 17:05:57,217 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:05:57,684 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-22 17:05:59,320 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:06:00,180 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 25Gb product
* Product Description: 25Gb product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 500
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 25Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 17:06:11,417 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:06:11,934 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-22 17:08:55,450 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 17:09:10,583 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak Data Only",
    "price": {
        "amount": 3,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 3,
        "unit": "GB"
    }
}
```
2024-11-22 17:09:12,329 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:09:12,772 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-22 17:09:13,782 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:09:14,673 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak Data Only
* Product Description: Hayyak Data Only
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 3
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 17:09:48,211 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:09:54,333 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 17:13:34,488 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 17:13:43,074 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-22 17:13:43,692 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:13:44,158 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-22 17:13:45,102 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:13:46,123 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 17:14:21,940 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:14:22,404 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 17:14:24,659 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:14:25,274 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I see that you'd like to proceed with the plan, however, I need to check if the product name 'TELE VOICE' already exists in our system. Could you please confirm if 'TELE VOICE' is a new product name or does it already have an existing entry?
2024-11-22 17:14:43,853 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:14:44,351 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-22 17:14:46,040 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:14:46,894 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE test
* Product Description: TELE VOICE test
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 17:15:00,029 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:15:00,598 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 17:46:48,386 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-22 17:46:48,396 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-22 17:46:48,406 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-22 17:57:54,263 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:58:04,463 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-22 17:58:04,465 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 17:58:04,986 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: It seems like you started with a greeting, but I've already responded to your "hi" once. If you'd like to move forward, could you please let me know what brings you here today or what product you need help with?
2024-11-22 18:25:43,481 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:25:53,908 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:25:55,232 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:25:56,048 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:26:44,463 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:26:47,717 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:26:49,290 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:26:50,212 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 5d data with 5gb data for price 5 dollars
* Product Description: 5d data with 5gb data for price 5 dollars
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:27:15,787 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:27:16,313 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-22 18:29:14,357 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:29:32,111 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-22 18:29:33,009 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:29:33,552 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-22 18:29:34,417 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:29:35,341 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:30:02,645 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:30:04,102 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:30:05,485 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:30:13,851 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak17
* Product Description: Hayyak17
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:30:23,016 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:30:24,399 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:32:02,618 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:03,058 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:32:04,483 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:05,481 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 0d data
* Product Description: 0d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0d
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:32:22,058 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:22,916 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-22 18:32:24,502 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:26,292 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 0d data
* Product Description: 0d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: None
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0d
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:32:38,687 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:39,137 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { "classification": "product_related" }
2024-11-22 18:32:40,428 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:32:41,316 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 0d data
* Product Description: 0d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: None
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0d
* Voice Allowance:


Would you like to update any of these details or proceed as is?
2024-11-22 18:33:00,859 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:33:01,683 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-22 18:33:06,630 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:33:07,208 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, I just need to confirm one more thing. Could you please let me know the price you'd like to offer for the '0d data' product?"
2024-11-22 18:33:18,144 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:33:18,665 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-22 18:33:39,053 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:33:39,645 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "I apologize, but it seems we need a bit more information. A product price can't be $0. Could you please provide a valid price for the '0d data' product?"
2024-11-22 18:34:15,900 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:34:16,433 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:41:35,988 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:41:44,305 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    }
}
```
2024-11-22 18:41:45,361 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:41:54,576 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:41:55,580 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:41:56,465 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:42:12,167 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:42:12,659 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:43:17,426 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:43:18,119 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:43:19,846 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:43:20,717 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: a new a pack
* Product Description: a new a pack
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:43:47,992 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:43:49,975 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:43:51,341 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:43:52,960 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
    "role": "assistant",
    "content": "Before we proceed, could you please let me know the price you'd like to offer for 'a new a pack'? This will help me create the plan accurately."
}
2024-11-22 18:44:08,616 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:44:09,114 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:45:12,047 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:45:28,787 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE SMS",
    "price": {
        "amount": 50,
        "currency": "BR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 1500,
        "unit": "SMS"
    }
}
```
2024-11-22 18:45:30,895 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:45:31,511 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:45:32,492 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:45:33,390 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE SMS
* Product Description: TELE SMS
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 1500 SMS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:46:16,912 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:46:19,891 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:49:56,984 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:50:10,544 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA MONTHLY",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    }
}
```
2024-11-22 18:50:11,274 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:50:12,074 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:50:13,032 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:50:14,037 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA MONTHLY
* Product Description: DATA MONTHLY
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:50:14,342 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:50:16,956 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA MONTHLY",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    }
}
```
2024-11-22 18:50:18,968 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:50:20,003 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-22 18:50:20,798 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:50:22,320 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA MONTHLY
* Product Description: DATA MONTHLY
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:52:29,728 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:52:36,494 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:54:11,881 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:54:12,308 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:54:13,684 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:54:14,560 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 300 mb data for 30 days
* Product Description: 300 mb data for 30 days
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 3
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 300 mb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:54:36,191 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:54:36,669 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:55:54,494 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-22 18:56:07,513 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-22 18:56:08,933 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:56:09,477 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:56:10,307 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:56:11,150 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:57:38,651 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:57:43,441 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-22 18:57:44,986 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:57:46,057 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: tele unlimited
* Product Description: tele unlimited
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-22 18:57:58,754 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:57:59,242 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 18:58:00,865 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:58:01,715 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Tele Unlimited
* Product Description: Tele Unlimited
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-22 18:58:56,257 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 18:58:59,965 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 20:17:11,304 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 20:17:21,787 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-22 20:17:21,788 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 20:17:22,251 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hi, welcome to our product creation service. How can I assist you today? Are you looking to create a new product or have any specific requirements in mind?
2024-11-22 20:17:29,279 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 20:17:30,040 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-22 20:17:31,305 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-22 20:17:32,778 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-24 10:49:39,866 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 10:49:57,282 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    }
}
```
2024-11-24 10:49:57,308 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 10:50:13,683 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-24 10:50:14,445 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 10:50:15,256 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-24 22:10:46,134 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-24 22:10:46,145 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-24 22:10:46,155 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-24 22:16:05,348 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 22:16:22,094 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-24 22:17:18,440 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:17:30,242 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-24 22:17:31,192 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:17:32,028 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 

Would you like to update any of these details or proceed as is?

Please confirm
2024-11-24 22:17:32,337 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 22:17:42,134 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the extracted data formatted as JSON:

```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```

### Breakdown:
- **Plan Name**: "TELE VOICE"
- **Price**: 100 Birr (confirmed as 100)
- **Validity**: 30 days (assumed typical monthly plan duration)
- **Data Allowance**: 400 MINS
2024-11-24 22:17:44,007 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:17:44,493 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-24 22:17:45,381 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:17:46,229 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-11-24 22:33:06,227 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-24 22:33:06,237 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-24 22:33:06,247 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-24 22:37:30,861 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 22:37:46,873 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-24 22:37:47,085 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:37:54,669 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-24 22:37:55,552 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:37:56,599 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0MB
* Voice Allowance: 400MINS
Would you like to update any of these details or proceed as is?
2024-11-24 22:38:37,729 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 22:38:45,337 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 650,
        "unit": "min"
    }
}
```
2024-11-24 22:38:47,029 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:38:47,665 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  }
]
2024-11-24 22:38:48,489 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:38:49,379 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 650min

Would you like to update any of these details or proceed as is?
2024-11-24 22:39:24,143 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:39:24,578 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-24 22:39:25,829 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:39:26,671 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak21
* Product Description: Hayyak21
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34GB
* Voice Allowance: 650min

Would you like to update any of these details or proceed as is?
2024-11-24 22:41:58,978 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:41:59,620 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-24 22:42:37,900 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:42:39,112 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-24 22:42:40,392 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:42:41,221 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-11-24 22:54:55,070 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 22:55:10,910 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-24 22:55:12,597 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:55:17,487 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-24 22:55:18,330 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 22:55:19,192 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0MB
* Voice Allowance: 400MINS

Would you like to update any of these details or proceed as is?
2024-11-24 23:06:55,018 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 23:06:58,919 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-24 23:06:58,920 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 23:06:59,314 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello! How can I assist you today?
2024-11-24 23:09:02,649 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 23:09:18,380 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the JSON output based on the provided image data:

```json
[
    {
        "product name/plan name": "TELE VOICE",
        "price": {
            "amount": 100,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 400,
            "unit": "MINS"
        },
        "voice_allowance": {
            "amount": 50,
            "unit": "SMS"
        }
    },
    {
        "product name/plan name": "DATA",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 850,
            "unit": "MB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": ""
        }
    },
    {
        "product name/plan name": "TELE SMS",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 1500,
            "unit": ""
        },
        "voice_allowance": {
            "amount": 1500,
            "unit": ""
        }
    },
    {
        "product name/plan name": "4G WI-FI",
        "price": {
            "amount": 1250,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 100,
            "unit": "GB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": ""
        }
    }
]
```

### Notes:
- Each plan has been accurately represented with careful attention to the numbers and their respective units.
- The validity period is assumed to be monthly based on the layout of the image. If other durations were indicated, please clarify.
2024-11-24 23:09:18,853 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 23:09:19,367 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-24 23:11:59,837 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 23:12:13,476 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
[
    {
        "product name/plan name": "TELE VOICE",
        "price": {
            "amount": 100,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 0,
            "unit": "MB"
        },
        "voice_allowance": {
            "amount": 400,
            "unit": "MINS"
        }
    },
    {
        "product name/plan name": "DATA",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 850,
            "unit": "MB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": "MINS"
        }
    },
    {
        "product name/plan name": "TELE SMS",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 0,
            "unit": "MB"
        },
        "voice_allowance": {
            "amount": 3000,
            "unit": "SMS"
        }
    },
    {
        "product name/plan name": "4G WI-FI",
        "price": {
            "amount": 1250,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 100,
            "unit": "GB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": "MINS"
        }
    }
]
```
2024-11-24 23:12:13,891 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 23:12:15,221 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-24 23:15:21,978 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-24 23:15:40,270 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here is the JSON output based on the provided image data:

```json
[
    {
        "product name/plan name": "TELE VOICE",
        "price": {
            "amount": 100,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 400,
            "unit": "MINS"
        },
        "voice_allowance": {
            "amount": 50,
            "unit": "SMS"
        }
    },
    {
        "product name/plan name": "DATA",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 850,
            "unit": "MB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": ""
        }
    },
    {
        "product name/plan name": "TELE SMS",
        "price": {
            "amount": 50,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 1500,
            "unit": "SMS"
        },
        "voice_allowance": {
            "amount": 1500,
            "unit": "SMS"
        }
    },
    {
        "product name/plan name": "4G WI-FI",
        "price": {
            "amount": 1250,
            "currency": "BIRR"
        },
        "validity": {
            "duration": 30,
            "unit": "day"
        },
        "data_allowance": {
            "amount": 100,
            "unit": "GB"
        },
        "voice_allowance": {
            "amount": 0,
            "unit": ""
        }
    }
]
```

This JSON follows the requested format, ensuring numerical accuracy and validation for each field extracted from the image.
2024-11-24 23:15:40,454 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-24 23:15:41,050 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-24 23:41:43,476 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-24 23:41:43,488 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-24 23:41:43,499 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-24 23:45:58,497 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-24 23:45:58,508 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-24 23:45:58,519 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-25 11:23:23,876 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 11:23:37,455 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Data 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "units"
    }
}
```
2024-11-25 11:23:39,081 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:23:51,697 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:23:52,607 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:23:53,782 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Data 850MB
* Product Description: Data 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0units

Would you like to update any of these details or proceed as is?
2024-11-25 11:24:36,677 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:24:37,162 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 11:28:11,118 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:28:11,569 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-25 11:28:11,570 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:28:12,008 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello, welcome to our product creation service! I'm excited to help you create a product that meets your needs. How can I assist you today?"
2024-11-25 11:28:24,515 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 11:28:41,101 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "min"
    }
}
```
2024-11-25 11:29:38,816 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:29:48,517 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:29:49,319 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:29:50,160 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0min

Would you like to update any of these details or proceed as is?
2024-11-25 11:29:50,167 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:29:50,600 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:29:51,799 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:29:52,592 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:29:52,908 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 11:30:05,531 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 11:30:06,738 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:07,343 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:30:08,171 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:09,053 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:30:09,377 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 11:30:13,336 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 11:30:14,012 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:14,466 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:30:15,406 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:16,285 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:30:33,996 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 11:30:43,670 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Data 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 11:30:45,941 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:47,521 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:30:48,407 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:30:49,282 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:31:16,047 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:31:16,524 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:32:42,640 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:32:43,129 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:32:44,539 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:32:45,503 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: data more
* Product Description: data more
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:32:55,701 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:32:56,226 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:33:32,332 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:33:33,429 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-25 11:33:33,430 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:33:33,917 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, I'm an AI assistant, nice to meet you. I'm here to help create a product just for you. Is there something specific you're looking for or would you like to discuss some ideas?
2024-11-25 11:33:49,722 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:33:50,179 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:33:51,488 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:33:52,303 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:34:20,787 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:34:21,291 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 11:34:23,117 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:34:23,978 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:34:38,420 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:34:39,080 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:34:40,960 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:34:42,475 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
    "role": "assistant",
    "content": "Before we proceed, could you please provide a name for your product?"
}
2024-11-25 11:35:13,912 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:35:14,435 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 11:35:15,712 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:35:16,549 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: testing po 25
* Product Description: testing po 25
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:35:36,642 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:35:37,203 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:35:38,701 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:35:40,093 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: testing po 25
* Product Description: testing po 25
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:35:47,691 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:35:48,247 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:36:01,897 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:36:02,751 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: testing po 25
* Product Description: testing po 25
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 11:51:11,579 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:51:22,118 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  }
]
2024-11-25 11:51:23,487 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:51:24,632 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 400 minutes voice and 50 sms
* Product Description: 400 minutes voice and 50 sms
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:51:56,948 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:51:57,420 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:51:58,726 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:51:59,608 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 400 minutes voice and 50 sms
* Product Description: 400 minutes voice and 50 sms
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:52:21,278 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:52:21,762 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-25 11:54:53,061 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:54:53,491 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:54:54,923 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:54:56,282 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here is the formatted output with the correct new lines:


Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:56:34,116 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:56:34,560 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:56:36,013 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:56:36,958 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create an offer with 150 minutes voice and 20 sms for 200 birr
* Product Description: create an offer with 150 minutes voice and 20 sms for 200 birr
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 200
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 150 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 11:56:43,663 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:56:44,152 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 11:58:58,110 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:58:58,558 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-25 11:58:58,559 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 11:58:59,135 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: To delete an offer, you can follow these steps: 

1. Go to the offer you want to delete and click on the three dots next to it. 
2. Select 'Delete' from the dropdown menu. 
3. Confirm that you want to delete the offer by clicking on 'Yes, delete'.
2024-11-25 13:06:17,458 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:06:27,942 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:06:29,433 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:06:30,390 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: a product which offers 10 GB for 100 Birr
* Product Description: a product which offers 10 GB for 100 Birr
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 13:09:36,104 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:09:36,612 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:09:38,101 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:09:38,979 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Data_10GB
* Product Description: Data_10GB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 13:09:53,279 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:09:53,806 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:27:28,885 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 13:27:41,648 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-25 13:27:43,401 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:27:53,882 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:27:54,773 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:27:55,653 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0MB
* Voice Allowance: 400MINS
Would you like to update any of these details or proceed as is?
2024-11-25 13:28:57,624 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 13:29:11,097 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "Data 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 13:29:13,103 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:29:14,028 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:29:14,877 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:29:15,792 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Data 850MB
* Product Description: Data 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 13:30:38,481 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:30:39,052 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 13:30:41,124 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:30:41,732 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, I need to inform you that the Product name 'Data 850MB' is already existing in the system. Would you like to use a different name or provide more details to differentiate this product?"
2024-11-25 13:31:01,673 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:31:02,425 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 13:31:03,901 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:31:04,817 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Data 850MB test
* Product Description: Data 850MB test
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 13:31:20,781 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 13:31:21,377 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 16:50:30,763 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 16:50:51,453 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "N/A"
    }
}
```
2024-11-25 16:50:52,271 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:51:06,323 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 16:51:07,501 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:51:08,387 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 N/A
Would you like to update any of these details or proceed as is?
2024-11-25 16:56:22,771 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 16:56:36,922 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 16:56:39,072 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:56:42,075 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 16:56:42,908 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:56:43,847 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 16:58:26,922 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 16:58:36,508 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minute"
    }
}
```
2024-11-25 16:58:38,564 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:58:39,124 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 16:58:40,039 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 16:58:40,934 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes
Would you like to update any of these details or proceed as is?
2024-11-25 17:04:13,884 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:04:27,826 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "min"
    }
}
```
2024-11-25 17:05:25,971 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:05:32,321 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  }
]
2024-11-25 17:05:33,522 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:05:34,437 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0min

Would you like to update any of these details or proceed as is?
2024-11-25 17:05:34,828 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:05:47,587 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:05:48,842 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:05:49,429 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:05:50,275 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:05:51,189 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:07:54,947 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:08:11,725 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "min"
    }
}
```
2024-11-25 17:08:13,530 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:08:25,322 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  },
  {
    "classification": "product_related"
  }
]
2024-11-25 17:08:26,219 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:08:27,154 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:10:38,582 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:10:51,835 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "min"
    }
}
```
2024-11-25 17:10:52,676 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:10:56,007 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
    "classification": "product_related"
}
```
2024-11-25 17:10:57,264 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:10:58,207 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:13:19,648 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:13:30,344 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:13:31,177 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:13:35,272 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: DATA 850MB\n* Product Description: DATA 850MB\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 50\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 850MB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: DATA 850MB\n* Product Description: DATA 850MB\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 50\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 850MB\n* Voice Allowance: 0 minutes\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: 4G WI-FI\n* Product Description: 4G WI-FI\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 1250\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 100GB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: 4G WI-FI\n* Product Description: 4G WI-FI\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 1250\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 100GB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: 4G WI-FI\n* Product Description: 4G WI-FI\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 1250\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 100GB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "```json\n{\n    \"product name/plan name\": \"DATA 850MB\",\n    \"price\": {\n        \"amount\": 50,\n        \"currency\": \"BIRR\"\n    },\n    \"validity\": {\n        \"duration\": 30,\n        \"unit\": \"day\"\n    },\n    \"data_allowance\": {\n        \"amount\": 850,\n        \"unit\": \"MB\"\n    },\n    \"voice_allowance\": {\n        \"amount\": 0,\n        \"unit\": \"minutes\"\n    }\n}\n```",
    "classification": "product_related"
  }
]
2024-11-25 17:13:36,233 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:13:37,237 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:15:29,986 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:15:42,710 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Here's the JSON output based on the provided image data:

```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```

### Notes:
- The "validity" is assumed as 30 days since "Monthly" was mentioned.
- Voice allowance was not specified in the image, so it's marked as "0 minutes." Adjust if more information is available.
2024-11-25 17:15:44,078 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:15:47,996 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 17:15:48,841 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:15:49,733 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:17:14,726 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:17:29,259 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:17:30,956 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:17:31,467 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: { 
  "classification": "product_related" 
}
2024-11-25 17:17:32,318 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:17:33,226 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:19:03,456 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:19:21,867 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:20:28,829 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:20:29,367 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:20:30,274 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:20:31,229 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:20:31,638 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:20:42,740 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:20:43,233 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:20:43,852 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:20:45,447 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:20:46,430 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:21:52,111 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:22:02,376 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "min"
    }
}
```
2024-11-25 17:22:03,687 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:22:07,715 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
[
  {
    "role": "assistant",
    "content_classification": "product_related"
  },
  {
    "role": "assistant",
    "content_classification": "product_related"
  },
  {
    "role": "assistant",
    "content_classification": "product_related"
  },
  {
    "role": "assistant",
    "content_classification": "product_related"
  }
]
```
2024-11-25 17:22:08,591 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:22:09,503 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Please confirm the following details:
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:39:59,956 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:40:10,429 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:40:12,103 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:40:12,996 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: new plan
* Product Description: new plan
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price:  
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-25 17:41:02,503 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:41:03,045 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:41:04,429 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:41:05,394 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Test Addon2.0
* Product Description: Test Addon2.0
* Product Family: GSM
* Product Group: postpaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: addon
* Data Allowance: 100 Mins
* Voice Allowance: 100 sms

Would you like to update any of these details or proceed as is?
2024-11-25 17:41:17,771 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:41:18,357 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 17:41:39,107 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:41:54,712 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:41:56,889 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:41:57,568 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 17:41:58,399 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:41:59,828 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:42:48,696 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:42:58,483 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:43:00,370 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:43:00,880 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```json
{
  "classification": "product_related"
}
```
2024-11-25 17:43:01,754 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:43:02,688 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:45:07,555 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:45:17,747 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:45:19,689 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:45:20,182 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:45:21,036 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:45:22,056 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:45:38,562 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:45:43,509 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:45:45,553 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:45:46,033 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:45:46,876 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:45:47,806 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:47:12,052 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:47:27,538 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:47:28,370 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:47:28,866 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:47:29,708 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:47:31,294 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:47:36,411 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:47:44,292 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "MIN"
    }
}
```
2024-11-25 17:47:45,645 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:47:46,925 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:47:47,963 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:47:48,847 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0MIN

Would you like to update any of these details or proceed as is?
2024-11-25 17:49:09,087 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:49:21,023 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:49:23,087 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:49:23,594 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-25 17:49:24,564 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:49:25,488 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:50:52,326 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:51:05,950 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the provided image data, here is the extracted information in the requested JSON format:

```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```

### Explanation of Extraction:
- **Plan Name**: "DATA 850MB"
- **Price**: 50 BIRR
- **Validity**: Monthly interpreted as 30 days
- **Data Allowance**: 850 MB
- **Voice Allowance**: Not explicitly mentioned, assumed to be 0 minutes (as not stated).
2024-11-25 17:51:06,257 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:51:11,785 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-25 17:51:12,724 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:51:13,615 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-25 17:51:24,628 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:51:36,258 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: Based on the analysis of the provided image, here is the extracted data formatted as JSON:

```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "MIN"
    }
}
```

### Notes:
- Validity is assumed as 30 days based on the typical monthly billing cycle.
- Voice allowance is set to 0 as it's not specified in the image. Adjust as necessary if further information is provided.
2024-11-25 17:51:38,548 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:51:39,075 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:51:40,095 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:51:40,989 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0MIN

Would you like to update any of these details or proceed as is?
2024-11-25 17:52:46,531 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-25 17:53:00,649 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-11-25 17:53:02,958 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:53:03,494 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-25 17:53:04,547 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-25 17:53:05,885 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-26 14:32:45,955 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:33:02,211 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 14:33:03,579 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:33:04,485 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20GB Data and 400 Voice
* Product Description: 20GB Data and 400 Voice
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: None
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20GB
* Voice Allowance: 400 

Would you like to update any of these details or proceed as is?
2024-11-26 14:33:38,347 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:33:38,814 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 14:33:40,375 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:33:41,276 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20GB Data and 400 Voice
* Product Description: 20GB Data and 400 Voice
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20GB
* Voice Allowance: 200 Minutes

Would you like to update any of these details or proceed as is?
2024-11-26 14:34:21,786 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:34:22,367 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-26 14:34:24,024 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:34:24,909 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20GB Data
* Product Description: 20GB Data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20GB
* Voice Allowance: 200 Minutes

Would you like to update any of these details or proceed as is?
2024-11-26 14:34:58,613 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:34:59,168 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-26 14:35:00,790 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:35:01,338 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "To finalize your product plan, could you please provide us with the offer price for the 20GB Data product?"
2024-11-26 14:35:14,841 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 14:35:15,428 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-26 17:49:28,289 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:49:39,313 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification" : "general_conversation"
}
2024-11-26 17:49:39,315 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:49:39,747 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello! Welcome to our store. How can I assist you today? Are you looking for something in particular or just browsing?
2024-11-26 17:49:45,630 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:49:46,138 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 17:49:47,549 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:49:51,127 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: * Product Name: offer
* Product Description: offer
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-26 17:59:45,487 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:59:50,952 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 17:59:52,501 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 17:59:53,283 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: offer
* Product Description: offer
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-26 18:00:21,544 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:00:22,179 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 18:00:23,907 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:00:24,455 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, can you please provide the price of the product? This will be the offer price that will be charged to our customers."
2024-11-26 18:00:37,170 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:00:37,728 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-26 18:00:39,229 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:00:40,024 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: offer
* Product Description: offer
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 
Would you like to update any of these details or proceed as is?
2024-11-26 18:01:09,844 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:01:10,526 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-26 18:01:12,060 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:01:12,935 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Yettel day
* Product Description: Yettel day
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Please format it as follows without the newlines in between.
 
Would you like to update any of these details or proceed as is?
2024-11-26 18:01:34,244 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:01:34,800 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 18:03:56,222 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:03:56,801 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-26 18:03:58,331 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 18:03:59,209 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-26 19:55:34,876 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:55:50,823 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "general_conversation"}
2024-11-26 19:55:50,825 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:55:51,404 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Sorry, it looks like you started to type a message, but it got cut off. Could you please complete your request? I'd be happy to help you with what you want me to remove."
2024-11-26 19:55:55,025 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:55:55,435 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-26 19:55:55,436 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:55:56,361 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Sorry to see you want to remove our chatbox. I'm here to help and assist you. Could you please let me know what made you want to remove it and is there anything I can do to make our conversation better?"
2024-11-26 19:56:20,794 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:56:21,253 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-26 19:56:22,553 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 19:56:23,536 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?

Please provide values for  Product Name, Product Description, Product Offer Price, Data Allowance and Voice Allowance
2024-11-26 20:03:14,640 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 20:03:19,570 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {"classification": "product_related"}
2024-11-26 20:03:21,527 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 20:03:22,319 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-26 20:04:22,622 - services.ai_client_service - INFO - ai_client_service.py:75 - Making image API call to OpenAI
2024-11-26 20:04:35,417 - services.ai_client_service - DEBUG - ai_client_service.py:89 - OpenAI image API response: I'm unable to analyze images as requested. If you have specific details or text from an image that you would like me to assist with, please provide that, and I'll be happy to help!
2024-11-26 20:04:36,598 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 20:04:37,304 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-26 20:04:37,305 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-26 20:04:37,938 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: I'd be happy to help with any text-based information you need assistance with. If there's something specific you'd like me to help with, such as reading or summarizing text, please let me know and I'll do my best to assist you.
2024-11-27 10:32:40,538 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:32:56,562 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-27 10:32:56,565 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:32:56,958 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Hello, welcome to our store. How can I assist you today?"
2024-11-27 10:35:12,938 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:35:13,383 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:35:14,847 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:35:15,671 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:37:12,014 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:37:12,591 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-27 10:37:13,992 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:37:14,767 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:38:19,885 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:38:20,402 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:38:21,950 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:38:22,506 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we proceed, could you please let me know the name of the product you'd like to create an offer price for?"
2024-11-27 10:39:24,363 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:39:24,887 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-27 10:39:26,189 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:39:27,024 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: hello
* Product Description: hello
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:39:38,149 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:39:38,682 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:39:40,310 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:39:40,883 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we can create the offer price for your product, could you please let me know how much you would like to price the 'hello' product?"
2024-11-27 10:39:59,357 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:39:59,894 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:40:01,166 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:40:01,993 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hello
* Product Description: Hello
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:40:27,820 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:40:31,635 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-27 10:40:32,922 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:40:33,509 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: "Before we can proceed, could you please let me know the price you'd like to offer for the 'hello' product?"
2024-11-27 10:40:48,623 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:40:49,212 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:40:59,795 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:41:00,631 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hello
* Product Description: Hello
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:41:42,063 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:41:42,700 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 10:41:44,049 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:41:44,873 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hello
* Product Description: Hello
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON 
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 10:42:02,353 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 10:42:03,013 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-27 12:03:38,322 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:03:48,756 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-27 12:03:48,757 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:03:49,203 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hi, welcome to our product customization service. How can I assist you today? Are you looking to create something new or get help with an existing product?
2024-11-27 12:03:52,347 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:03:52,754 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
"classification": "product_related"
}
2024-11-27 12:03:54,053 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:03:54,864 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: null
* Product Description: null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: null
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-11-27 12:04:02,901 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:04:03,373 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 12:04:04,756 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:04:05,539 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 12:04:15,157 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:04:15,669 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-27 12:04:23,393 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:04:24,200 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 12:15:36,359 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:15:41,832 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-27 12:15:41,833 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:15:42,194 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, how can I assist you today?
2024-11-27 12:15:51,777 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:15:54,185 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 12:15:55,488 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:15:56,293 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 12:31:36,878 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:31:47,389 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 12:31:48,828 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:31:49,613 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 12:41:19,241 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:41:19,817 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 12:41:21,100 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:41:21,891 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 12:46:27,510 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:46:33,474 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "product_related"
}
```
2024-11-27 12:46:34,878 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 12:46:36,002 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 13:08:32,374 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 13:08:42,815 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 13:08:44,281 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 13:08:45,180 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 200_Data
* Product Description: 200_Data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20 GB
* Voice Allowance: 20 Minutes

Would you like to update any of these details or proceed as is?
2024-11-27 13:08:53,325 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 13:08:53,771 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 14:36:46,804 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:37:04,286 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: [
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n\n* Product Name: DATA 850MB\n* Product Description: DATA 850MB\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 50\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 850MB\n* Voice Allowance: 0minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: DATA 850MB\n* Product Description: DATA 850MB\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 50\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 850MB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Here are the details of your product with all mandatory default parameters enabled\n* Product Name: 4G WI-FI\n* Product Description: 4G WI-FI\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 1250\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 100GB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "assistant",
    "content": "Please confirm the following details:\n* Product Name: 4G WI-FI\n* Product Description: 4G WI-FI\n* Product Family: GSM\n* Product Group: Prepaid\n* Product Offer Price: 1250\n* POP Type: Normal\n* Price Category: Base Price\n* Price Mode: Non-Recurring\n* Product Specification Type: ADDON\n* Data Allowance: 100GB\n* Voice Allowance: 0 minutes\n\nWould you like to update any of these details or proceed as is?",
    "classification": "product_related"
  },
  {
    "role": "user",
    "content": "hi",
    "classification": "general_conversation"
  }
]
2024-11-27 14:37:05,623 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:37:06,504 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-11-27 14:47:32,135 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:47:36,575 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "general_conversation"
}
2024-11-27 14:47:36,576 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:47:37,043 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Hello, welcome to our platform! How can I assist you today? Are you looking for information on a specific product, or would you like me to help you create something new?
2024-11-27 14:47:45,603 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:47:46,058 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: ```
{
  "classification": "general_conversation"
}
```
2024-11-27 14:47:47,424 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 14:47:48,214 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:08:20,892 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 15:08:31,332 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: {
  "classification": "product_related"
}
2024-11-27 15:08:32,772 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 15:08:33,564 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:08:49,783 - services.ai_client_service - INFO - ai_client_service.py:16 - Initializing AI clients
2024-11-27 15:08:49,801 - services.ai_client_service - INFO - ai_client_service.py:19 - Initialized Groq client
2024-11-27 15:08:49,818 - services.ai_client_service - INFO - ai_client_service.py:32 - Initialized OpenAI image client
2024-11-27 15:08:52,929 - services.ai_client_service - INFO - ai_client_service.py:107 - Making classification API call
2024-11-27 15:08:52,929 - services.ai_client_service - ERROR - ai_client_service.py:146 - Error in classification API call: name 'BaseModel' is not defined
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 110, in make_classification_call
    class ConversationClassification(BaseModel):
NameError: name 'BaseModel' is not defined
2024-11-27 15:08:54,503 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 15:08:55,349 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:09:05,421 - services.ai_client_service - INFO - ai_client_service.py:107 - Making classification API call
2024-11-27 15:09:05,421 - services.ai_client_service - ERROR - ai_client_service.py:146 - Error in classification API call: name 'BaseModel' is not defined
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 110, in make_classification_call
    class ConversationClassification(BaseModel):
NameError: name 'BaseModel' is not defined
2024-11-27 15:09:06,804 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 15:09:07,659 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:09:46,961 - services.ai_client_service - INFO - ai_client_service.py:107 - Making classification API call
2024-11-27 15:09:46,961 - services.ai_client_service - ERROR - ai_client_service.py:146 - Error in classification API call: name 'BaseModel' is not defined
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 110, in make_classification_call
    class ConversationClassification(BaseModel):
NameError: name 'BaseModel' is not defined
2024-11-27 15:09:48,519 - services.ai_client_service - INFO - ai_client_service.py:36 - Making API call to groq
2024-11-27 15:09:49,330 - services.ai_client_service - DEBUG - ai_client_service.py:47 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:12:26,039 - services.ai_client_service - INFO - ai_client_service.py:17 - Initializing AI clients
2024-11-27 15:12:26,049 - services.ai_client_service - INFO - ai_client_service.py:20 - Initialized Groq client
2024-11-27 15:12:26,062 - services.ai_client_service - INFO - ai_client_service.py:33 - Initialized OpenAI image client
2024-11-27 15:12:34,349 - services.ai_client_service - INFO - ai_client_service.py:108 - Making classification API call
2024-11-27 15:12:34,349 - services.ai_client_service - ERROR - ai_client_service.py:147 - Error in classification API call: name 'Literal' is not defined
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 111, in make_classification_call
    class ConversationClassification(BaseModel):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 112, in ConversationClassification
    classification: Literal["product_related", "general_conversation"]
NameError: name 'Literal' is not defined
2024-11-27 15:12:35,802 - services.ai_client_service - INFO - ai_client_service.py:37 - Making API call to groq
2024-11-27 15:12:36,652 - services.ai_client_service - DEBUG - ai_client_service.py:48 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: I want to create a product
* Product Description: I want to create a product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:13:24,331 - services.ai_client_service - INFO - ai_client_service.py:18 - Initializing AI clients
2024-11-27 15:13:24,340 - services.ai_client_service - INFO - ai_client_service.py:21 - Initialized Groq client
2024-11-27 15:13:24,350 - services.ai_client_service - INFO - ai_client_service.py:34 - Initialized OpenAI image client
2024-11-27 15:13:30,972 - services.ai_client_service - INFO - ai_client_service.py:109 - Making classification API call
2024-11-27 15:13:31,491 - services.ai_client_service - ERROR - ai_client_service.py:148 - Error in classification API call: name 'json' is not defined
Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 125, in make_classification_call
    result = json.dumps({"classification": response.classification})
NameError: name 'json' is not defined
2024-11-27 15:13:32,801 - services.ai_client_service - INFO - ai_client_service.py:38 - Making API call to groq
2024-11-27 15:13:33,695 - services.ai_client_service - DEBUG - ai_client_service.py:49 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Wasel Flexi Plan
* Product Description: plan offering flexible data and voice options for users.
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 AED
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 GB
* Voice Allowance: 500 minutes

Would you like to update any of these details or proceed as is?
2024-11-27 15:14:11,554 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 15:14:11,563 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 15:14:11,573 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 15:14:20,688 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:14:21,817 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:14:21,818 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:14:22,275 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: That's exciting to hear that you want to create a product. What kind of product are you thinking of? Is it a physical product, a digital product, or something else?
2024-11-27 15:14:42,837 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:14:43,371 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:14:43,372 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:14:43,983 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To create a product, I'll need some more information from you. Can you please provide me with some details such as what type of product you want to create (e.g. digital, physical, service) and what problem or need does it solve for your target audience? Additionally, do you have any specific features or functionalities in mind for this product?
2024-11-27 15:34:55,039 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 15:34:55,049 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 15:34:55,059 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 15:35:04,652 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:35:14,199 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:35:14,200 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:35:14,641 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! What kind of product would you like to create today?
2024-11-27 15:35:35,951 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:35:36,457 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:35:36,458 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:35:36,941 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: What kind of product would you like to create today, and please click the image upload button on the left to share your image.
2024-11-27 15:35:54,407 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:35:54,929 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:35:54,930 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:35:55,388 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image. What kind of product would you like to create today?
2024-11-27 15:40:16,846 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 15:40:16,856 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 15:40:16,865 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 15:40:22,642 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:40:23,155 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:40:23,156 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:40:23,645 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image. What kind of product with an image would you like to create today?
2024-11-27 15:41:57,708 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 15:41:57,717 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 15:41:57,727 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 15:42:02,593 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:42:03,190 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:42:03,191 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:42:03,686 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image. Could you also provide some details about the product you'd like to create with this image?
2024-11-27 15:42:14,212 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:42:14,721 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:42:14,722 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:42:15,152 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-27 15:42:25,183 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:42:25,752 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:42:25,753 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:42:26,155 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-27 15:42:48,292 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:42:48,786 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 15:42:50,075 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:42:50,879 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:43:07,480 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:43:07,988 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 15:43:09,217 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:43:10,072 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9 dollars
* Product Description: 9 dollars
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 9
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 15:44:02,734 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:44:03,231 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:44:03,232 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:44:04,286 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-27 15:44:18,643 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:44:19,197 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:44:19,198 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:44:19,676 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image, then I'll guide you through creating your product.
2024-11-27 15:44:33,123 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:44:33,651 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:44:33,652 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:44:34,181 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image. To proceed with creating your product, let's get started - can you tell me details of the product you'd like to create?
2024-11-27 15:45:09,732 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:45:10,267 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:45:10,268 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:45:11,392 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started on creating your product. Please click the image upload button to share your image, and I'll guide you through the process.
2024-11-27 15:45:15,971 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:45:16,494 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:45:16,495 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:45:16,997 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To create a product with an image, please click the image upload button on the left to share your image. Kindly provide the details of the product you wish to create.
2024-11-27 15:46:08,203 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 15:46:08,212 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 15:46:08,221 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 15:46:11,553 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:46:16,531 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:46:16,532 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:46:16,966 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-27 15:46:23,641 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:46:24,138 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:46:24,139 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:46:24,550 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-27 15:46:33,169 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:46:33,696 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:46:33,697 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:46:34,372 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-27 15:51:07,766 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:51:08,282 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:51:08,284 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:51:08,687 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-27 15:51:24,606 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:51:25,150 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:51:25,151 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:51:25,899 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-27 15:51:39,782 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:51:40,318 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 15:51:40,319 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:51:41,100 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-27 15:52:08,552 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 15:52:09,777 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 15:52:11,354 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 15:52:12,158 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: image
* Product Description: image
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 30
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 16:01:07,546 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:01:07,556 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:01:07,567 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:01:15,589 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:01:27,284 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 16:01:27,285 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:01:27,701 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-27 16:01:36,195 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:01:36,749 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 16:01:36,750 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:01:37,185 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-27 16:01:56,226 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:01:56,752 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 16:01:56,754 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:01:57,191 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-27 16:02:12,010 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:02:12,819 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7fb9d24dbc40 state=finished raised AssertionError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 183, in retry_sync
    return process_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/process_response.py", line 143, in process_response
    model = response_model.from_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 147, in from_response
    return cls.parse_tools(completion, validation_context, strict)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 318, in parse_tools
    assert (
AssertionError: Instructor does not support multiple tool calls, use List[Model] instead.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7fb9d24dbc40 state=finished raised AssertionError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7fb9d24dbc40 state=finished raised AssertionError>]
2024-11-27 16:02:14,429 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:02:15,575 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 4gb data
* Product Description: create a product with 4gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 4gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 16:04:10,000 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:04:10,009 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:04:10,019 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:04:27,980 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:04:31,617 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 16:04:31,618 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:04:32,183 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-27 16:04:40,895 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:04:41,420 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-27 16:04:41,421 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:04:41,843 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-27 16:04:49,883 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:04:50,624 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f8dd930a5c0 state=finished raised AssertionError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 183, in retry_sync
    return process_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/process_response.py", line 143, in process_response
    model = response_model.from_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 147, in from_response
    return cls.parse_tools(completion, validation_context, strict)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 318, in parse_tools
    assert (
AssertionError: Instructor does not support multiple tool calls, use List[Model] instead.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f8dd930a5c0 state=finished raised AssertionError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f8dd930a5c0 state=finished raised AssertionError>]
2024-11-27 16:04:52,254 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:04:53,713 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 4gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-27 16:05:07,896 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:05:08,469 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 16:05:09,862 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:05:10,361 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Before we proceed, can you please tell me what name you'd like to give to your product?"
2024-11-27 16:06:52,518 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:06:52,533 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:06:52,543 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:07:29,172 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-11-27 16:07:45,158 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 400,
        "unit": "MINS"
    },
    "voice_allowance": {
        "amount": 50,
        "unit": "SMS"
    }
}
```
2024-11-27 16:07:46,980 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:07:51,380 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 16:07:52,173 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:07:53,016 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 50 SMS

Would you like to update any of these details or proceed as is?
2024-11-27 16:11:06,442 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:11:06,452 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:11:06,461 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:12:51,527 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:12:51,537 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:12:51,546 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:13:19,252 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-11-27 16:13:26,200 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-27 16:13:26,542 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:13:27,124 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 16:13:27,954 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:13:28,795 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 400 MINS
* Voice Allowance: 50 SMS

Would you like to update any of these details or proceed as is?
2024-11-27 16:19:37,971 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-27 16:19:37,982 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-27 16:19:37,991 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-27 16:21:15,758 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-11-27 16:21:25,107 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-11-27 16:21:25,115 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-27 16:21:35,127 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-27 16:21:36,214 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-27 16:21:37,061 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-11-28 10:22:49,059 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:23:01,497 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:23:01,499 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:23:01,911 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-28 10:23:29,986 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:23:30,507 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:23:30,508 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:23:30,940 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-28 10:24:19,187 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:24:19,733 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 10:24:21,176 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:24:22,083 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Data 4GB
* Product Description: Data 4GB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 4GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-28 10:24:37,544 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:24:38,085 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 10:25:40,514 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:25:43,792 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:25:43,794 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:25:44,221 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-28 10:32:28,242 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:32:31,334 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:32:31,335 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:32:31,732 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-11-28 10:32:42,726 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:32:43,246 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:32:43,247 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:32:43,710 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-28 10:32:58,835 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:32:59,355 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:32:59,356 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:32:59,852 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To create a product, please provide details such as the product's name, description, desired features, and any specific requirements you may have.
2024-11-28 10:37:13,180 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-11-28 10:37:32,737 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA 850MB",
    "price": {
        "amount": 50,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "MIN"
    }
}
```
2024-11-28 10:37:33,070 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:37:39,122 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 10:37:39,859 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:37:40,720 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0MIN

Would you like to update any of these details or proceed as is?
2024-11-28 10:56:34,554 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:56:46,529 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:56:46,530 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:56:46,978 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, How may I assist you today?
2024-11-28 10:56:55,574 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:56:56,201 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:56:56,202 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:56:56,836 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Since your last message was "how are you?", I'll respond accordingly.

Hello! How may I assist you today?
2024-11-28 10:58:23,407 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:58:24,013 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:58:24,014 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:58:24,588 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You want to create a product without an image, Kindly provide the details of the product you wish to create.
2024-11-28 10:58:54,689 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:58:59,081 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:58:59,082 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:58:59,591 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-28 10:59:18,676 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:59:19,313 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:59:19,314 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:59:19,879 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of product you'd like to create?
2024-11-28 10:59:28,217 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 10:59:28,851 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 10:59:28,852 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 10:59:29,402 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'll need more details about what you're looking for?
2024-11-28 11:10:35,074 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-28 11:10:35,085 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-28 11:10:35,095 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-28 11:10:48,739 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:10:52,596 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:10:52,599 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:10:53,063 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing great, thanks. Could you please provide more details about what you're looking for?
2024-11-28 11:11:07,557 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:11:08,074 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:11:08,076 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:11:08,516 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing great, thanks for asking. Could you please provide more details about what you're looking for?
2024-11-28 11:11:10,473 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:11:10,958 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:11:10,959 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:11:11,397 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing well, thanks for asking. Could you please provide more details about what you're looking for?
2024-11-28 11:11:25,985 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:11:26,513 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:11:26,514 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:11:26,978 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm an AI assistant here to help with product creation and answer general questions. Could you please provide more details about what you're looking for?
2024-11-28 11:15:59,756 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:16:00,322 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:16:00,324 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:16:00,761 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, how can I help you today? Could you please provide more details about what you're looking for?
2024-11-28 11:16:12,105 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:16:12,694 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:16:12,695 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:16:13,120 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:16:30,203 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:16:30,833 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:16:30,834 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:16:31,277 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:16:42,915 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:16:43,469 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:16:43,470 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:16:43,911 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:18:13,275 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:18:13,833 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:18:13,835 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:18:14,285 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:18:35,703 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:18:36,283 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:18:36,284 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:18:36,763 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-11-28 11:21:16,698 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:21:27,206 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:21:27,207 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:21:27,666 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:22:10,587 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:22:11,097 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:22:11,098 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:22:11,539 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing well, thank you. Could you please provide more details about what you're looking for?
2024-11-28 11:36:53,340 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-28 11:36:53,349 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-28 11:36:53,358 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-28 11:37:07,237 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:37:17,498 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:37:17,501 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:37:17,927 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-11-28 11:37:24,639 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:37:25,203 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:37:25,204 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:37:25,651 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: May I please know would you like to create a product?
2024-11-28 11:37:40,856 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:37:41,381 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:37:41,382 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:37:41,819 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 11:38:18,807 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:38:20,247 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:38:20,248 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:38:20,712 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide more details about what you're looking for?"
2024-11-28 11:40:49,644 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-11-28 11:40:49,654 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-11-28 11:40:49,664 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-11-28 11:41:02,058 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:41:02,590 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:41:02,591 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:41:03,028 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hi, how are you? Would you like to create a product?"
2024-11-28 11:41:12,209 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:41:15,980 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:41:15,981 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:41:17,352 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-28 11:41:32,223 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:41:32,759 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:41:32,760 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:41:34,234 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-11-28 11:41:48,943 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:41:49,501 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:41:49,502 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:41:49,947 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-28 11:42:51,567 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:42:54,880 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:42:54,881 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:42:55,324 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-11-28 11:42:56,892 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:42:57,360 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:42:57,361 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:42:57,778 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-11-28 11:43:10,526 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:43:11,119 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:43:11,120 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:43:11,570 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-28 11:44:18,110 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:44:18,712 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:44:18,713 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:44:19,178 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-11-28 11:44:35,732 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:44:36,322 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:44:36,323 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:44:36,953 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-11-28 11:44:45,041 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 11:44:45,653 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 11:44:45,655 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 11:44:46,138 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide more details about what you're looking for?"
2024-11-28 12:02:08,448 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:02:17,661 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:02:17,662 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:02:18,087 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-11-28 12:03:16,173 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:03:16,707 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 12:03:18,018 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:03:18,845 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 2_GB
* Product Description: 2_GB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20 GB
* Voice Allowance: 20 minutes

Would you like to update any of these details or proceed as is?
2024-11-28 12:03:52,417 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:03:53,129 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 12:03:54,572 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:03:55,150 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed, could you please provide the offer price for the 2_GB product? This is the price you would like to charge for the 20 GB data and 20 minutes voice allowance.
2024-11-28 12:04:11,409 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:04:11,956 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 12:05:23,934 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:05:24,477 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:05:24,478 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:05:24,921 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me more details about the rules you'd like to create?
2024-11-28 12:05:45,053 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:05:45,588 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 12:05:47,064 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:05:47,850 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-28 12:09:17,413 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:09:17,937 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:09:17,938 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:09:18,374 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! Would you like to create a product?"
2024-11-28 12:09:32,910 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:09:33,439 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:09:33,440 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:09:33,889 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-28 12:09:45,372 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:09:45,906 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:09:45,907 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:09:46,361 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello, how are you? Would you like to create a product?
2024-11-28 12:33:16,244 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:33:26,268 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:33:26,269 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:33:26,701 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing well, thank you! Would you like to create a product?
2024-11-28 12:33:42,788 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:33:43,305 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:33:43,306 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:33:43,777 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-11-28 12:34:04,745 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:34:05,284 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:34:05,285 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:34:05,734 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 12:34:23,768 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:34:24,307 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:34:24,308 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:34:24,772 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about the Voice plan you're looking for?
2024-11-28 12:34:29,799 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:34:30,427 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:34:30,428 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:34:30,923 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you mean by "5" in your Voice plan?
2024-11-28 12:34:50,221 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:34:50,784 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:34:50,785 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:34:51,251 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about the Voice plan you're looking for?
2024-11-28 12:35:02,356 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:35:03,194 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:35:03,195 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:35:04,163 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: It seems like we're stuck in a loop. To better understand what you're looking for in a Voice plan, could you please provide more details about the features or specifics you're interested in, such as data limit, minutes, or any additional services?
2024-11-28 12:35:56,143 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:35:56,743 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 12:35:56,744 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:35:57,341 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'd be happy to help you with your Voice plan. What data limit are you looking for (e.g. 1GB, 5GB, unlimited)?
2024-11-28 12:36:19,135 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 12:36:19,753 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 12:36:21,137 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 12:36:21,926 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 1GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-28 13:21:00,290 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:21:09,563 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:21:09,564 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:21:09,986 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-11-28 13:21:20,443 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:21:20,988 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:21:20,989 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:21:21,619 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 13:21:38,238 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:21:38,769 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:21:38,770 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:21:39,207 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what FTTH POGs entail?
2024-11-28 13:21:55,257 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:21:55,860 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:21:55,861 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:21:56,938 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I think I can help you create a list of available FTTH plans. 

Please find the list of available FTTH plans in JSON format below:

[
  {
    "Plan Name": "Basic",
    "Speed": "100 Mbps",
    "Data Limit": "Unlimited",
    "Price": "₹ 999"
  },
  {
    "Plan Name": "Premium",
    "Speed": "500 Mbps",
    "Data Limit": "Unlimited",
    "Price": "₹ 1999"
  },
  {
    "Plan Name": "Ultimate",
    "Speed": "1 Gbps",
    "Data Limit": "Unlimited",
    "Price": "₹ 2999"
  }
]

Please let me know if you would like to create a product or make any changes to this list
2024-11-28 13:21:57,514 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:21:57,999 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:21:58,000 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:21:58,464 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 13:22:19,299 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:22:19,868 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:22:19,869 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:22:20,345 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-11-28 13:22:40,245 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:22:40,784 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:22:40,785 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:22:41,251 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-11-28 13:23:01,979 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:23:02,557 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:23:02,558 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:23:03,180 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide more details about which FTTH plans you're referring to (e.g. internet speed, provider, region)?"

(No change in the incoming list as the last assistant response is reused to ask more details instead of the user )
2024-11-28 13:23:36,709 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:23:37,273 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:23:37,275 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:23:37,797 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about which FTTH plans you're referring to (e.g. internet speed, provider, region)?
2024-11-28 13:23:50,849 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:23:52,227 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-28 13:23:52,228 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:23:53,682 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I apologize for the repetitive questions earlier. Since you mentioned "provider," could you please specify the name of the provider you're interested in (e.g. Verizon, AT&T, etc.)?
2024-11-28 13:24:15,439 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-28 13:24:16,073 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-11-28 13:24:17,561 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-28 13:24:18,325 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-11-29 13:12:41,717 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-11-29 13:12:54,635 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-11-29 13:12:54,636 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-11-29 13:12:55,095 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please provide the details of the offer you wish to create.
2024-12-02 11:58:22,697 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 11:58:35,441 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-02 11:58:35,442 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 11:58:35,917 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-02 12:00:02,237 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-02 12:00:22,660 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: Here is the extracted data in JSON format:

```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```

### Notes:
- The price has been carefully verified as "1,250" Birr, which is treated as 1250.
- There is no specific "voice allowance" indicated in the image, which I've noted as 0 minutes. Please adjust if there is information not visible in the image.
2024-12-02 12:00:23,625 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:00:24,250 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:00:25,141 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:00:26,031 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-02 12:00:56,475 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:00:57,058 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:00:59,279 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:00:59,861 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize for the pause. Our system is indicating that the Product Name '4G WI-FI' already exists. Could you please provide a new or unique Product Name for this product?"
2024-12-02 12:01:23,960 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:01:24,564 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:01:26,100 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:01:26,993 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 3G WI-FI
* Product Description: 3G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-02 12:01:37,380 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:01:37,985 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:02:31,471 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:02:32,045 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-02 12:02:32,046 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:02:32,551 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-12-02 12:02:58,711 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:03:00,822 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:03:04,673 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:03:05,639 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: product with a 10GB data for $10
* Product Description: product with a 10GB data for $10
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-02 12:05:39,435 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:05:46,072 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-02 12:05:46,073 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:05:46,509 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-02 12:06:21,085 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-02 12:06:21,096 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-02 12:06:21,107 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-02 12:06:31,127 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-02 12:06:31,136 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-02 12:06:31,146 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-02 12:06:51,583 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:06:52,189 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:06:53,648 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:06:54,469 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-02 12:07:16,336 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:07:16,881 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:07:18,668 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:07:19,207 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "One last thing, could you please tell me what you'd like to name your product with 5GB data?"
2024-12-02 12:07:58,323 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:07:58,904 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:08:00,354 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:08:00,872 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "One more thing, could you please tell me what the price of your 'data 5GB' product will be?"
2024-12-02 12:08:51,168 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:08:51,777 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:08:53,474 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:08:54,351 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: data 5GB
* Product Description: data 5GB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-02 12:09:07,046 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:09:07,680 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:10:21,273 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-02 12:10:21,788 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-02 12:10:23,321 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-02 12:10:24,114 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-04 15:32:18,025 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-04 15:32:30,099 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-04 15:32:30,101 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-04 15:32:30,539 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-05 12:04:49,644 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-05 12:05:02,528 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-05 12:05:02,529 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-05 12:05:02,972 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-06 10:40:39,048 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-06 10:40:51,925 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-06 10:40:51,927 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-06 10:40:52,389 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-12-06 10:40:59,219 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-06 10:40:59,765 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-06 10:40:59,766 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-06 10:41:00,200 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-12-06 10:41:09,719 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-06 10:41:10,283 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-06 10:41:10,283 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-06 10:41:10,755 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the ticket you'd like to create?
2024-12-06 10:41:19,768 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-06 10:41:20,274 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-06 10:41:20,275 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-06 10:41:20,713 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-12-08 23:49:34,581 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-08 23:49:45,876 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-08 23:49:47,116 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-08 23:49:47,915 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Product of 5gb data
* Product Description: Product of 5gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-08 23:50:16,712 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-08 23:50:17,246 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-08 23:50:17,247 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-08 23:50:17,893 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-08 23:50:41,504 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-08 23:50:42,032 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-08 23:50:43,733 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-08 23:50:44,642 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 10 dollars for 5gb data
* Product Description: create a product with 10 dollars for 5gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-08 23:54:14,363 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-08 23:54:14,373 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-08 23:54:14,383 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-08 23:55:20,701 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-08 23:55:20,711 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-08 23:55:20,721 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-08 23:59:13,748 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-08 23:59:18,189 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-08 23:59:18,190 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-08 23:59:18,578 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm doing great, thanks. Would you like to create a product?
2024-12-09 00:04:41,702 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 00:04:42,154 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 00:04:43,480 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 00:04:44,240 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:22:23,162 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:22:34,877 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:22:36,474 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:22:37,437 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Create a product with 5gb data
* Product Description: Create a product with 5gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:27:58,466 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:28:02,718 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:28:04,227 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:28:05,801 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 2gb data
* Product Description: 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:30:00,054 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-09 09:30:00,063 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-09 09:30:00,072 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-09 09:30:04,246 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:30:04,884 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:30:07,007 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:30:07,822 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product
* Product Description: create a product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-09 09:30:45,452 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-09 09:30:45,461 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-09 09:30:45,470 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-09 09:30:54,578 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:30:55,124 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:30:56,964 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:30:57,942 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Create a product with 10 dollar for 2gb data
* Product Description: Create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:35:49,574 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-09 09:35:49,584 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-09 09:35:49,593 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-09 09:35:52,706 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:35:53,289 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:35:54,640 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:35:55,534 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:36:18,303 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:36:18,819 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:36:20,645 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:36:21,565 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:37:10,719 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:37:11,248 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:37:12,922 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:37:13,819 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-09 09:37:47,157 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:37:47,747 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:37:49,357 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:37:50,326 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:40:19,434 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-09 09:40:19,443 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-09 09:40:19,452 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-09 09:40:25,159 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:40:34,620 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:40:35,999 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:40:36,869 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: a product with 2gb data 
* Product Description: a product with 2gb data 
* Product Family: GSM 
* Product Group: Prepaid 
* Product Offer Price: 10 
* POP Type: Normal 
* Price Category: Base Price 
* Price Mode: Non-Recurring 
* Product Specification Type: ADDON 
* Data Allowance: 2gb 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:41:23,060 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-09 09:41:23,070 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-09 09:41:23,080 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-09 09:41:29,523 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:41:30,314 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:41:31,955 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:41:32,760 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:41:52,587 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:41:53,113 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:41:54,661 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:41:55,574 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:41:58,939 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:41:59,491 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:42:00,842 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:42:01,632 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-09 09:42:07,597 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:42:08,212 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:42:29,453 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:42:30,994 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: create a product with 10 dollar for 2gb data
* Product Description: create a product with 10 dollar for 2gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:42:53,057 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:42:53,705 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 09:43:00,514 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:43:01,312 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 09:43:19,038 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 09:43:19,653 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 09:43:19,654 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 09:43:20,835 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-09 10:29:49,548 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:29:59,317 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 10:29:59,318 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:29:59,724 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-09 10:30:04,844 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:30:05,423 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 10:30:05,424 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:30:06,589 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the product you'd like to create?
2024-12-09 10:30:17,980 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:30:18,532 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:30:19,891 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:30:20,671 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 10:30:36,996 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:30:37,564 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:30:38,903 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:30:39,728 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 9d data
* Product Description: 9d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 10:30:53,922 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:30:54,560 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:30:55,909 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:30:56,762 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 9d data
* Product Description: 9d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 9
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 10:31:47,295 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:31:47,950 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:31:49,722 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:31:50,345 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I apologize, but I just noticed that the product name "9d data" already exists in our system. Could you please provide an alternative name for your product so we can proceed with the plan?
2024-12-09 10:32:01,779 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:32:03,103 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:32:04,655 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:32:05,491 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 9f data plan
* Product Description: 9d data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 9
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 9gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 10:32:17,624 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:32:18,361 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:33:59,682 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:34:00,179 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 10:34:00,180 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:34:00,639 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-12-09 10:34:22,066 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-09 10:34:29,982 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MIN"
    }
}
```
2024-12-09 10:34:31,445 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 10:34:31,960 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 10:34:32,778 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 10:34:33,610 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MIN

Would you like to update any of these details or proceed as is?
2024-12-09 11:38:20,692 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 11:38:31,166 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 11:38:31,167 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 11:38:31,607 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please provide the details of the offer you'd like to create.
2024-12-09 11:44:09,285 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 11:44:09,865 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 11:44:09,866 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 11:44:10,350 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-09 11:50:40,423 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 11:50:43,474 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 11:50:43,475 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 11:50:43,995 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of the offer you'd like to create?
2024-12-09 12:22:42,920 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:22:51,489 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:22:51,490 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:22:51,959 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, would you like to create a product?
2024-12-09 12:23:01,678 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:23:02,231 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:23:02,232 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:23:02,699 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello, would you like to create a product?
2024-12-09 12:23:12,714 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:23:13,277 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:23:13,278 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:23:13,789 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello, would you like to create a product?"
2024-12-09 12:23:55,424 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:23:55,986 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:23:55,988 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:23:56,461 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-12-09 12:34:50,534 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:34:54,222 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:34:55,621 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:34:56,413 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2GB
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-12-09 12:37:08,485 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:37:09,537 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:37:10,889 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:37:11,743 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: sample 2GB Monthly
* Product Description: sample 2GB Monthly
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2GB
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-12-09 12:37:24,517 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:37:25,134 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:37:26,585 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:37:27,260 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "You've confirmed the details, but we're missing one important piece of information - the price of the 'sample 2GB Monthly' offer. Could you please let me know how much you'd like to charge for this plan?"
2024-12-09 12:40:00,687 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:40:01,258 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:40:01,259 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:40:01,689 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-12-09 12:47:30,601 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:47:35,242 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 12:47:35,243 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:47:35,674 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-09 12:48:06,007 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:48:06,546 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:48:07,906 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:48:08,728 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobility100
* Product Description: mobility100
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 12:48:18,004 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:48:18,576 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:48:19,984 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:48:20,792 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobility100
* Product Description: mobility100
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 12:48:34,715 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:48:35,302 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:48:40,965 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:48:41,769 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobility100
* Product Description: mobility100
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 12:48:48,598 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:48:49,233 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:49:16,211 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:49:17,052 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobility100
* Product Description: mobility100
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 12:49:33,404 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:49:34,025 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 12:49:50,908 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 12:49:51,507 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I noticed that the product price for mobility100 is missing. Can you please provide the price at which you'd like to offer this product to your customers?
2024-12-09 12:50:12,681 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 12:50:13,362 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 13:04:24,346 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:04:34,698 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 13:04:34,699 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:04:35,113 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-09 13:06:20,645 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:06:21,675 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 13:06:23,746 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:06:24,563 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobility111
* Product Description: mobility111
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 13:06:49,143 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:06:49,989 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 13:12:50,903 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:12:51,435 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 13:12:51,436 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:12:51,892 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-09 13:13:03,473 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:13:04,002 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-09 13:13:04,003 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:13:04,432 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-09 13:13:09,808 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:13:10,364 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 13:13:12,413 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:13:13,226 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobility111
* Product Description: mobility111
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-09 13:13:22,557 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 13:13:23,140 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 13:13:24,508 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 13:13:25,107 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I apologize, but it appears that the product name 'mobility111' is already in use in our system. Could you please provide a different product name or would you like me to suggest a modified version of the existing name?
2024-12-09 14:47:48,076 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-09 14:48:01,572 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-12-09 14:48:03,370 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 14:48:15,306 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 14:48:16,293 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 14:48:17,135 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-09 14:48:46,654 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 14:48:47,219 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 14:48:48,755 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 14:48:49,606 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-09 14:49:11,778 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 14:49:17,014 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 14:49:18,623 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 14:49:19,472 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-09 14:49:28,802 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 14:49:29,390 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 14:49:30,784 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 14:49:31,652 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-09 14:49:41,380 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-09 14:49:42,000 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-09 14:50:00,809 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-09 14:50:01,670 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-10 11:31:53,135 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:32:04,691 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-10 11:32:04,693 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:32:05,142 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-10 11:32:15,850 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:32:16,392 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-10 11:32:16,393 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:32:16,857 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me the details of the offer you'd like to create?
2024-12-10 11:35:44,110 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:35:48,468 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:35:49,805 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:35:50,618 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 11:36:14,081 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:36:14,904 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:36:16,498 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:36:17,300 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 11:36:33,507 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:36:34,178 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:36:35,663 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:36:36,525 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 11:36:52,101 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:36:52,749 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:36:56,413 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:36:57,209 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 11:44:28,690 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:44:35,217 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:44:37,659 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:44:38,480 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 30GB Monthly
* Product Description: 30GB Monthly
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 11:44:55,569 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 11:44:56,247 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 11:44:58,766 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 11:45:00,268 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 30GB Monthly
* Product Description: 30GB Monthly
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 12:12:29,231 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-10 12:12:29,241 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-10 12:12:29,252 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-10 12:53:15,458 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 12:53:26,653 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 12:53:37,259 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 12:53:39,263 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: create a product with 2gb data for 10 days
* Product Description: create a product with 2gb data for 10 days
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 2gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 12:54:45,778 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 12:54:46,413 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 12:54:47,798 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 12:54:48,746 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobiledata
* Product Description: mobiledata
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 days
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 12:55:21,422 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 12:55:22,219 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 12:55:27,580 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 12:55:28,675 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobiledata
* Product Description: mobiledata
* Product Family: GSM
* Product Group: postpaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 days
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 12:56:51,988 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 12:56:52,578 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 12:56:55,252 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 12:56:56,817 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobiledata
* Product Description: mobiledata
* Product Family: GSM
* Product Group: postpaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 days
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 14:19:30,320 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:19:39,148 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-10 14:19:39,149 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:19:39,634 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-10 14:20:10,146 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:20:10,779 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 14:20:12,198 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:20:13,796 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: empty
* Product Description: empty
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: empty
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 200 GB
* Voice Allowance: 20 minutes

Would you like to update any of these details or proceed as is?
2024-12-10 14:20:32,864 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:20:33,505 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 14:20:34,909 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:20:35,791 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: voice200
* Product Description: voice200
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non Recurring
* Product Specification Type: ADDON
* Data Allowance: 200 GB
* Voice Allowance: 20 minutes

Would you like to update any of these details or proceed as is?
2024-12-10 14:21:54,292 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:21:54,910 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 14:21:56,537 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:21:57,197 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but before we can proceed with your plan, could you please tell me the offer price for the 'voice200' product you've created with 200 GB data and 20 minutes voice? This is the price that you would like to offer to your customers."
2024-12-10 14:22:12,497 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:22:13,186 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 14:22:15,473 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:22:16,100 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for providing the offer price. However, I also need the standard product price for the 'voice200' product. Could you please tell me what price you would normally sell this product for if it wasn't on offer?"
2024-12-10 14:22:35,168 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:22:35,787 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 14:22:37,092 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 14:22:37,913 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: voice200
* Product Description: voice200
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 200 GB
* Voice Allowance: 20 minutes

Would you like to update any of these details or proceed as is?
2024-12-10 14:22:45,672 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 14:22:48,049 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:00:33,083 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-10 18:00:33,094 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-10 18:00:33,105 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-10 18:01:24,684 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:01:31,263 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-10 18:01:31,265 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:01:31,714 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today? "
2024-12-10 18:02:12,347 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:02:17,175 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:02:18,509 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:02:19,288 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Flexi
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 18:02:35,827 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:02:36,383 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:02:37,886 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:02:38,674 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Flexi
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 18:04:09,310 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:04:09,927 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:04:11,952 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:04:12,721 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Flexi
* Product Description:
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price:
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance:
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-10 18:04:26,109 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:04:26,725 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:04:28,115 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:04:28,891 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-10 18:05:58,023 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-10 18:05:58,671 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-10 18:06:00,079 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-10 18:06:01,355 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Sorry, I didn't quite get the new product name you'd like to use. Could you please provide the name of your product?"
2024-12-10 18:09:45,586 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-10 18:09:45,596 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-10 18:09:45,605 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 11:25:25,849 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 11:25:25,858 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 11:25:25,868 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 11:26:51,490 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 11:26:57,965 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 11:26:57,966 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 11:26:58,396 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-12-11 11:27:11,910 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 11:27:12,446 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 11:27:13,713 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 11:27:14,521 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: datamobile
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 11:27:29,251 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 11:27:29,836 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 11:27:31,117 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 11:27:31,957 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: datamobile
* Product Description: null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Normal
* Price Category: Base Price
* Price Mode: null
* Product Specification Type: ADDON
* Data Allowance: null
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-11 11:45:59,149 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 11:46:06,512 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 11:46:08,147 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 11:46:08,721 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To finalize the datamobile product, could you please provide the offer price or price of the product? This is necessary to move forward with the plan.
2024-12-11 11:46:26,893 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 11:46:27,827 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 11:46:29,609 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 11:46:30,196 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for providing the offer price. However, I noticed we missed one more detail earlier - the Price Mode. Could you please let me know if the price is Recurring or Non-Recurring?"
2024-12-11 15:50:04,575 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 15:50:04,584 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 15:50:04,594 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 15:58:47,716 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 15:59:00,357 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 15:59:00,358 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 15:59:00,836 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-11 15:59:15,393 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 15:59:15,897 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 15:59:17,767 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 15:59:18,576 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Roxi
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 16:00:16,700 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:00:17,231 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:00:19,395 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 16:00:19,912 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "To complete your product details, could you please provide the price of your 'Roxi' product, or what we call the product offer price?"
2024-12-11 16:07:41,603 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:07:45,012 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:07:47,159 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 16:07:47,964 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Roxi
* Product Description: Roxi
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100 dollars
* POP Type: Normal
* Price Category: Base Price
* Price Mode: None
* Product Specification Type: ADDON
* Data Allowance: None
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-11 16:08:19,673 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:08:20,299 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:08:22,601 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 16:08:23,140 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Price mode is missing for your 'Roxi' product. Could you please let me know if it's Recurring or Non-Recurring?"
2024-12-11 16:08:49,145 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:08:49,740 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:08:51,235 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 16:08:51,899 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for updating the price mode. However, I noticed that the product price you provided earlier is in text format as '100 dollars'. Could you please provide the product price as a numerical value, e.g., 100.00?"
2024-12-11 16:09:05,463 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:09:06,102 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:27:36,985 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 16:27:36,994 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 16:27:37,004 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 16:27:51,501 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:28:01,219 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 16:28:03,105 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 16:28:03,888 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robo
* Product Description: robo
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 16:28:24,689 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 16:28:25,196 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 18:12:59,147 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 18:12:59,156 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 18:12:59,166 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 18:16:29,085 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 18:16:29,094 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 18:16:29,104 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 18:17:16,349 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 18:17:32,502 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 18:17:34,260 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 18:17:35,049 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: robox
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: null
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-11 18:18:29,752 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 18:18:30,390 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 18:18:32,497 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 18:18:35,724 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 18:19:06,804 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 18:19:07,352 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 18:51:33,203 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 18:51:33,213 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 18:51:33,223 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 18:54:06,593 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 18:54:06,603 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 18:54:06,613 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 18:58:53,662 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 18:58:53,672 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 18:58:53,681 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:10:32,111 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:10:32,121 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:10:32,131 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:11:01,094 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:11:01,103 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:11:01,113 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:11:34,340 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:11:34,349 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:11:34,359 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:11:59,392 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 19:12:07,797 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 19:15:28,534 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:15:28,543 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:15:28,553 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:15:35,291 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 19:15:35,979 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 19:16:25,841 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:16:25,852 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:16:25,862 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:16:47,738 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 19:16:47,748 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 19:16:47,758 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 19:16:53,688 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 19:16:54,271 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 19:16:54,272 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 19:16:54,717 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today?"
2024-12-11 19:17:57,790 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 19:17:58,473 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 19:18:00,626 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 19:18:01,426 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 20:31:02,075 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 20:31:02,084 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 20:31:02,093 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 20:32:16,427 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:32:25,807 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 20:32:25,808 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 20:32:26,376 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Let's get started! Can you tell me details of product you'd like to create?
2024-12-11 20:32:36,962 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:32:37,500 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:32:41,627 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 20:32:42,439 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roblox
* Product Description: roblox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 20:33:04,268 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:33:04,880 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:41:24,451 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 20:41:24,462 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 20:41:24,471 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 20:41:32,211 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:41:32,853 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:43:41,876 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 20:43:41,885 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 20:43:41,895 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 20:43:47,654 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:43:50,287 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:45:23,642 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 20:45:23,652 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 20:45:23,662 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 20:45:50,234 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:45:50,761 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:48:01,693 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:48:02,261 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 20:48:02,262 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 20:48:02,676 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-11 20:48:38,825 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:48:39,368 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 20:48:41,223 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 20:48:42,063 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rajx
* Product Description: rajx
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 20:49:55,841 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 20:49:55,850 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 20:49:55,860 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 20:50:09,940 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 20:50:10,488 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:02:29,912 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:02:29,923 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:02:29,934 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:02:37,065 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:02:47,434 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:03:50,254 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:03:50,751 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:05:20,945 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:05:20,955 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:05:20,965 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:05:32,101 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:05:32,641 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 21:05:32,643 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:05:33,871 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-11 21:05:50,122 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:05:50,686 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:07:16,293 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:07:16,302 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:07:16,312 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:07:30,598 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:07:31,194 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:07:33,667 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:07:34,143 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "May I kindly request the name of the 5GB product you'd like to create?"
2024-12-11 21:08:29,646 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:08:30,306 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:08:32,878 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:08:33,397 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Thank you for your interest in creating a product with 5GB. Could you please let me know what you would like to name your product?
2024-12-11 21:14:20,681 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:14:20,691 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:14:20,701 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:14:37,292 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:14:40,712 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:14:42,484 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:14:43,075 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for considering a product with 5GB. Before we proceed, could you please let me know the name of the product you would like to create?"
2024-12-11 21:18:33,028 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:18:33,038 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:18:33,048 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:18:44,438 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:18:45,034 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:18:49,053 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:18:49,587 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for considering our product creation services. You mentioned the product storage size as 5GB, which is great. To better understand your requirements, could you please provide a name for your product?"
2024-12-11 21:19:05,601 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:19:06,170 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:19:08,739 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:19:09,247 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for sharing the storage size of 5GB. Can you also please tell me what you'd like to name your product?"
2024-12-11 21:22:23,863 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:22:23,873 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:22:23,883 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:22:35,485 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:22:36,027 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:22:38,254 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:22:38,778 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "That's a great start. To help me create your product plan, can you please tell me what you would like to name your product with 5GB?"
}
2024-12-11 21:24:24,235 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:24:24,245 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:24:24,255 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:24:33,939 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:24:34,814 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:24:38,139 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:24:38,947 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 21:24:58,040 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:25:08,262 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-11 21:25:08,263 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:25:08,766 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: What would you like to change the Price Mode to? It's currently set to Non-Recurring.
2024-12-11 21:28:58,947 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:28:58,957 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:28:58,967 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:29:06,624 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:29:06,634 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:29:06,644 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:29:30,596 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:29:30,605 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:29:30,614 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:29:45,301 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:29:45,880 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:29:47,784 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:29:48,653 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 21:29:58,380 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:29:59,040 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:30:17,829 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:30:18,409 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "Before we proceed, could you please provide the name of your product? We'll make sure to update the details accordingly."
}
2024-12-11 21:36:38,912 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:36:38,921 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:36:38,932 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:36:54,171 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:36:57,539 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:36:59,545 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:37:00,328 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 


Would you like to update any of these details or proceed as is?
2024-12-11 21:37:20,305 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:37:20,844 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:37:42,133 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:37:42,977 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize for missing this earlier. Can you please share the name of your product so we can proceed with creating your plan?"
2024-12-11 21:40:09,599 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-11 21:40:09,608 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-11 21:40:09,617 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-11 21:40:24,791 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:40:25,465 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:40:27,515 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:40:28,350 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 21:40:36,230 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:40:36,783 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:41:11,908 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:41:12,763 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hi, I'm AARYA, your sales executive. We're almost set with your product plan, but I just need a bit more information. Could you please provide the Product Name or the name of the product you'd like to create?"
2024-12-11 21:42:50,093 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:42:50,880 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:42:52,705 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:42:53,494 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roboc
* Product Description: roboc
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: 
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-11 21:43:18,871 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:43:19,429 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:43:30,515 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:43:31,646 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hi, I'm AARYA, your sales executive. We're almost set with your 'roboc' product plan. Could you please let me know the price of the product? In other words, how much would you like to offer this product for?"
2024-12-11 21:44:24,909 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:44:25,559 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:44:27,494 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:44:28,467 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roboc
* Product Description: roboc
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20 dollar
* POP Type: Normal
* Price Category: Base Price
* Price Mode: None
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-11 21:44:54,372 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:44:55,049 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:45:16,146 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:45:16,792 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hi, almost done with your roboc product plan. For the POP type, could you please select one of these options: Normal, Adhoc, or CartLevel?"
2024-12-11 21:48:23,095 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-11 21:48:32,280 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-11 21:48:34,326 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-11 21:48:35,187 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roboc
* Product Description: roboc
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20 dollar
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: null
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-12 11:22:27,427 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 11:22:39,454 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-12 11:22:39,455 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 11:22:39,954 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-12 11:25:00,979 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 11:25:01,515 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 11:25:03,358 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 11:25:04,176 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 11:25:25,657 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 11:25:29,550 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 11:25:37,491 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 11:25:38,056 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Before we proceed, could you please provide a name for your product? This will help us identify and differentiate it from other offerings."
2024-12-12 11:38:14,887 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 11:38:24,382 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 11:38:26,808 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 11:38:27,601 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 11:38:34,182 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 11:38:35,042 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 11:39:33,864 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 11:39:34,404 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I see you'd like to create a product with 3gb data. To proceed, could you please provide a name for this product?
2024-12-12 13:53:57,193 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 13:53:57,205 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 13:53:57,215 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 13:54:24,939 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 13:54:30,341 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 13:54:32,329 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 13:54:33,175 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 13:54:40,672 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 13:54:41,206 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 13:55:05,518 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 13:55:06,045 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please let me know whether you'd like the price mode to be Recurring or Non-Recurring for this product?"
2024-12-12 13:55:29,380 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 13:55:29,958 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 13:56:01,612 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 13:56:02,184 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You had previously mentioned you'd like to change the price mode, but I didn't quite catch the updated option - would you like the price mode to be Recurring or Non-Recurring for this product?
2024-12-12 13:58:03,315 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 13:58:04,174 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 13:58:06,806 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 13:58:07,415 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I'm happy to help you create your plan, however I noticed that we didn't finalize the price mode. Could you please let me know if you would like the price mode to be Recurring or Non-Recurring?
2024-12-12 14:03:00,580 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 14:03:00,590 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 14:03:00,601 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 14:03:11,460 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:03:12,636 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:03:14,868 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:03:15,665 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:03:22,261 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:03:22,852 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:03:48,263 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:03:48,748 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: For the price mode, would you like to set it to Recurring or Non-Recurring?
2024-12-12 14:04:07,434 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:04:07,989 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:04:35,823 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:04:36,600 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:05:09,566 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:05:10,372 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f3b722daa10 state=finished raised AssertionError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 183, in retry_sync
    return process_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/process_response.py", line 143, in process_response
    model = response_model.from_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 147, in from_response
    return cls.parse_tools(completion, validation_context, strict)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 318, in parse_tools
    assert (
AssertionError: Instructor does not support multiple tool calls, use List[Model] instead.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f3b722daa10 state=finished raised AssertionError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f3b722daa10 state=finished raised AssertionError>]
2024-12-12 14:05:32,604 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:05:33,198 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for earlier interaction, however we require some more details from you. To proceed, could you please provide the name of your product (the name you'd like to give to your product)? So we can continue further."
2024-12-12 14:09:10,126 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 14:09:10,135 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 14:09:10,146 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 14:10:09,847 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:10:10,407 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:10:12,164 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:10:12,909 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Product
* Product Description: 

* Product Family: 

* Product Group: 

* Product Offer Price: 

* POP Type: 

* Price Category: 

* Price Mode: 

* Product Specification Type: 

* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:13:25,532 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:13:26,107 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:13:27,806 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:13:28,592 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled


* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:13:47,403 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:13:47,922 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:13:54,195 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:13:54,990 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roxi
* Product Description: roxi
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:14:19,014 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:14:19,589 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:14:55,348 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:14:55,941 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Sorry to ask, but we need to specify the Product Specification Type for Roxi. Can you please let me know if it's an ADDON or Base?"
2024-12-12 14:16:27,148 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:16:27,716 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:16:29,985 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:16:30,793 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roxi
* Product Description: roxi
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:23:19,365 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:23:19,975 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:23:22,149 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:23:22,943 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: roxo
* Product Description: roxo
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:27:57,807 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:28:02,490 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:51:50,716 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 14:51:50,726 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 14:51:50,736 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 14:51:59,718 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:52:09,885 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:52:12,135 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:52:12,958 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: roxo
* Product Description: roxo
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:52:47,889 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:52:48,595 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:52:50,210 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:52:51,345 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but I still need to know the price you'd like to offer for your product Roxo. Could you please let me know how much it will cost?"
2024-12-12 14:53:38,565 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:53:39,965 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f3213e3c4f0 state=finished raised AssertionError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 183, in retry_sync
    return process_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/process_response.py", line 143, in process_response
    model = response_model.from_response(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 147, in from_response
    return cls.parse_tools(completion, validation_context, strict)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/function_calls.py", line 318, in parse_tools
    assert (
AssertionError: Instructor does not support multiple tool calls, use List[Model] instead.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f3213e3c4f0 state=finished raised AssertionError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f3213e3c4f0 state=finished raised AssertionError>]
2024-12-12 14:53:41,847 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:53:42,656 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roxo
* Product Description: roxo
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1 dollar
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 14:53:50,750 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:53:51,450 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:54:02,453 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:54:03,198 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but the product price you've provided, $1, is not valid. Could you please let me know the correct price for Roxo so I can finalize the product plan?"
2024-12-12 14:54:18,851 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:54:19,506 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 14:54:52,072 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 14:54:52,897 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: roxo
* Product Description: roxo
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-12 14:55:07,571 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 14:55:08,493 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:34:08,688 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:34:21,344 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-12 15:34:21,345 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:34:21,749 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-12 15:35:30,792 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-12 15:35:45,349 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
``` 

**Note:** The validity is inferred as 30 days typically for monthly plans. If specified differently in the image, please adjust accordingly.
2024-12-12 15:35:45,978 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:35:46,569 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:35:47,589 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:35:48,747 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100
* Voice Allowance: 0

Would you like to update any of these details or proceed as is?
2024-12-12 15:36:03,556 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:36:04,143 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:36:30,414 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:36:30,937 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You wanted to update the POP Type, could you please let me know which one you'd like to choose from the following options: Normal, Adhoc, or CartLevel?
2024-12-12 15:42:57,618 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:43:00,984 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:43:02,923 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:43:03,956 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-12 15:45:05,318 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:45:06,707 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:45:09,402 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:45:10,325 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide the new Product Name you'd like to update to?
2024-12-12 15:45:23,425 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:45:26,863 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 15:45:49,838 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 15:45:50,683 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G-data
* Product Description: 4G-data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-12 15:55:30,101 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 15:55:40,034 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 16:47:16,671 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 16:47:27,000 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-12 16:47:27,001 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 16:47:27,453 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may I assist you today? "
2024-12-12 16:47:41,494 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 16:47:42,053 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-12 16:47:42,054 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 16:47:42,506 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Kindly provide the details of the product you wish to create.
2024-12-12 16:48:37,142 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 16:48:37,775 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 16:48:39,853 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 16:48:40,712 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 16:52:55,370 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 16:52:56,636 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 16:52:59,320 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 16:52:59,786 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please specify the Product Specification Type, whether it's ADDON or Base?"
2024-12-12 16:53:18,859 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 16:53:19,585 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 16:53:38,440 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 16:53:39,215 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:01:23,681 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:01:27,505 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:01:29,189 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:01:29,745 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Before we proceed, could you please provide a name for your product? This will help identify it correctly in our system."
2024-12-12 17:04:40,255 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:04:40,944 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:04:43,227 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:04:44,036 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobix
* Product Description: mobix
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance 

Would you like to update any of these details or proceed as is?
2024-12-12 17:04:57,470 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:04:58,149 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:05:12,487 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:05:13,326 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobix
* Product Description: mobix
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 30
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 3gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-12 17:05:21,305 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:05:21,968 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:08:26,027 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:08:26,570 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:08:28,592 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:08:29,397 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:08:54,671 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:08:55,266 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:09:05,385 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:09:06,546 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Since this is the case, the last message of the customer did contain the price mode selection  -  "update the price mode to recurring". Yet you're asking for the price mode. Assuming this conversation history isn't in use and it's an example: 

You are missing one thing - the 'Price mode'. What do you want it to be, 'Recurring' or 'Non-Recurring'?
2024-12-12 17:10:16,690 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:10:17,553 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:10:19,321 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:10:19,906 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I just need one more piece of information. Could you please provide the price of the "rlox" product? This is the amount you'd like to charge customers for it.
2024-12-12 17:10:32,219 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:10:32,759 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:10:36,125 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:10:37,638 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:13:11,235 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:13:21,338 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:13:23,038 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:13:23,789 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:16:09,743 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 17:16:09,752 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 17:16:09,762 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 17:16:21,225 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:16:21,739 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:17:24,964 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:17:25,785 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:17:25,791 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:17:26,296 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:17:28,436 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:17:29,257 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:17:29,262 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:17:29,787 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:18:10,966 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:18:11,815 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:18:49,657 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:18:50,209 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:19:10,753 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:19:11,460 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please let me know the 'Price mode' for your plan? It can be either 'Recurring' or 'Non-Recurring'. I'll make sure to update the information accordingly."
2024-12-12 17:19:57,725 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:19:58,308 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:20:00,387 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:20:01,214 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:20:35,564 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:20:36,204 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:21:00,253 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:21:00,790 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please specify the Product Specification Type for your plan? It can be either 'ADDON' or 'Base'."
2024-12-12 17:23:47,752 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:23:51,531 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:23:53,574 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:23:54,436 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: None
* POP Type: Normal
* Price Category: Base Price
* Price Mode: None
* Product Specification Type: Base
* Data Allowance: None
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-12 17:24:38,350 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 17:24:39,002 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 17:24:41,166 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 17:24:41,937 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: 
* Price Category: Base Price
* Price Mode: 
* Product Specification Type: Base
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 17:58:43,982 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-12 17:58:43,992 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-12 17:58:44,002 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-12 18:27:35,635 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 18:27:45,367 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 18:27:47,596 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 18:27:49,088 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: 
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-12 18:28:11,790 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 18:28:12,447 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 18:28:14,896 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 18:28:15,928 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 18:28:39,919 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 18:28:40,511 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 18:29:01,540 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 18:29:02,375 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-12 18:29:17,411 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-12 18:29:18,050 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-12 18:29:50,876 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-12 18:29:51,731 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: rlox
* Product Description: rlox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-16 10:36:56,616 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-16 10:37:09,178 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-16 10:37:09,179 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-16 10:37:09,662 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-16 10:39:24,960 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-16 10:39:35,023 - services.ai_client_service - ERROR - ai_client_service.py:95 - Error in OpenAI image API call: RetryError[<Future at 0x7f95f2226140 state=finished raised RateLimitError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1026, in _request
    return self._retry_request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1075, in _retry_request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1026, in _request
    return self._retry_request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1075, in _retry_request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f95f2226140 state=finished raised RateLimitError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 79, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f95f2226140 state=finished raised RateLimitError>]
2024-12-16 10:39:35,357 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-16 10:39:38,774 - services.ai_client_service - ERROR - ai_client_service.py:95 - Error in OpenAI image API call: RetryError[<Future at 0x7f95f224b790 state=finished raised RateLimitError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_utils/_utils.py", line 274, in wrapper
    return func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/resources/chat/completions.py", line 679, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1260, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 937, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1026, in _request
    return self._retry_request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1075, in _retry_request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1026, in _request
    return self._retry_request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1075, in _retry_request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f95f224b790 state=finished raised RateLimitError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 79, in make_image_api_call
    response = image_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f95f224b790 state=finished raised RateLimitError>]
2024-12-17 16:03:26,936 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 16:03:39,889 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 16:03:39,896 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 16:03:40,357 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 18:13:03,577 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:13:16,211 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:13:16,212 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:13:16,633 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 18:13:21,869 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:13:22,473 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:13:22,474 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:13:22,943 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-12-17 18:15:57,564 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:16:03,673 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:16:03,674 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:16:04,200 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Hello! How may you assist you today?  Would you like to create a product?"
2024-12-17 18:18:19,355 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:18:19,939 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:18:22,120 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:18:23,290 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: 
* Product Group: 
* Product Offer Price: 30
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:21:07,640 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:21:07,650 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:21:07,660 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:21:33,443 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:21:34,038 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:21:35,972 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:21:36,868 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: create product with 3gb data for 5 days
* Product Description: create product with 3gb data for 5 days
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:22:10,518 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:22:11,094 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:22:11,095 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:22:11,524 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 18:22:17,275 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:22:17,825 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:22:19,860 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:22:20,651 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:22:38,977 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:22:39,591 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:23:00,757 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:23:01,324 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "You'd like to change the POP type. Could you please let me know which one you prefer - Normal, Adhoc, or CartLevel?"
}
2024-12-17 18:23:36,395 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:23:39,388 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:23:59,700 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:24:00,251 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: The POP type appears to be missing. Could you please let me know which one you prefer - Normal, Adhoc, or CartLevel?
2024-12-17 18:24:12,985 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:24:13,543 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:24:48,638 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:24:49,522 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:25:41,070 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:25:41,642 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:25:41,643 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:25:42,141 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-17 18:26:12,870 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:26:16,786 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:26:18,494 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:26:19,326 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: robox
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 6gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 18:32:13,338 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:32:13,347 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:32:13,357 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:33:46,928 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:33:55,519 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:33:55,520 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:33:55,925 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-17 18:34:03,105 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:34:03,651 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:34:05,791 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:34:07,248 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 6gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:37:19,382 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:37:19,392 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:37:19,401 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:37:38,455 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:37:43,453 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:37:45,550 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:37:46,374 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: 6gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 18:38:00,524 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:38:01,060 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:38:05,447 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:38:06,260 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robax 

* Product Description: robax 

* Product Family: 

* Product Group: 

* Product Offer Price: 

* POP Type: 

* Price Category: 

* Price Mode: 

* Product Specification Type: 

* Data Allowance: 6gb 

* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:38:35,000 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:38:35,010 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:38:35,020 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:39:20,993 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:39:21,002 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:39:21,011 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:39:27,999 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:39:28,594 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:40:56,869 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:40:56,878 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:40:56,887 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:41:12,938 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:41:13,506 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:41:15,706 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:41:16,548 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: robox
* Product Family: None
* Product Group: None
* Product Offer Price: None
* POP Type: None
* Price Category: None
* Price Mode: None
* Product Specification Type: None
* Data Allowance: 6gb
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-17 18:43:21,015 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:43:21,025 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:43:21,036 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:43:26,284 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:43:26,295 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:43:26,306 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:43:46,528 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:43:46,538 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:43:46,547 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:44:03,296 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:44:07,020 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:44:37,940 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:44:37,950 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:44:37,960 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:44:44,129 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:44:44,733 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:44:46,354 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:44:47,153 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: null
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: 6gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 18:46:16,139 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:46:16,148 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:46:16,157 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:47:50,651 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:47:50,661 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:47:50,673 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:47:58,467 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:48:02,358 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:49:22,322 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:49:22,332 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:49:22,342 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:49:35,640 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:49:35,649 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:49:35,660 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:49:50,584 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:49:51,181 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:49:53,124 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:49:53,935 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: test
* Product Description: None
* Product Family: None
* Product Group: None
* Product Offer Price: None
* POP Type: None
* Price Category: None
* Price Mode: None
* Product Specification Type: None
* Data Allowance: 5gb
* Voice Allowance: None

Would you like to update any of these details or proceed as is?
2024-12-17 18:50:26,890 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 18:50:26,899 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 18:50:26,909 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 18:50:36,160 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:50:36,695 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:50:38,293 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:50:39,072 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: robox
* Product Description: 
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 6gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:50:48,951 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:50:49,526 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:51:32,116 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:51:32,936 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 18:57:36,107 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:57:43,563 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 18:57:43,564 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:57:44,031 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, how are you? Would you like to create a product?
2024-12-17 18:57:58,860 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 18:57:59,531 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 18:58:01,278 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 18:58:02,060 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: 8gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 19:02:33,289 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 19:02:33,298 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 19:02:33,308 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 19:02:42,810 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:02:46,283 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:02:48,235 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:02:49,034 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:04:40,473 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 19:04:40,483 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 19:04:40,492 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 19:04:44,372 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:04:44,939 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:04:46,941 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:04:47,717 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:10:56,954 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 19:10:56,964 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 19:10:56,973 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 19:12:27,547 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 19:12:27,557 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 19:12:27,567 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 19:12:35,087 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:12:38,866 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:12:41,031 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:12:42,193 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:13:07,303 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:13:15,678 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:13:17,602 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:13:18,650 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:14:53,755 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:14:54,310 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:14:56,233 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:14:57,063 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:26:30,570 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:26:35,687 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 19:26:35,688 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:26:36,624 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 19:26:53,207 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:26:53,820 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:26:55,748 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:26:56,558 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:27:24,650 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:27:25,202 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:27:30,829 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:27:31,574 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You wanted to change the POP Type. Could you please let me know which one you'd prefer: Normal, Adhoc, or CartLevel?
2024-12-17 19:29:04,941 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:29:05,527 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:29:08,622 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:29:09,126 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please confirm the POP type for your plan, either Normal, Adhoc, or CartLevel?"
2024-12-17 19:29:22,919 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:29:23,500 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:29:42,227 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:29:43,040 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: null
* Product Description: null
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Cart Level
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: null
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 19:31:48,148 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:31:48,773 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:31:50,831 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:31:51,688 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Cart Level
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: null
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 19:32:04,003 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:32:04,675 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:32:20,082 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:32:20,927 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Cart Level
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 19:32:27,109 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:32:27,954 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:33:20,210 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:33:22,124 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "You've chosen to update the Product Family. What type of product family would you like to choose for 'robox'? The available option is GSM."
2024-12-17 19:33:31,723 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:33:32,433 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:34:07,117 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:34:07,974 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: robox
* Product Description: robox
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Cart Level
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:34:25,221 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:34:25,876 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:34:41,873 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:34:42,519 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "We're almost done. Can you please let me know how much you'd like to charge for the 'robox' plan with 8GB data allowance?"
2024-12-17 19:34:51,710 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:34:52,549 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:35:15,966 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:35:16,709 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I think there's an issue with the plan. Could you please confirm which type of POP you'd like to use for your product with 8GB data? You can choose from Normal, Adhoc, or CartLevel.
2024-12-17 19:35:45,740 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:35:46,393 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:36:03,156 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:36:03,980 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:38:48,574 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:39:01,638 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:39:03,566 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:39:04,350 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:39:17,917 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:39:18,501 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:39:27,876 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:39:28,700 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9d
* Product Description: 9d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:39:44,937 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:39:45,521 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:40:27,709 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:40:28,242 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please let me know which Product Group you'd like to update to - either Postpaid or Prepaid?
2024-12-17 19:40:37,501 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:40:38,118 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:41:14,425 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:41:15,250 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 9d
* Product Description: 9d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:41:49,256 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:41:49,886 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:42:03,345 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:42:04,184 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9d
* Product Description: 9d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:42:24,300 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:42:25,637 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:42:38,491 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:42:39,108 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but the product name '9d' already exists in our system. Could you please provide a different product name to proceed with creating your new product?"
2024-12-17 19:42:53,941 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:42:54,669 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:43:25,921 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:43:26,749 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 9xd
* Product Description: 9xd
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 19:43:47,266 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:43:47,934 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:49:21,641 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:49:27,310 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 19:49:27,311 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:49:27,747 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 19:50:09,896 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:50:10,433 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 19:50:10,434 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:50:10,930 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 19:50:19,810 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:50:20,361 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 19:50:20,362 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:50:20,911 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide more details about what you're looking for?
2024-12-17 19:50:33,301 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:50:33,959 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:50:35,964 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:50:36,789 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:50:59,490 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:51:00,099 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:52:08,017 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:52:08,571 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 19:52:08,572 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:52:08,987 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-17 19:52:31,799 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:52:32,400 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:52:35,150 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:52:36,550 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:52:59,790 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:53:00,369 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:53:11,329 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:53:12,070 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I see you'd like to change the Price Category. To proceed, could you please let me know the new Price Category type? It can be one of the following options: ARP, Base Price, Base Price (addon), CHANGE MSISDN, Change SIM, Change Plan, Discount, DownPayment, EMI, Edit Account, Edit Profile, Edit Service, Installation, One Time, PackAmount, or Termination fee."
2024-12-17 19:53:28,055 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:53:28,636 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:54:10,218 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:54:10,958 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please let me know the price category type for your plan? It can be one of the following options: ARP, Base Price, Base Price (addon), CHANGE MSISDN, Change Plan, Chnage Plan, Discount, DownPayment, EMI, Edit Account, Edit Profile, Edit Service, Installation, One Time, PackAmount, or Termination fee.
2024-12-17 19:57:14,153 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:57:14,784 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:57:16,525 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:57:17,294 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Discount
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 19:58:04,433 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 19:58:05,125 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 19:58:06,976 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 19:58:07,769 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 11ud
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Discount
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:00:24,921 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:00:35,467 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 20:00:35,468 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:00:35,885 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 20:01:17,203 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:01:17,787 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:01:21,476 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:01:22,927 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 19gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:01:39,058 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:01:39,690 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:01:45,841 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:01:46,687 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 11d
* Product Description: 11d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 19gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 20:01:57,439 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:01:58,055 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:02:21,567 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:02:22,159 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Before proceeding, could you please provide the price of the '11d' product, i.e., how much it will cost for the customers?"
2024-12-17 20:02:37,691 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:02:38,305 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:03:09,112 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:03:09,955 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 11d
* Product Description: 11d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 11 dollars
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 19gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:04:31,945 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:04:32,656 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:04:34,149 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:04:34,803 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I apologize, but we need to clarify the product pricing. Could you please confirm the 'Product Offer Price' is indeed 11 dollars, or do we need to adjust it?
2024-12-17 20:05:25,302 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:05:25,933 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:05:28,039 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:05:28,904 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 11d
* Product Description: 11d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 11 dollar
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 19gb
* Voice Allowance: No info

Would you like to update any of these details or proceed as is?
2024-12-17 20:05:37,714 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:05:38,721 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:05:41,827 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:05:42,556 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but it seems there's an issue with the 'Product price' section. Could you please provide a valid price format (e.g., number with currency, e.g., 11 USD) for the product '11d'?"
2024-12-17 20:06:32,300 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 20:06:32,310 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 20:06:32,320 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 20:06:46,292 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:06:46,890 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:06:48,955 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:06:49,769 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 12gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:07:11,032 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:07:11,636 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:07:13,400 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:07:14,234 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 2s
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 12gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:08:01,316 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 20:08:01,325 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 20:08:01,337 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 20:08:19,795 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:08:20,321 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:08:22,433 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:08:23,268 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 13gb
* Product Description: 13gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 13gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:09:17,766 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:09:18,325 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:09:20,293 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:09:21,124 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 13gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:09:35,463 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:09:36,040 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:09:44,229 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:09:45,040 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4s
* Product Description: 4s
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price:
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 13gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 20:10:25,448 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:10:26,022 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:10:47,583 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:10:48,182 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To confirm, the Product Offer Price is $4 and you've mentioned that as well. Could you please provide the product price, which is the final selling price of the product 4s?
2024-12-17 20:11:07,767 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:11:08,319 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:11:32,216 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:11:33,073 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4s
* Product Description: 4s
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 4 dollar
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 13gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:16:29,867 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 20:16:29,876 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 20:16:29,886 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 20:16:33,607 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:16:34,400 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:16:36,985 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:16:37,646 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've updated the price to $6. However, I need to confirm the final selling price of the product. Could you please provide the product price for the product 4s, which is the actual price that customers will pay?
2024-12-17 20:16:55,567 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:16:56,246 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:18:12,654 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:18:13,231 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:18:15,669 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:18:16,477 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 5r
* Product Description: 5r
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:19:00,901 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:19:01,407 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:19:03,392 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:19:04,367 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 5rs
* Product Description: 5rs
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:19:24,249 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:19:24,821 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:19:39,644 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:19:40,242 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I think you may have mentioned the price in dollars, but could you please confirm the price of the product in the desired currency that will be used for offers, as this is required for the plan?
2024-12-17 20:21:18,141 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:21:28,424 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:21:30,526 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:21:31,378 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 5rs
* Product Description: 5rs
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:22:13,907 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:22:14,570 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:22:18,559 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:22:19,199 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but we need to confirm that the product name '5rs' is not already existing in our system. Could you please provide a unique product name or confirm if you are updating an existing product with this name?"
2024-12-17 20:23:20,713 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 20:23:20,722 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 20:23:20,734 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 20:23:23,354 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:23:24,282 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:23:26,493 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:23:27,310 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4e
* Product Description: 4e
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 14gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 20:23:49,457 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:23:50,774 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:24:08,580 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:24:09,204 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please let me know what type of POP you would like to choose for this product? You can choose from three options: Normal, Adhoc, or CartLevel."
2024-12-17 20:24:20,737 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:24:21,425 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:24:57,359 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:24:58,251 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4e
* Product Description: 4e
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 14gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:25:17,822 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:25:18,511 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:27:49,292 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:27:49,849 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 20:27:49,853 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:27:50,324 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-12-17 20:28:35,595 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 20:28:53,529 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-17 20:28:54,680 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:28:55,331 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:28:56,323 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:28:57,199 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-17 20:31:54,684 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:31:57,783 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:31:59,808 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:32:00,632 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 3ed
* Product Description: 3ed
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:32:21,187 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:32:21,756 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:32:37,520 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:32:38,046 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but our system indicates that the product name '3ed' already exists. Could you please provide a different product name or would you like me to suggest alternative options?"
2024-12-17 20:32:51,104 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:32:51,772 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:33:27,015 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:33:27,908 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 44r
* Product Description: 44r
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:33:46,759 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:33:47,374 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:34:18,090 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:34:18,919 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 44r
* Product Description: 44r
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 8
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 20:34:28,275 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:34:28,811 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:35:46,061 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:35:46,609 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 20:35:46,610 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:35:47,107 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-12-17 20:38:13,378 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:38:13,923 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 20:38:13,924 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:38:14,368 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 20:40:48,100 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 20:40:59,698 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "DATA",
    "price": {
        "amount": 50,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 850,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-17 20:41:00,073 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:41:00,733 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:41:01,708 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:41:02,640 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: DATA 850MB
* Product Description: DATA 850MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 850MB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-17 20:41:02,966 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 20:41:08,540 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-17 20:41:10,097 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:41:10,706 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:41:11,693 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:41:12,567 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-17 20:46:11,790 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 20:46:29,378 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-17 20:46:30,298 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 20:46:40,378 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 20:46:41,432 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 20:46:42,296 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-17 21:13:40,883 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:13:51,486 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 21:13:51,487 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:13:51,924 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 21:14:05,429 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:14:06,095 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:14:08,398 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:14:09,222 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mboixd
* Product Description: mboixd
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 21:14:27,185 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:14:27,773 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:14:38,086 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:14:38,919 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mboixd
* Product Description: mboixd
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 21:15:09,282 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:15:09,816 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:15:39,580 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:15:40,192 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You wanted to change the price mode, but I didn't catch the new price mode you'd like to use. Could you please let me know if you'd like the price mode to be Recurring or Non-Recurring?
2024-12-17 21:16:15,648 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:16:16,352 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:16:38,283 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:16:38,921 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You wanted to change the price mode, but I didn't catch the new price mode you'd like to use. Could you please let me know if you'd like the price mode to be Recurring or Non-Recurring?
2024-12-17 21:16:53,758 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:16:55,137 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:17:36,467 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:17:37,046 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I didn't catch the new price mode. Could you please confirm if you'd like the price mode to be 'Recurring' or 'Non-Recurring'?
2024-12-17 21:20:47,916 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 21:21:03,804 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MIN"
    }
}
```
2024-12-17 21:21:05,611 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:21:06,184 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:21:07,034 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:21:07,900 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MIN

Would you like to update any of these details or proceed as is?
2024-12-17 21:26:05,082 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:26:08,558 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:26:10,740 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:26:11,538 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobix
* Product Description: mobix
* Product Family: Null
* Product Group: Null
* Product Offer Price: Null
* POP Type: Null
* Price Category: Null
* Price Mode: Null
* Product Specification Type: Null
* Data Allowance: 5gb
* Voice Allowance: Null

Would you like to update any of these details or proceed as is?
2024-12-17 21:26:46,888 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:26:47,502 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:26:49,448 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:26:50,274 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobix
* Product Description: mobix
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 
 
Would you like to update any of these details or proceed as is?
2024-12-17 21:27:17,115 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:27:17,700 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:27:24,144 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:27:24,994 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobix
* Product Description: mobix
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 30
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 21:27:43,785 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:27:44,397 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:28:25,808 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:28:26,410 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Aarya here, let's finalize your product plan. You mentioned you'd like to change the price mode. Could you please tell me if you prefer the price to be Recurring or Non-Recurring?"
2024-12-17 21:28:58,315 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:28:58,918 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:29:24,569 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:29:25,216 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Aarya here, let's finalize your product plan. You mentioned you'd like to create a plan but the 'Price mode' is missing. Could you please tell me if you prefer the price to be Recurring or Non-Recurring?
2024-12-17 21:29:53,135 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:29:53,702 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:29:59,326 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:29:59,908 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Aarya here, may I kindly request the name of your product for our records, as we move forward with creating your plan?"
2024-12-17 21:36:21,338 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 21:36:21,349 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 21:36:21,360 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 21:38:18,816 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:38:29,868 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:38:31,992 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:38:32,803 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 8gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 21:47:00,709 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 21:47:00,718 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 21:47:00,727 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 21:53:12,298 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:53:14,210 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 21:53:14,211 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:53:14,623 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-17 21:54:14,373 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 21:54:33,379 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-17 21:54:34,399 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 21:54:35,046 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 21:54:36,124 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 21:54:36,999 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-17 22:26:30,293 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 22:26:49,846 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 650,
        "unit": "min"
    }
}
```
2024-12-17 22:26:50,330 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:27:05,774 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:27:06,859 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:27:07,731 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-12-17 22:35:52,441 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 22:36:04,023 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 650,
        "unit": "min"
    }
}
```
2024-12-17 22:36:04,101 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:36:08,464 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:36:10,181 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:36:11,169 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 min

Would you like to update any of these details or proceed as is?
2024-12-17 22:39:34,991 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:39:38,050 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 22:39:38,051 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:39:38,489 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 22:40:26,891 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:40:27,450 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:40:29,719 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:40:30,620 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobile360
* Product Description: mobile360
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 22:41:21,139 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:41:21,772 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:41:23,566 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:41:24,394 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobilerf
* Product Description: mobilerf
* Product Family: 
* Product Group: 
* Product Offer Price: 
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:41:41,861 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:41:42,972 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:41:49,363 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:41:50,194 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobilerf
* Product Description: mobilerf
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: null
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-17 22:43:26,929 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 22:43:26,938 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 22:43:26,947 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 22:43:45,915 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:43:46,665 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:43:49,432 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:43:50,239 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: roco
* Product Description: roco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:44:24,248 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:44:26,356 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:44:28,803 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:44:29,601 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: roco
* Product Description: roco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 22:44:41,885 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:44:42,433 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:44:58,935 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:44:59,859 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: roco
* Product Description: roco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:46:06,290 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:46:06,821 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:46:08,944 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:46:10,168 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: create a product with 10gb data
* Product Description: create a product with 10gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-17 22:46:18,970 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:46:28,265 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:46:33,805 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:46:34,664 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 10gb data product
* Product Description: 10gb data product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:47:44,693 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 22:47:44,703 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 22:47:44,713 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 22:49:53,735 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:49:56,934 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:49:59,063 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:49:59,859 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:51:36,319 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:51:36,860 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:51:38,815 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:51:39,618 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: poco
* Product Description: poco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:56:14,694 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 22:56:14,705 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 22:56:14,716 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 22:56:21,902 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:56:22,473 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:56:24,391 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:56:25,194 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: pouco
* Product Description: poco
* Product Family: 
* Product Group: 
* Product Offer Price: 10
* POP Type: 
* Price Category: 
* Price Mode: 
* Product Specification Type: 
* Data Allowance: 10 days
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 22:58:21,878 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 22:58:21,888 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 22:58:21,899 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 22:58:27,333 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 22:58:30,375 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 22:58:33,018 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 22:58:34,388 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: poco
* Product Description: poco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 days
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:00:00,664 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 23:00:00,674 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 23:00:00,683 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 23:00:05,450 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:00:10,613 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:00:13,110 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:00:14,168 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: poco
* Product Description: poco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:00:24,135 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:00:24,679 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:00:38,228 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:00:39,038 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: poco
* Product Description: poco
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:04:02,410 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:04:02,953 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:04:04,935 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:04:06,380 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:09:21,570 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:09:27,284 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 23:09:27,285 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:09:28,409 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-17 23:22:32,736 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:22:41,112 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:22:43,400 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:22:44,194 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:27:40,988 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:27:41,530 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:27:43,900 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:27:44,689 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:36:21,102 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:36:31,645 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 23:36:31,646 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:36:32,058 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-17 23:37:13,589 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 23:37:33,078 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-12-17 23:37:33,432 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:37:33,980 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:37:35,089 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:37:35,922 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-17 23:40:46,700 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 23:40:46,710 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 23:40:46,719 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 23:41:03,221 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:41:03,828 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 23:41:03,829 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:41:04,349 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: What changes would you like to make to the POP Type for the TELE VOICE product?
2024-12-17 23:41:45,473 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:41:45,947 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:41:48,574 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:41:49,080 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: May I know the new POP type you'd like to set for the TELE VOICE product? You can choose from Normal, Adhoc, or CartLevel.
2024-12-17 23:41:53,005 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:41:53,458 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 23:41:53,459 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:41:53,826 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-17 23:42:42,321 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:42:42,898 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:42:44,703 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:42:45,575 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:43:08,918 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:43:09,463 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-17 23:43:09,464 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:43:09,934 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello, how are you? Would you like to create a product?
2024-12-17 23:50:36,835 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-17 23:50:48,097 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 20",
    "price": {
        "amount": 20,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 34,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 650,
        "unit": "min"
    }
}
```
2024-12-17 23:50:49,221 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:50:52,798 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:50:53,531 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:50:54,555 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 20
* Product Description: Hayyak 20
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 34 GB
* Voice Allowance: 650 minutes

 
Would you like to update any of these details or proceed as is?
2024-12-17 23:51:24,942 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:51:25,485 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:51:27,806 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:51:29,066 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Before we proceed, I want to confirm that the product name 'Hayyak 20' is already existing in our system. Can you please confirm or provide an alternative product name if it's not already in use?"
2024-12-17 23:56:44,402 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-17 23:56:44,414 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-17 23:56:44,425 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-17 23:59:04,140 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:59:04,666 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:59:06,559 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:59:07,319 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobix
* Product Description: mobix
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-17 23:59:16,305 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-17 23:59:16,864 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-17 23:59:46,522 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-17 23:59:47,018 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To update the POP type, I just need to know what value you would like to choose from the options: Normal, Adhoc, or CartLevel.
2024-12-18 00:00:15,030 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:00:15,606 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:00:23,722 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:00:24,358 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To complete your product plan for 'mobix', I need to know the price you'd like to offer for this product. Could you please provide the offer price for 'mobix' with 5gb data and Adhoc POP type?
2024-12-18 00:01:00,044 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:01:09,907 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:01:11,738 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:01:12,654 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but I've found that a product named 'mobix' already exists in our system. Would you like to rename your product or would you like me to help you with something else?"
2024-12-18 00:04:05,472 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:04:06,023 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:04:06,024 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:04:07,310 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-18 00:04:33,046 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:04:33,583 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:04:35,690 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:04:36,508 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4d
* Product Description: 4d
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price:  
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance: 
 
Would you like to update any of these details or proceed as is?
2024-12-18 00:08:54,399 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:08:55,267 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:08:57,017 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:09:00,830 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 4d
* Product Description: 4d
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: 10gb
* Voice Allowance: null

 
Would you like to update any of these details or proceed as is?
2024-12-18 00:09:29,989 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:09:30,617 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:09:30,618 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:09:32,218 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, how are you? Would you like to create a product?
2024-12-18 00:09:40,291 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:09:40,913 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:09:42,606 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:09:43,394 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4d
* Product Description: 4d
* Product Family: null
* Product Group: null
* Product Offer Price: null
* POP Type: null
* Price Category: null
* Price Mode: null
* Product Specification Type: null
* Data Allowance: 10gb
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-18 00:10:31,652 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 00:10:47,866 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "mins"
    }
}
```
2024-12-18 00:10:49,335 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:10:49,829 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:10:50,607 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:10:51,408 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 00:11:11,531 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:11:14,691 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:11:17,027 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:11:18,578 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I apologize, but you'd like to change the Price Mode. Could you please specify whether you want it to be Recurring or Non-Recurring?
2024-12-18 00:11:29,352 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:11:30,559 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:12:08,297 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:12:09,721 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please specify whether you want the Price Mode to be Recurring or Non-Recurring?"
2024-12-18 00:16:51,279 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:16:51,999 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:16:52,001 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:16:53,823 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi! Would you like to create a product?
2024-12-18 00:17:14,769 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:17:17,588 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:17:20,069 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:17:20,900 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobilex
* Product Description: mobilex
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-18 00:17:42,727 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:17:43,274 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:17:59,811 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:18:00,738 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "To update the product group for mobilex, could you please let me know whether you would like it to be Postpaid or Prepaid?"
}
2024-12-18 00:18:20,647 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:18:21,203 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:18:51,321 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:18:52,849 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Mobilex
* Product Description: Mobilex
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 00:19:56,113 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:19:56,735 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:19:58,555 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:19:59,577 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Mobilex
* Product Description: Mobilex
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price: 4
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 00:23:34,114 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:23:40,234 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:26:00,606 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:26:04,032 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:26:04,033 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:26:04,483 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Please click the image upload button on the left to share your image.
2024-12-18 00:26:18,938 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 00:26:33,543 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-12-18 00:26:35,039 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:26:35,537 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:26:36,362 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:26:37,177 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-18 00:26:59,961 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:27:00,504 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:34:11,921 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:34:16,507 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:34:37,453 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:34:37,932 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:35:45,114 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 00:35:45,126 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 00:35:45,139 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 00:36:00,810 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:36:01,619 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:38:22,714 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 00:38:22,724 - services.ai_client_service - INFO - ai_client_service.py:25 - Initialized OpenAI client
2024-12-18 00:38:22,734 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 00:39:55,320 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 00:39:55,331 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 00:39:55,341 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 00:40:04,724 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:40:05,883 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:40:05,885 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:40:06,417 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 00:48:13,171 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:48:21,807 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:48:23,825 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:48:24,685 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobilex
* Product Description: mobilex
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-18 00:49:16,008 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:49:16,576 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:49:16,577 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:49:17,572 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, how are you? Would you like to create a product?
2024-12-18 00:49:48,805 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 00:50:03,751 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "mins"
    }
}
```
2024-12-18 00:50:04,085 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:50:07,094 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:52:57,304 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 00:52:57,314 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 00:52:57,323 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 00:53:32,815 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 00:53:32,824 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 00:53:32,834 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 00:53:50,775 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:53:51,329 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 00:53:51,330 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 00:53:51,748 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 00:54:05,867 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:54:06,959 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:56:24,249 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:56:24,785 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 00:56:40,933 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 00:56:43,523 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 01:02:59,862 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 01:03:03,840 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 01:03:03,841 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 01:03:04,377 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 01:03:36,457 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 01:03:37,338 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:18:19,764 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:18:32,530 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 08:18:32,531 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:18:32,902 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 08:18:42,573 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:18:43,056 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:18:44,771 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:18:45,518 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:19:18,701 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:19:19,295 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:19:21,318 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:19:22,089 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobile120
* Product Description: mobile120
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-18 08:19:46,743 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:19:50,656 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:20:17,709 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:20:19,423 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please let me know if you'd like the price mode to be Recurring or Non-Recurring?"
2024-12-18 08:20:43,615 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:20:44,197 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:22:22,093 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 08:22:34,961 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "ETB"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-12-18 08:22:36,043 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:22:36,637 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:22:37,540 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:22:38,342 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-18 08:23:02,124 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:23:02,885 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:23:05,303 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:23:05,836 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Thank you for deciding to update the POP type. To proceed, could you please let me know what type of POP you would like to choose: Normal, Adhoc, or CartLevel?"
2024-12-18 08:23:16,856 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:23:19,911 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:23:57,577 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:23:58,139 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "The POP type is missing from your request, could you please let me know which type you would like to choose: Normal, Adhoc, or CartLevel?"
2024-12-18 08:24:15,872 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:24:16,467 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:24:48,412 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:24:49,817 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Adhoc
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 GB
* Voice Allowance: 400 MINS

Would you like to update any of these details or proceed as is?
2024-12-18 08:28:17,711 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 08:28:17,722 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 08:28:17,733 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 08:28:33,289 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:28:41,311 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:28:43,058 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:28:43,799 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:29:14,211 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:29:14,713 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:29:23,530 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:29:23,973 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You wanted to change the price mode, could you please specify whether you would like it to be Recurring or Non-Recurring?
2024-12-18 08:29:42,250 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:29:42,751 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:30:21,047 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:30:21,577 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've changed the price mode to Recurring but we still need to determine whether it's 'Recurring' or 'Non-Recurring' initially, could you please provide the initial 'Price mode' you considered for your product?
2024-12-18 08:32:39,570 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 08:32:39,580 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 08:32:39,589 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 08:32:53,358 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:32:56,974 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:32:58,650 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:32:59,408 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:33:07,723 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:33:08,242 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:33:36,696 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:33:37,193 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "And you'd like to change the Price mode. Could you please specify whether it's Recurring or Non-Recurring?"
2024-12-18 08:33:59,750 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:34:00,429 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:34:12,146 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:34:12,688 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "Before we proceed, could you please provide a name for your product so we can identify it easily?"
}
2024-12-18 08:37:15,409 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 08:37:15,419 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 08:37:15,429 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 08:37:25,192 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:37:25,728 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:37:27,390 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:37:28,160 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:37:34,982 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:37:35,526 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:38:08,075 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:38:08,590 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To confirm, you'd like to change the Price Mode. Could you please specify whether you prefer it to be Recurring or Non-Recurring?
2024-12-18 08:38:17,373 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:38:17,955 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:38:55,309 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:38:56,812 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:39:34,613 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:39:35,229 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:39:44,485 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:39:46,143 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobile120
* Product Description: mobile120
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:39:54,499 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:39:55,246 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:40:22,836 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:40:23,460 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I see that you had previously mentioned the price as 5 dollars. Just to confirm, what would be the actual price that the customer would have to pay for the 'mobile120' product, also known as the offer price or the product's price?"
2024-12-18 08:40:43,321 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:40:44,026 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:41:12,788 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:41:13,688 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: mobile120
* Product Description: mobile120
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:42:10,866 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:42:11,637 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:42:14,683 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:42:15,410 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I see that you changed the product name from 'mobile120' to 'mobile360' but forgot to update the rest of the information accordingly. Can you please confirm the actual product name that the customer would see, also known as the product display name or common name?"
2024-12-18 08:42:32,798 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:42:33,569 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:43:03,908 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:43:04,834 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: mobile360
* Product Description: mobile360
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 5
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 7gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-18 08:43:14,761 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:43:15,489 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:54:40,028 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:54:52,445 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 08:54:52,447 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:54:53,841 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 08:55:23,138 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:55:23,656 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:55:25,630 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:55:26,400 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Product
* Product Description: Product
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 3
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:55:56,080 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:55:56,610 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:56:05,194 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:56:05,778 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide a name for this product (e.g. '3GB data for 3 dollars') as I noticed it was initially set and then overwritten, I just want to confirm what would you like to have as the final name for it?"
2024-12-18 08:56:35,653 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:56:36,930 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 08:56:55,669 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 08:56:56,500 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 3GB_Data
* Product Description: 3GB_Data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 3
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 3GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 08:57:05,539 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 08:57:06,105 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:01:48,221 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 09:02:02,563 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Hayyak 7",
    "price": {
        "amount": 7,
        "currency": "OMR"
    },
    "validity": {
        "duration": 28,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 7,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 150,
        "unit": "min"
    }
}
```
2024-12-18 09:02:04,460 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:02:05,135 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:02:05,986 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 09:02:06,885 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Hayyak 7
* Product Description: Hayyak 7
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7 GB
* Voice Allowance: 150 min

Would you like to update any of these details or proceed as is?
2024-12-18 09:03:53,291 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:03:53,807 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:08:07,038 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 09:08:19,149 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Internet Bundle",
    "price": {
        "amount": 6,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 7,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 7,
        "unit": "minute"
    }
}
```
2024-12-18 09:08:20,940 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:08:31,551 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:08:32,418 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 09:08:33,298 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Internet Bundle
* Product Description: Daily Internet Bundle
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7MB
* Voice Allowance: 7minute

Would you like to update any of these details or proceed as is?
2024-12-18 09:09:19,621 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:09:20,202 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:09:22,112 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 09:09:22,985 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily Internet Bundle
* Product Description: Daily Internet Bundle
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7MB
* Voice Allowance: 7 minute

Would you like to update any of these details or proceed as is?
2024-12-18 09:09:35,970 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:09:36,576 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:10:04,599 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 09:10:05,392 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but it seems I didn't receive the updated Product Name for our plan. Could you please provide the new name for the Daily Internet Bundle product?"
2024-12-18 09:10:22,922 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:10:23,560 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 09:10:55,860 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 09:10:57,159 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DailyBundle7MB
* Product Description: DailyBundle7MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 7MB
* Voice Allowance: 7 minute

Would you like to update any of these details or proceed as is?
2024-12-18 09:11:58,629 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 09:11:59,191 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:28:17,414 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:28:27,964 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 11:28:27,965 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 11:28:28,414 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-18 11:29:14,598 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:29:15,154 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:29:17,008 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 11:29:17,883 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10MB
* Voice Allowance: 10 SMS

Would you like to update any of these details or proceed as is?
2024-12-18 11:31:36,207 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:31:36,800 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:31:39,687 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 11:31:40,404 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: I can see you want to create a product. To proceed, could you please provide a name for your product? This will help us identify it.
2024-12-18 11:31:58,550 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:32:01,391 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:32:21,026 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 11:32:22,198 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily10MB
* Product Description: Daily10MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10MB
* Voice Allowance: 10 SMS

Would you like to update any of these details or proceed as is?
2024-12-18 11:34:13,218 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:34:22,643 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:37:39,374 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 11:37:46,841 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 11:37:48,816 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 11:38:02,165 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 11:38:03,250 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 11:38:07,474 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0 MB
* Voice Allowance: 35 MIN

Would you like to update any of these details or proceed as is?
2024-12-18 12:45:43,965 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 12:46:05,937 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 12:46:08,057 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 12:46:12,443 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 12:46:58,094 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 12:47:00,069 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 12:47:03,116 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 12:47:03,943 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've mentioned you'd like to update the product name and provided 'DailyData15MB', so we've got the product name covered. However, just to confirm, can you please share a name for the new product you'd like to create that offers 15MB for 15kshs?
2024-12-18 12:47:20,331 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 12:47:26,692 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f6bead3b070 state=finished raised InstructorRetryException>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2530 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2530 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0d60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0d60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0160 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0160 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead390f0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead390f0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0d00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0d00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b17b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b17b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2920 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2920 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0070 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0070 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28340 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28340 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b700 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b700 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2a2c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2a2c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2bb50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2bb50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b520 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b520 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b5b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b5b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2ba60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2ba60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead282b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead282b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2bdf0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2bdf0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28820 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28820 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beacfaf50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beacfaf50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beacf9240 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beacf9240 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b0a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b0a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b850 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b850 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead39420 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead39420 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead38040 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead38040 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3ba60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3ba60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead39a20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead39a20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3bcd0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3bcd0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3a890 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3a890 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead39720 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead39720 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b070 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b070 state=finished raised InstructorRetryException>]
2024-12-18 12:47:45,244 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 12:47:46,121 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: DailyData15MB
* Product Description: DailyData15MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 12:47:54,928 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 12:47:55,610 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 12:50:32,041 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 12:50:43,723 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 12:50:45,230 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 12:50:45,822 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 12:50:46,736 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 12:50:47,644 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0MB
* Voice Allowance: 35MIN

Would you like to update any of these details or proceed as is?
2024-12-18 13:17:09,617 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:17:23,522 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:17:23,523 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:17:23,962 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:17:38,900 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:17:39,430 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:17:39,431 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:17:39,889 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-18 13:18:46,525 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:18:51,050 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:18:51,051 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:18:51,494 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:19:31,926 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:19:32,515 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:19:34,579 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:19:35,381 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:20:10,676 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:20:18,277 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:20:18,278 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:20:20,715 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:20:44,434 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:20:44,980 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:20:46,952 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:20:47,777 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:21:10,263 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:21:11,145 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:21:26,445 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:21:26,967 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide the name of the product you'd like to create? This will help us to properly set it up for you."
2024-12-18 13:21:37,542 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:21:38,212 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:22:16,077 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:22:16,939 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily15MB
* Product Description: daily15MB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20MB
* Voice Allowance: null

Would you like to update any of these details or proceed as is?
2024-12-18 13:22:32,130 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:22:35,224 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:23:21,057 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:23:21,648 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:23:53,768 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:23:54,272 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "The field Product Name is required to proceed. Could you please provide the name you would like to give to your product?"
2024-12-18 13:24:06,176 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:24:06,772 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:24:42,813 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:24:43,641 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily15MB
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:24:55,800 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:24:56,485 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:25:19,700 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:25:21,160 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize, but the product name 'Daily15MB' is already taken. Could you please provide an alternative name for your product?"
2024-12-18 13:25:37,851 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:25:38,630 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:26:09,276 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:26:30,422 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: Daily15MB_1
* Product Description: Daily15MB_1
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 15
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 15MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:28:49,212 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:28:53,173 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:28:53,174 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:28:53,751 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today? Would you like to create a product?
2024-12-18 13:29:18,297 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:29:27,567 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f6beb439ae0 state=finished raised InstructorRetryException>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2abf0 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2abf0 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29720 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29720 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2afe0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2afe0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29090 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29090 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29510 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29510 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b9a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b9a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2be50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2be50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28160 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28160 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b040 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b040 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28a30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28a30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28e80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28e80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2ab30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2ab30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2a1d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2a1d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2abc0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2abc0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2bd00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2bd00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2a6e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2a6e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b760 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b760 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2a590 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2a590 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead280d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead280d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29420 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29420 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b250 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b250 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2ab90 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2ab90 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28e20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28e20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29cf0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29cf0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2af50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2af50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2b220 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2b220 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29d20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29d20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead28d00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead28d00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead29ff0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead29ff0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beacb3fa0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beacb3fa0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beacb1270 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beacb1270 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beacf8fa0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beacf8fa0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beace3250 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beace3250 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beace11e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beace11e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3ced70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3ced70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cec20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cec20 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3ce9e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3ce9e0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cde70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cde70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cdc60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cdc60 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3ce7d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3ce7d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cd630 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cd630 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cc640 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cc640 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cdab0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cdab0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3cddb0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3cddb0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead2a080 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead2a080 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beb439ae0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beb439ae0 state=finished raised InstructorRetryException>]
2024-12-18 13:29:29,422 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:29:35,742 - services.ai_client_service - ERROR - ai_client_service.py:73 - Error in groq API call: RetryError[<Future at 0x7f6beac74910 state=finished raised InstructorRetryException>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead33490 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead33490 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b010 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b010 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3af50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3af50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead39810 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead39810 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3ad70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3ad70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b0a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b0a0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead38a30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead38a30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3ac80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3ac80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b490 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b490 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead381c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead381c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b220 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b220 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead3b3d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead3b3d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead394b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead394b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bead39d80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bead39d80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0ac0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0ac0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b1780 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b1780 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3070 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3070 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b34c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b34c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0490 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0490 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0d30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0d30 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2680 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2680 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2770 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2770 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b37c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b37c0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0130 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0130 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0190 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0190 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3280 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3280 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0310 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b1900 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b1900 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b1f00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b1f00 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2740 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2740 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0b80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0b80 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3a90 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3a90 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b37f0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b37f0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b2f50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b2f50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b38b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b38b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3f70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3f70 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3af0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3af0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b0460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b0460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b3460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b3460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6bea3b1ed0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6bea3b1ed0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac77190 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac77190 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac76830 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac76830 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac77460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac77460 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac75360 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac75360 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac76020 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac76020 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f6beac74910 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 41, in make_api_call
    response = client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f6beac74910 state=finished raised InstructorRetryException>]
2024-12-18 13:31:29,986 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:31:36,445 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:31:38,420 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:31:39,405 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:32:07,305 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:32:07,886 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:34:34,953 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 13:34:34,963 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 13:34:34,973 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 13:35:07,018 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:35:07,934 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:35:07,935 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:35:08,552 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:35:19,101 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:35:19,664 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:35:21,492 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:35:22,318 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50gb
* Voice Allowance: 

* Would you like to update any of these details or proceed as is?
2024-12-18 13:35:44,270 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:35:44,831 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:36:01,287 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:36:01,860 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello, to create your product, we need a name for it. Could you please tell us what you'd like to name your product with 50GB data for 6Ksh?
2024-12-18 13:40:27,913 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 13:40:27,922 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 13:40:27,931 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 13:40:41,709 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:40:52,226 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:40:52,227 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:40:52,900 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:41:07,940 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:41:08,833 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:41:10,844 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:41:20,033 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:41:34,001 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:41:36,672 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:41:50,216 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:41:51,221 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide a name for your product so I can proceed with creating the plan?"
2024-12-18 13:42:30,209 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:42:30,846 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:42:50,030 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:42:50,706 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "I apologize for the confusion earlier. You mentioned you wanted to update the product name, but I still need to confirm the exact name you'd like to give your product, e.g. Daily Data 5. Could you please provide a specific name for your product so I can proceed with creating the plan?"
2024-12-18 13:43:11,314 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:43:11,974 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:43:39,420 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:43:42,644 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: daily data 5
* Product Description: daily data 5
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:53:24,607 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 13:53:24,618 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 13:53:24,629 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 13:54:34,622 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:54:43,864 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 13:54:43,866 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:54:44,505 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 13:54:55,978 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:54:56,541 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:54:58,376 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:55:00,044 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 13:55:14,106 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 13:55:14,704 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 13:55:38,094 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 13:55:46,742 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Can you please provide the name of the product you'd like to create?
2024-12-18 14:04:41,101 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 14:04:41,110 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 14:04:41,119 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 14:05:09,617 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:05:22,947 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:05:22,948 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:05:23,263 - services.ai_client_service - ERROR - ai_client_service.py:73 - Error in groq API call: RetryError[<Future at 0x7f9e33415f60 state=finished raised InternalServerError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f9e33415f60 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 41, in make_api_call
    response = client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f9e33415f60 state=finished raised InternalServerError>]
2024-12-18 14:05:56,437 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:05:56,780 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f9e334173d0 state=finished raised InstructorRetryException>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f9e33416ef0 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f9e33416ef0 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f9e334173d0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f9e334173d0 state=finished raised InstructorRetryException>]
2024-12-18 14:05:58,573 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:05:59,583 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:07:09,334 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:07:11,566 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:07:11,567 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:07:12,709 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 14:07:40,204 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:07:41,552 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:07:43,407 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:07:44,638 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:07:53,596 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:07:54,554 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:08:24,086 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:08:24,859 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: What would you like to name your daily data pack product, since we need a name to proceed with creating it?
2024-12-18 14:13:01,287 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 14:13:01,296 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 14:13:01,305 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 14:13:12,581 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:13:13,176 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:13:13,177 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:13:13,615 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 14:13:19,344 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:13:23,027 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:13:24,832 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:13:29,161 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: [empty]
* Product Description: [empty]
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 6
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50 GB
* Voice Allowance: [empty]

Would you like to update any of these details or proceed as is?
2024-12-18 14:13:44,679 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:13:45,913 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:14:05,276 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:14:06,362 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: {
  "role": "assistant",
  "content": "To confirm, could you please provide the name of the product you would like to create?"
}
2024-12-18 14:15:30,009 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 14:15:30,018 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 14:15:30,029 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 14:15:54,673 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:15:59,912 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f232ae7d7b0 state=finished raised BadRequestError>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.BadRequestError: Error code: 400 - {'error': {'message': "Failed to call a function. Please adjust your prompt. See 'failed_generation' for more details.", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': ' {"classification": "general_conversation"}'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f232ae7d7b0 state=finished raised BadRequestError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f232ae7d7b0 state=finished raised BadRequestError>]
2024-12-18 14:16:02,135 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:16:02,957 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:16:21,799 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:16:22,476 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:16:22,477 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:16:22,923 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 14:16:42,420 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:16:52,353 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:16:54,882 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:16:56,001 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:17:15,522 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:17:20,447 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:17:55,242 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:17:55,762 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: "Could you please provide a name for your product so we can proceed with creating the plan?"
2024-12-18 14:24:45,534 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 14:24:45,543 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 14:24:45,553 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 14:25:41,369 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:25:41,947 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:25:41,949 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:25:42,406 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hi, how are you? Would you like to create a product?
2024-12-18 14:25:49,542 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:25:50,078 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:25:51,891 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:25:52,808 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:26:00,730 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:26:08,616 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:26:25,803 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:26:28,603 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily6gb
* Product Description: daily6gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance:

Would you like to update any of these details or proceed as is?
2024-12-18 14:50:45,164 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:50:59,585 - services.ai_client_service - ERROR - ai_client_service.py:149 - Error in classification API call: RetryError[<Future at 0x7f398a4e38b0 state=finished raised InstructorRetryException>]
Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/resources/chat/completions.py", line 287, in create
    return self._post(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 936, in request
    return self._request(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/groq/_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f398a4e2b30 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f398a4e2b30 state=finished raised InternalServerError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f398a4e2290 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f398a4e2290 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f398a4e2c50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 180, in retry_sync
    response = func(*args, **kwargs)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f398a4e2c50 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 177, in retry_sync
    for attempt in max_retries:
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/tenacity/__init__.py", line 419, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x7f398a4e38b0 state=finished raised InstructorRetryException>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/upc_bot/upc_bot/services/ai_client_service.py", line 119, in make_classification_call
    response = patched_client.chat.completions.create(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/patch.py", line 143, in new_create_sync
    response = retry_sync(
  File "/opt/env/anaconda/envs/upc/lib/python3.10/site-packages/instructor/retry.py", line 215, in retry_sync
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: RetryError[<Future at 0x7f398a4e38b0 state=finished raised InstructorRetryException>]
2024-12-18 14:51:01,652 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:51:02,526 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:51:34,953 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:51:37,001 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 14:51:37,003 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:51:39,115 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 14:51:48,093 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:51:48,634 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:51:50,563 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:51:52,154 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:52:00,887 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:52:11,742 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:52:23,666 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:52:29,512 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled

* Product Name: daily6gb
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 14:52:51,750 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:52:52,386 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:53:26,820 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:53:27,799 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You mentioned you want to change the price mode. Could you please specify if you'd like it to be Recurring or Non-Recurring?
2024-12-18 14:53:48,971 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 14:53:54,533 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 14:54:26,179 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 14:54:27,682 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You initially mentioned Recurring as the price mode, however this is no longer in the product specification. Could you please confirm if you'd like the Price mode to be Recurring or Non-Recurring for the daily6gb product?
2024-12-18 15:13:27,240 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 15:13:27,250 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 15:13:27,260 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 15:13:58,942 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:14:08,669 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:14:08,670 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:14:09,890 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:15:04,083 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:15:04,648 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:16:08,192 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:16:09,140 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:16:09,146 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:16:09,670 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:16:11,781 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:16:12,748 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 5gb data
* Product Description: 5gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:17:35,784 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:17:36,353 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:17:36,354 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:17:36,849 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:17:46,244 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:17:46,800 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:17:48,614 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:17:49,561 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:18:00,158 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:18:00,745 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:18:02,997 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:18:04,032 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily6gb
* Product Description: daily6gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:18:12,814 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:18:13,382 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:18:20,344 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:18:20,844 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with updating the price mode, could you please specify whether you would like it to be Recurring or Non-Recurring?
2024-12-18 15:18:29,734 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:18:37,789 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:18:52,457 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:18:53,231 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily6gb
* Product Description: daily6gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 5
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:19:32,847 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:19:33,449 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:19:35,842 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:19:36,351 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To update the product group, could you please let me know whether you would like it to be Postpaid or Prepaid?
2024-12-18 15:19:42,977 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:19:55,044 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:20:08,614 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:20:09,370 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily6gb
* Product Description: daily6gb
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: ADDON
* Data Allowance: 5
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:20:35,793 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:20:36,376 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:20:53,826 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:20:54,404 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've updated the product specification to 'basic', but I need a bit more information. Could you please confirm if the Product Specification type is 'ADDON' or 'Base'?
2024-12-18 15:21:06,578 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:21:15,522 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:21:29,758 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:21:30,682 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: daily6gb
* Product Description: daily6gb
* Product Family: GSM
* Product Group: Postpaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Recurring
* Product Specification Type: Base
* Data Allowance: 5
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:21:30,688 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:21:42,565 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:21:42,566 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:21:42,959 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:22:00,600 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:22:01,171 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:22:01,172 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:22:01,607 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:22:17,322 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:22:17,901 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:22:22,002 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:22:22,746 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: data5
* Product Description: data5
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:22:44,649 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:22:45,327 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:22:52,530 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:22:53,498 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 5gb data
* Product Description: 5gb data
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 10
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:23:53,172 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:23:53,769 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:23:56,657 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:23:57,399 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with creating your product plan, could you please specify the Product Specification type, which can be either 'ADDON' or 'Base'? Your current specification is listed as 'basic', but I need to confirm if it should be 'ADDON' or 'Base' to accurately update your product details.
2024-12-18 15:26:35,181 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:26:38,385 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:26:38,386 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:26:39,513 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:27:00,315 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:27:00,904 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:27:02,766 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:27:03,683 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:27:25,431 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:27:25,987 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:27:27,923 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:27:28,711 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily 20GB
* Product Description: Daily 20GB
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:27:36,294 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:27:37,424 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:29:07,551 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:29:16,740 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "Daily Internet Bundle",
    "price": {
        "amount": 7,
        "currency": "OMR"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 10,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 10,
        "unit": "minute"
    }
}
```
2024-12-18 15:29:16,855 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:29:17,634 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:29:18,515 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:29:19,615 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: Daily Internet Bundle
* Product Description: Daily Internet Bundle
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 7
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 10 MB
* Voice Allowance: 10 minute

Would you like to update any of these details or proceed as is?
2024-12-18 15:29:34,939 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:29:35,509 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:29:37,396 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:29:38,376 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:30:42,713 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 15:30:42,722 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 15:30:42,731 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 15:30:48,289 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:30:48,905 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:30:48,907 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:30:49,344 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:30:56,352 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:30:56,913 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:30:59,036 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:30:59,822 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:31:07,334 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:31:07,909 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:31:10,164 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:31:10,970 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:31:20,007 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:31:20,552 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:31:22,400 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:31:23,224 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:31:38,197 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:31:38,891 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 15:31:38,892 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:31:39,285 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 15:31:49,292 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:31:58,527 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 15:32:00,818 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:32:01,910 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:32:03,067 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:32:04,385 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 15:32:04,687 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:32:07,675 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "TELE VOICE",
    "price": {
        "amount": 100,
        "currency": "BRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 400,
        "unit": "MINS"
    }
}
```
2024-12-18 15:32:09,277 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:32:09,951 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:32:10,855 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:32:11,638 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: TELE VOICE
* Product Description: TELE VOICE
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 100
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 400

Would you like to update any of these details or proceed as is?
2024-12-18 15:32:16,254 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:32:22,055 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-18 15:32:23,350 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:32:23,919 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:32:24,823 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:32:25,630 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 15:32:48,363 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:32:49,088 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:32:51,294 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:32:52,117 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb
* Product Description: 20Gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 15:33:33,137 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:33:33,877 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:33:36,293 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:33:37,071 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb
* Product Description: 20Gb
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 15:33:56,224 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:33:56,821 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:33:58,745 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:34:00,305 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:34:06,442 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:34:07,133 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:34:09,114 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:34:09,904 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:34:25,783 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:34:26,366 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:34:33,761 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:34:34,572 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:34:57,948 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:34:58,523 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:35:02,805 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:35:03,595 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 30Gb for 60$
* Product Description: 30Gb for 60$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 60
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 30Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:35:13,524 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:35:19,458 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:35:34,397 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:35:35,229 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:37:28,887 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:37:43,169 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:37:45,021 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:37:46,036 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:38:02,303 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 15:38:02,313 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 15:38:02,322 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 15:38:09,580 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:38:10,158 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:38:12,241 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:38:13,041 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20Gb for 20$
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:43:17,164 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 15:43:17,173 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 15:43:17,183 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 15:43:20,736 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:43:21,318 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:43:23,323 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:43:24,095 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 20Gb for 20$
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:43:39,781 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:43:40,315 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:43:42,260 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:43:43,085 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 20
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20 GB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:45:37,150 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:45:37,705 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:45:39,508 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:45:40,680 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 30
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 40Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:46:21,128 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:46:21,707 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:46:24,629 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:46:25,140 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've mentioned the new price as $50, but I just want to confirm: what is the final offer price or the price of the product you'd like to set for this updated plan?
2024-12-18 15:46:37,522 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:46:38,278 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:46:40,133 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:46:40,880 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 50
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 40Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:50:39,746 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:50:43,746 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:50:46,184 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:50:46,720 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Could you please provide a product name for this plan, as the one you're attempting to create may already exist in our system?
2024-12-18 15:51:58,019 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:52:06,950 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-18 15:52:07,934 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:52:08,500 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:52:09,685 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:52:10,502 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 15:52:24,928 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:52:25,617 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:52:27,594 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:52:28,357 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 90
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 11Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 15:52:30,618 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 15:52:33,917 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 15:52:35,246 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:52:35,809 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:52:36,714 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:52:37,530 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 15:52:51,400 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:52:52,131 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:52:55,000 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:52:55,484 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with creating your product, could you please provide a unique product name, as the one you might be thinking of is already existing in our system?
2024-12-18 15:53:10,269 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 15:53:10,998 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 15:53:12,960 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 15:53:13,718 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 90
* Pop Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 666Gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 16:21:28,886 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:21:39,527 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:21:39,528 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:21:39,920 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:23:51,455 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 16:24:06,013 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 16:24:06,679 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:24:07,234 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:24:08,486 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:24:09,297 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 16:32:31,945 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:32:36,934 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:32:36,935 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:32:37,327 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:32:57,755 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:32:58,335 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:33:00,528 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:33:01,433 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 2
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 16:33:12,005 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:33:12,859 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:33:14,747 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:33:15,281 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with creating your product, could you please provide a name for your product that offers 50MB for $2? This will help us to move forward with the plan.
2024-12-18 16:33:43,865 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:33:44,787 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:33:46,893 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:33:47,845 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 50MB daily 2$
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 2
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 50MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 16:34:51,475 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:34:52,120 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:34:52,122 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:34:52,617 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:35:23,660 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:35:24,293 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:35:24,294 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:35:24,738 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:37:33,725 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:37:34,307 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:37:34,308 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:37:34,747 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:37:49,540 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 16:37:58,553 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 16:37:58,922 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:37:59,519 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:38:00,529 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:38:01,415 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 16:42:00,897 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:42:01,482 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:42:01,483 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:42:01,881 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:42:11,398 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 16:42:25,338 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: Here’s the extracted data based on the provided image:

```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```

Here's the breakdown of the extracted information:
- **Product Name:** "35MIN @Ksh.35" as seen in the image.
- **Price:** 35 confirmed as the amount with "Ksh" as the currency.
- **Validity:** 1 day as indicated.
- **Data Allowance:** Not specified in the image, hence 0 MB.
- **Voice Allowance:** 35 MIN as shown in the image.
2024-12-18 16:42:27,579 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:42:28,151 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:42:29,089 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:42:29,916 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 16:53:58,938 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:54:11,730 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:54:11,731 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:54:12,138 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:55:15,246 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:55:15,815 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 16:55:15,816 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:55:16,226 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 16:55:56,825 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 16:56:07,892 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 16:56:09,911 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:56:10,480 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:56:11,676 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:56:12,491 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 16:56:48,435 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:56:49,166 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:56:52,337 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:56:53,087 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You've mentioned changing the Product Specification Type to 'Basic', but I want to confirm that our system only recognizes 'ADDON' or 'Base' for this field. Could you please clarify which one of these options you would like to choose?
2024-12-18 16:57:00,378 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 16:57:00,940 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 16:57:02,828 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 16:57:03,639 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: Base
* Data Allowance: None
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 17:01:59,456 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 17:02:11,311 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 17:02:13,427 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:02:17,141 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:02:18,073 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:02:18,891 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 17:02:54,159 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:02:54,778 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:04:06,431 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:04:06,996 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:04:09,079 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:04:09,818 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 2
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 17:04:31,505 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:04:32,227 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:04:34,822 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:04:35,325 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: You'd like to update the product name, great. To proceed, could you please provide the name you'd like to give to your product that offers 20MB for $2?
2024-12-18 17:04:58,241 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:04:58,801 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:05:01,533 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:05:02,307 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 20MB Daily 2$
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 2
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 20MB
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 17:05:15,419 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:05:15,992 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:31:59,756 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:32:09,070 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 17:32:09,072 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:32:09,479 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 17:32:46,543 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 17:32:56,478 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "35MIN @Ksh.35",
    "price": {
        "amount": 35,
        "currency": "Ksh"
    },
    "validity": {
        "duration": 1,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 0,
        "unit": "MB"
    },
    "voice_allowance": {
        "amount": 35,
        "unit": "MIN"
    }
}
```
2024-12-18 17:32:57,169 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:32:57,720 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 17:32:58,899 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:32:59,940 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 35MIN @Ksh.35
* Product Description: 35MIN @Ksh.35
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 35
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 0
* Voice Allowance: 35

Would you like to update any of these details or proceed as is?
2024-12-18 17:47:58,862 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 17:48:09,437 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 17:48:09,438 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 17:48:09,829 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 18:01:44,788 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:01:44,797 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:01:44,807 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:03:57,768 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 18:04:24,457 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: Here is the extracted data in JSON format based on the provided image:

```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```

### Notes:
- The price is confirmed as 1,250.
- Validity assumed as monthly, hence set to 30 days.
- Voice allowance is assumed as zero since none is specified in the image.
2024-12-18 18:04:24,543 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:04:35,275 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:04:36,203 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:04:37,005 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 18:05:02,969 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 18:05:15,420 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-18 18:05:16,924 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:05:17,492 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:05:18,388 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:05:19,209 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 18:07:51,270 - services.ai_client_service - INFO - ai_client_service.py:78 - Making image API call to OpenAI
2024-12-18 18:08:16,629 - services.ai_client_service - DEBUG - ai_client_service.py:92 - OpenAI image API response: ```json
{
    "product name/plan name": "4G WI-FI",
    "price": {
        "amount": 1250,
        "currency": "BIRR"
    },
    "validity": {
        "duration": 30,
        "unit": "day"
    },
    "data_allowance": {
        "amount": 100,
        "unit": "GB"
    },
    "voice_allowance": {
        "amount": 0,
        "unit": "minutes"
    }
}
```
2024-12-18 18:08:16,832 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:08:17,562 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:08:18,439 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:08:19,240 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 4G WI-FI
* Product Description: 4G WI-FI
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 1250
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 100 GB
* Voice Allowance: 0 minutes

Would you like to update any of these details or proceed as is?
2024-12-18 18:12:35,190 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:12:35,199 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:12:35,209 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:12:46,689 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:12:47,446 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:12:47,448 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:12:47,840 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 18:13:06,080 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:13:06,847 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:13:06,848 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:13:07,236 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-18 18:13:30,799 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:13:31,546 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:13:31,547 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:13:31,964 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! Would you like to create a product?
2024-12-18 18:15:47,752 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:15:47,762 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:15:47,772 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:22:41,449 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:22:51,754 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:22:51,755 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:22:52,133 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 18:31:56,937 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:31:56,947 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:31:56,957 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:32:05,555 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:32:06,353 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "general_conversation"}
2024-12-18 18:32:06,355 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:32:06,741 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Hello! How may I assist you today?
2024-12-18 18:32:30,592 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:32:31,160 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:32:33,421 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:32:34,167 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: Here are the details of your product with all mandatory default parameters enabled
* Product Name: 
* Product Description: 
* Product Family: GSM
* Product Group: Prepaid
* Product Offer Price: 
* POP Type: Normal
* Price Category: Base Price
* Price Mode: Non-Recurring
* Product Specification Type: ADDON
* Data Allowance: 5gb
* Voice Allowance: 

Would you like to update any of these details or proceed as is?
2024-12-18 18:36:17,041 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:36:17,051 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:36:17,061 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:36:36,425 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:36:39,895 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:39:06,104 - services.ai_client_service - INFO - ai_client_service.py:19 - Initializing AI clients
2024-12-18 18:39:06,113 - services.ai_client_service - INFO - ai_client_service.py:22 - Initialized Groq client
2024-12-18 18:39:06,122 - services.ai_client_service - INFO - ai_client_service.py:35 - Initialized OpenAI image client
2024-12-18 18:39:16,551 - services.ai_client_service - INFO - ai_client_service.py:110 - Making classification API call
2024-12-18 18:39:17,140 - services.ai_client_service - DEBUG - ai_client_service.py:145 - Classification API response: {"classification": "product_related"}
2024-12-18 18:39:19,451 - services.ai_client_service - INFO - ai_client_service.py:39 - Making API call to groq
2024-12-18 18:39:19,926 - services.ai_client_service - DEBUG - ai_client_service.py:50 - Groq API response: To proceed with updating the POP type, could you please let me know which type you would prefer: Normal, Adhoc, or CartLevel?
